[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "Raw data files\nAs previously mentioned, the folder 01_RawData folder contains all the raw files I obtained to estimate the effect of air quality health advisories on school absences.\n01_schools includes all files related to school absences and school characteristics in New York City. 02_AQI has the data on the air quality index forecast from the NYSDEC and the AQI measures from the EPA. 03_weather contains several data files of weather covariates. 04_shp is a repository of shape (or spatial) files. And 05_dem includes data on neighborhood-level socio-demographic characteristics from the US Census Buro.\n\n\n\n\n\nFootnotes\n\n\nI recommend downloading the files to an external hard drive to avoid memory issues↩︎"
  },
  {
    "objectID": "01_data.html",
    "href": "01_data.html",
    "title": "Data Sets",
    "section": "",
    "text": "Footnotes\n\n\nThe data is not publicly available. Instead, we sent an email to the NYSDEC asking them to provide the forecasted values under the freedom of information act. They were kind enough to give the entirety of predicted dates between 2008 and 2018↩︎"
  },
  {
    "objectID": "02_DescStatistics.html",
    "href": "02_DescStatistics.html",
    "title": "Descriptive Statistics",
    "section": "",
    "text": "Show the Code\n# Set the path of the R-studio project\nfile = \"~/Dropbox (Personal)/DIW/NYC school absenses/\"\n# Load the economic covariates at the Nta level\necon = read_rds(paste0(file, \"02_GenData/03_dem/econ.rds\"))\ndem = read_rds(paste0(file, \"02_GenData/03_dem/dem.rds\"))\nasthma = read_rds(paste0(file, \"02_GenData/03_dem/AsthmaHosp.rds\"))\n# Load the location of all schools\nlocation = read_rds(paste0(file, \"02_GenData/01_schools/location.rds\"))\n# Load the data set on absenteeism\nabsent = read_rds(paste0(file, \"02_GenData/RawAbsences.rds\")) |> ungroup()\nNtaAbsent = left_join(absent |> filter(DayType == \"NormalDay\"), location) |>  group_by(nta, date) |> \n  summarise_at(vars(enrolled, absent, released), sum, na.rm = T)\n# Load the shapefile of city boroughs\nBoroShp = st_read(paste0(file, \"01_RawData/04_shp/02_bgh\"), quiet = T)%>% st_transform(., crs = 4326) %>% st_simplify(., preserveTopology = T)\n# Load the shapefile on city neighborhoods\nNtaShp = st_read(paste0(file, \"01_RawData/04_shp/03_ngh\"), quiet = T)%>% st_transform(., crs = 4326) %>% st_simplify(., preserveTopology = T)\n\n\nThe following maps describe the spatial distribution of schools, income, race, and asthma-related hospitalizations in NYC.\n\nSchools in NYCIncomeShare of whitesAsthma Hosp. Rate\n\n\n\n\nShow the Code\n# Create the plot data\n# Simplify the shapefile\nBoroShp  = st_transform(BoroShp, crs = 4326) %>% \n  st_simplify(., preserveTopology = T)\n# Transform the locations data frame into a spatial object\nlocation = st_as_sf(location, coords = c(\"lon\", \"lat\"), crs = 4326)\n# Plot the map of schools in New York\ntmap_style(\"classic\"); tm_graticules(labels.inside.frame = T, labels.show = F) +\n  tm_shape(BoroShp) + tm_polygons()  + tm_shape(location) +\n  tm_dots(size = 0.025, col = \"SchoolType\", palette = \"Dark2\", title = \"Type of School\") + \n  tm_compass(type = \"rose\", position = c(\"right\", \"top\"), size = 2) +\n  tm_scale_bar(width = 0.2, position = c(\"right\", \"bottom\"), text.size = 1)\n\n\n\n\n\nFigure 1: Schools over New York City\n\n\n\n\n\n\n\n\nShow the Code\n# Create the plot data\n# Simplify the shapefile\nplot  = left_join(NtaShp, econ |>  mutate(MedianIncome = MedianIncome/1000))\n# Plot the map of schools in New York\ntmap_style(\"classic\"); tm_graticules(labels.inside.frame = T, labels.show = F) +\n  tm_shape(plot) +\n  tm_fill(col = \"MedianIncome\", style = \"quantile\", n = 10, \n          title = \"Median Income (Ths.)\",  \n          palette = \"RdBu\", colorNA = \"black\", textNA = \"No Data\")  +\n  tm_borders(lwd = 0.5) +\n  tm_compass(type = \"rose\", position = c(\"right\", \"top\"), size = 2) +\n  tm_scale_bar(width = 0.2, position = c(\"right\", \"bottom\"), text.size = 1)\n\n\n\n\n\nFigure 2: Average Income across NYC neighborhoods\n\n\n\n\n\n\n\n\nShow the Code\n# Create the plot data\n# Simplify the shapefile\nplot  = left_join(NtaShp, dem)\n# Plot the map of schools in New York\ntmap_style(\"classic\"); tm_graticules(labels.inside.frame = T, labels.show = F) +\n  tm_shape(plot) +\n  tm_fill(col = \"ShareWhite\", style = \"quantile\", n = 10,\n          title = str_wrap(\"Share of Persons Identifying as White\", width = 25),\n          palette = \"RdBu\", colorNA = \"black\", textNA = \"No Data\")  +\n  tm_borders(lwd = 0.5) +\n  tm_compass(type = \"rose\", position = c(\"right\", \"top\"), size = 2) +\n  tm_scale_bar(width = 0.2, position = c(\"right\", \"bottom\"), text.size = 1)\n\n\n\n\n\nFigure 3: Share of white persons per neighborhood\n\n\n\n\n\n\n\n\nShow the Code\n# Create the plot data\n# Simplify the shapefile\nplot  = left_join(NtaShp, asthma)\n# Plot the map of schools in New York\ntmap_style(\"classic\"); tm_graticules(labels.inside.frame = T, labels.show = F) +\n  tm_shape(plot) +\n  tm_fill(col = \"HospChildrenRate\", style = \"quantile\", n = 10,  \n          title = str_wrap(\"Children Hospitalization Rate (Cases per 10,000 Kids)\", width = 30),\n          palette = \"RdBu\", colorNA = \"black\", textNA = \"No Data\")  +\n  tm_borders(lwd = 0.5) +\n  tm_compass(type = \"rose\", position = c(\"right\", \"top\"), size = 2) +\n  tm_scale_bar(width = 0.2, position = c(\"right\", \"bottom\"), text.size = 1)\n\n\n\n\n\nFigure 4: Children hospitalization rate per neighborhood\n\n\n\n\n\n\n\nFigure 1 shows the location of all schools by type. Schools spread around the city, with significant clusters in South Bronx, North Manhattan, and Brooklyn. For Staten Island and Queens, the distance between schools is more prominent than for the Bronx or Manhattan. The data set contains 856 elementary schools, 495 high schools, 379 junior high schools, 267 kindergarten to eighth-grade schools (K8), 145 secondaries, 109 kindergarten to twelfth-grade schools (K12), 2 early childhood, and two ungraded.\nFigure 2 portrays the median neighborhood income in 2016, according to the American Community Survey. As expected, we can find the city’s wealthier areas in Manhattan, Staten Island, and West Brooklyn, with more impoverished South Bronx and East Brooklyn regions. In Figure 3, the strong correlation between income and the share of white persons in each neighborhood is evident, with higher percentages of white persons in Manhattan and Staten Island and lower shares in the Bronx, Queens, and Brooklyn. Finally, Figure 4 contains the share of children’s hospitalization per 10,000 kids across all city areas. Again, there is a strong relationship between asthma hospitalizations and income, with higher hospitalization rates in the Bronx and North-Central Brooklyn and lower in Staten Island and Manhattan\nTable 1 contains descriptive statistics on absent, released, and enrolled students. In total, we have 3,339,158 observations across 1,854 schools. There are 56 average daily absences per school in the city of New York. This is equivalent to around 9.04% of enrolled students. The absences have a median of 39 and a standard deviation of 75. Concerning released students, 2 (0.40%) students are released from school on an average day. Additionally, and in line with an over-dispersed Poisson distribution, releases have a median of 0 and a standard deviation of 27 pupils per day.\n\n\nShow the Code\n# Show the data set\nsumtable(select(ungroup(absent), absent, released, enrolled), \n         digits = 2, fixed.digits = T, \n         summ = c(\"mean(x)\", \"median(x)\", \"sd(x)\", \"min(x)\", \n                  \"max(x)\", \"notNA(x)\",\"countNA(x)\"), \n         summ.names = c(\"Mean\", \"Median\", \"SD\", \"Min\", \"Max\", \"N\", \"NAs\"), \n         labels = c(\"Absent Students\", \"Released Students\", \"Enrolled Students\"))\n\n\n\n\n\nTable 1:  Descriptive Statistics on School Absences \n \n  \n    Variable \n    Mean \n    Median \n    SD \n    Min \n    Max \n    N \n    NAs \n  \n \n\n  \n    Absent Students \n    56.34 \n    39 \n    74.74 \n    0 \n    3511 \n    3339158 \n    0 \n  \n  \n    Released Students \n    2.46 \n    0 \n    27.29 \n    0 \n    3777 \n    3338834 \n    324 \n  \n  \n    Enrolled Students \n    622.96 \n    497 \n    511.04 \n    1 \n    5850 \n    3339158 \n    0 \n  \n\n\n\n\n\n\nThe following tab-set contains a series of different descriptive figures regarding the data on school absences. First, Figure 5 shows the number of schools per year reporting school absences to the education department. Between 2008 and 2018, the number of reporting schools moved from a minimum of 1,545 in 2008 to a maximum of 1,659 in 2016. There are 1,365 schools in the data set that reported absenteeism for all years between 2008 and 2018. Although we use the entire sample in the regression analysis, we provide evidence that our results are robust to only focusing on the set of schools that never drop the panel.\n\nSchools Per YearDensity of AbsencesTime Series of AbsencesMonthly VariationWeekday Variation\n\n\n\n\nShow the Code\n# Number of schools reporting absences per year\nabsent |>  filter(DayType == \"NormalDay\") |>  \n  group_by(year) |> summarise(Schools = length(unique(id))) |>  \n  filter(year > 2007) |> mutate(year = as_factor(year)) %>% ggplot() + \n   geom_line(aes(x = year, y= Schools, group = 1), size = 0.75) +\n  geom_point(aes(x = year, y= Schools), color = \"red\") +\n  theme_economist() %+replace% \n  theme(legend.title = element_blank())  + \n  labs(y = \"\", x = \"Year\")\n\n\n\n\n\nFigure 5: Number of reporting schools\n\n\n\n\n\n\n\n\nShow the Code\n#  Create the plot\nplot = absent |> ungroup() |>  filter(DayType == \"NormalDay\") |> filter(absent < quantile(absent, 0.99, na.rm = T)) |> group_by(date) |> \n  summarise(absent = mean(absent, na.rm = T))\n# Construct the ggplot\nggplot(plot) + \n  ggdist::stat_halfeye(aes(x = absent), height = .6,  justification = -.3,\n                       .width = 0, point_colour = NA, fill = \"#141f52\") +\n  geom_point(aes(x = absent, y = 0), size = 0.2, alpha = .2, position = position_jitter(seed = 1, height = 0.1), color = \"red\")+ \n   geom_boxplot(aes(x = absent), width = .25, \n                fill = \"transparent\", outlier.shape = NA) + \n  theme_economist()  %+replace% \n  theme( axis.title.x = element_text(vjust = -2)) +\n  labs(y = \"\", x = \"Absent Students\") \n\n\n\n\n\nFigure 6: Density distribution of School Absences\n\n\n\n\n\n\n\n\nShow the Code\nplot = absent |>  filter(DayType == \"NormalDay\") |> filter(absent < quantile(absent, 0.99, na.rm = T)) |> group_by(date, year) |>  summarise(absent = mean(absent)) |> ungroup() |> \n  mutate(RollMean = rollmean(absent, k = 5, fill = NA))\n\nggplot(plot) + \n  geom_bar(aes(x = date, y = absent, fill = as_factor(year)), size = 0.05, stat = \"identity\") + \n  theme_economist()  %+replace% \n  theme(legend.title = element_blank(), legend.position = \"bottom\") + \n  labs(y = \"Mean Absences\", x = \"Date\") + guides(fill = \"none\")\n\n\n\n\n\nFigure 7: Time Series of Daily School Absences\n\n\n\n\n\n\n\n\nShow the Code\n# Construct the data for the plot \nplot = absent |>  filter(DayType == \"NormalDay\") |> \n           filter(absent < quantile(absent, 0.99, na.rm = T)) |> \n           mutate(month = month(date, label = T)) |> \n           group_by(ts = month) |>  summarise(absent = mean(absent, na.rm = T)) \n        \n# Plot the time series\nggplot(plot) + geom_line(aes(x = ts, y = absent, group = 1)) + \n  geom_point(aes(x = ts, y = absent, group = 1), color = \"red\") +\n  theme_economist()  %+replace% \n  theme(legend.title = element_blank(), strip.text = element_text(hjust = 0)) + \n  labs(y = \"Mean Absences\", x = \"\") + guides(fill = \"none\")\n\n\n\n\n\nFigure 8: Monthly Variation in School Absences\n\n\n\n\n\n\n\n\nShow the Code\n# Construct the data for the plot \nplot = absent |>  filter(DayType == \"NormalDay\") |> \n           filter(absent < quantile(absent, 0.99, na.rm = T)) |> \n           mutate(weekday = substr(weekday, 1,2)) |> \n           group_by(ts = weekday) |>  summarise(absent = mean(absent, na.rm = T)) \n        \n# Plot the time series\nggplot(plot) + geom_line(aes(x = ts, y = absent, group = 1)) + \n  geom_point(aes(x = ts, y = absent, group = 1), color = \"red\") +\n  theme_economist()  %+replace% \n  theme(legend.title = element_blank(), strip.text = element_text(hjust = 0)) + \n  labs(y = \"Mean Absences\", x = \"\") + guides(fill = \"none\")\n\n\n\n\n\nFigure 9: Weekday Variation in School Absences\n\n\n\n\n\n\n\nFigure 6 portrays the density function of school absences at the school level. As expected, the distribution of absences resembles a gamma probability density function with most of the density between zero and one hundred units, following Figure 7 plots the time series of school absences. In it, each bar represents a day between 2006 and 2018. The breaks in the time series refer to the summer and winter breaks. Overall, it is reassuring to see no extreme changes in average school absences across our sample period. Note that drastic jumps in the number of absent students often coincide with weather events. For instance, the significant increase in 2014 refers to the 2014 nor’easter and in 2012 to intense snowfall.\nIn Figure 8, we portray the average value of school absences across months of the year. The first thing to notice is a significant increase in absences for the month before the summer holidays. Additionally, absences appear to be higher during the winter months of December to February because of weather conditions and seasonal influenza. Regarding variation within weeks (Figure 9). There are more increased absences on Fridays and Mondays and lower throughout the rest of the week.\nThroughout the study, we aggregate the school-level data into neighborhood averages for three main reasons. First, aggregating data reduces the noise from school-specific miss-recordings and human error. Second, it is easier to match socio-demographic data from the American Community Survey. And third, it decreases the computational burden of our empirical strategy.\nTable 2 contains descriptive statistics on school absences at the neighborhood level. The NTA data contains 379,120 observations across 0 neighbourhoods. On average, there are 491 absences per day, equivalent to around 8.90% of enrolled students. The absences have a median of 354 and a standard deviation of 573. Concerning released students, 9 (0.16%) students are released from school on an average day.\nThe next set of figures contains different descriptive statistics of school absences at the neighborhood level. First, Figure 10 has the density function of the log of absent daily students per neighborhood. Next, the map in Figure 11 includes the average number of students enrolled per NTA. Figure 12 refers to the average share of annual absences, i.e., absences/enrollment. Finally, Figure 13 presents an analogous map for the percentage of releases.\n\n\nShow the Code\n# Show the data set\ntab = left_join(absent |> filter(DayType == \"NormalDay\"), location) |>  group_by(nta, date) |> \n  summarise_at(vars(enrolled, absent, released), sum, na.rm = T)\n\n\nsumtable(select(ungroup(tab) ,absent, released, enrolled), \n         digits = 2, fixed.digits = T, \n         summ = c(\"mean(x)\", \"median(x)\", \"sd(x)\", \"min(x)\", \n                  \"max(x)\", \"notNA(x)\",\"countNA(x)\"), \n         summ.names = c(\"Mean\", \"Median\", \"SD\", \"Min\", \"Max\", \"N\", \"NAs\"), \n         labels = c(\"Absent Students\", \"Released Students\", \"Enrolled Students\"))\n\n\n\n\n\nTable 2:  Descriptive Statistics on School Absences at the neighborhood level \n \n  \n    Variable \n    Mean \n    Median \n    SD \n    Min \n    Max \n    N \n    NAs \n  \n \n\n  \n    Absent Students \n    491.29 \n    354 \n    572.72 \n    0 \n    22819 \n    379120 \n    0 \n  \n  \n    Released Students \n    8.84 \n    0 \n    75.01 \n    0 \n    3801 \n    379120 \n    0 \n  \n  \n    Enrolled Students \n    5521.89 \n    4746 \n    3697.11 \n    229 \n    67963 \n    379120 \n    0 \n  \n\n\n\n\n\n\n\nDensitySchool EnrollmentShare of Absences.Share of Released\n\n\n\n\nShow the Code\n# Construct the data for the plot \nAbsentNta = left_join(absent |>  \n                        filter(DayType == \"NormalDay\") |> \n                        filter(absent < quantile(absent, 0.99, na.rm = T)), location) |>  \n  group_by(nta, ntacode,date) |> \n  summarise_at(vars(enrolled, absent, released), sum, na.rm = T) |> \n  filter(absent > 0)\n\n# Plot the time series\nggplot(AbsentNta) + \n  stat_halfeye(aes(x = log(absent)), height = .6,  justification = -.3, .width = 0, \n               point_colour = NA, fill = \"#141f52\") +\n  geom_point(aes(x = log(absent), y = 0), size = 0.2, alpha = .2, \n             position = position_jitter(seed = 1, height = 0.1), color = \"red\")+ \n   geom_boxplot(aes(x = log(absent)), width = .25, fill = \"transparent\", outlier.shape = NA) + \n  theme_economist()  %+replace% \n  theme( axis.title.x = element_text(vjust = -2)) +\n  labs(y = \"\", x = \"Log of Absent Students\") \n\n\n\n\n\nFigure 10: Density plot of school absences at the NTA level\n\n\n\n\n\n\n\n\nShow the Code\n# Construct the data for the plot \nmap = AbsentNta |> group_by(ntacode) |> \n  summarise(`Avg. Enrolled Students` = mean(enrolled, na.rm = T)) %>% \n  left_join(NtaShp, .)\n\n# Plot the map series\ntmap_style(\"classic\"); tm_graticules(labels.inside.frame = T, labels.show = F) +\n  tm_shape(map) +\n  tm_fill(col = \"Avg. Enrolled Students\", style = \"quantile\", n = 10,  \n          palette = \"RdBu\", colorNA = \"white\", textNA = \"No Data\")  +\n  tm_borders(lwd = 0.5) +\n  tm_compass(type = \"rose\", position = c(\"right\", \"top\"), size = 2) +\n  tm_scale_bar(width = 0.2, position = c(\"right\", \"bottom\"), text.size = 1)\n\n\n\n\n\nFigure 11: School enrollment per NTA\n\n\n\n\n\n\n\n\nShow the Code\n# Construct the data for the plot \nmap = AbsentNta |> group_by(ntacode) |> \n  summarise(`Share of Absences` = mean(absent, na.rm = T)/mean(enrolled, na.rm = T)) %>% left_join(NtaShp, .) |>  \n  mutate(`Share of Absences` = `Share of Absences`*100)\n\n# Plot the map series\ntmap_style(\"classic\"); tm_graticules(labels.inside.frame = T, labels.show = F) +\n  tm_shape(map) +\n  tm_fill(col = \"Share of Absences\", style = \"quantile\", n = 10,  \n          palette = \"RdBu\", colorNA = \"white\", textNA = \"No Data\")  +\n  tm_borders(lwd = 0.5) +\n  tm_compass(type = \"rose\", position = c(\"right\", \"top\"), size = 2) +\n  tm_scale_bar(width = 0.2, position = c(\"right\", \"bottom\"), text.size = 1)\n\n\n\n\n\nFigure 12: Share of absenteeism per NTA\n\n\n\n\n\n\n\n\nShow the Code\n# Construct the data for the plot \nmap = AbsentNta |> group_by(ntacode) |> \n  summarise(`Share of Releases` = mean(released, na.rm = T)/mean(enrolled, na.tm = T)) %>% left_join(NtaShp, .)  |> \n  mutate(`Share of Releases` = `Share of Releases`*100)\n\n# Plot the map series\ntmap_style(\"classic\"); tm_graticules(labels.inside.frame = T, labels.show = F) +\n  tm_shape(map) +\n  tm_fill(col = \"Share of Releases\", style = \"quantile\", n = 10,  \n          palette = \"RdBu\", colorNA = \"white\", textNA = \"No Data\")  +\n  tm_borders(lwd = 0.5) +\n  tm_compass(type = \"rose\", position = c(\"right\", \"top\"), size = 2) +\n  tm_scale_bar(width = 0.2, position = c(\"right\", \"bottom\"), text.size = 1)\n\n\n\n\n\nFigure 13: Share of releases per NTA\n\n\n\n\n\n\n\n\n\n\n\n\n\nShow the Code\naqif = read_rds(paste0(file, \"02_GenData/02_aqi/AqiForecast.rds\"))\naqi = read_rds(paste0(file, \"02_GenData/02_aqi/RealAqi.rds\"))\n\n\nTable 3 contains descriptive statistics on the real and forecasted AQI. The average forecast is slightly smaller (with a minor standard deviation) than the real AQI. The average reported AQI is 54.36, slightly above the EPA threshold between good and moderate air quality. Moreover, the maximum value of the forecasted AQI (151) is also smaller than the maximum of the Real AQI, implying that the difference between both measures could go beyond average values and standard deviations.\n\n\nShow the Code\n# Construct the data set for the summary table\ntab = left_join(filter(aqif, date < \"2018-12-31\", date > \"2008-12-31\"), aqi)\n# Summary table\nsumtable(select(ungroup(tab) ,aqi, RealAqi), \n         digits = 2, fixed.digits = T, \n         summ = c(\"mean(x)\", \"median(x)\", \"sd(x)\", \"min(x)\", \n                  \"max(x)\", \"notNA(x)\",\"countNA(x)\"), \n         summ.names = c(\"Mean\", \"Median\", \"SD\", \"Min\", \"Max\", \"N\", \"NAs\"), \n         labels = c(\"AQI Forecast\", \"AQI Real\"))\n\n\n\n\n\nTable 3:  Descriptive Statistics on the air quality index \n \n  \n    Variable \n    Mean \n    Median \n    SD \n    Min \n    Max \n    N \n    NAs \n  \n \n\n  \n    AQI Forecast \n    50.39 \n    48 \n    18.78 \n    4 \n    151 \n    3565 \n    0 \n  \n  \n    AQI Real \n    54.36 \n    51 \n    21.21 \n    16 \n    208 \n    3565 \n    0 \n  \n\n\n\n\n\n\nFigure 14 shows the average daily value of the AQI forecast within our sample period. Although there is no clear evidence of a long-term trend in the value of the AQI, seasonality does appear quite relevant for the time series. Summer (and to a lesser degree winter) forecasts of the AQI are consistently higher than for the other seasons. Furthermore, the probability of forecasts higher than 100 units is also higher during the summer. For instance, out of 131 alerts, one hundred and five occurred during the summer, fourteen in the spring, eight in Autumn, and only four throughout the winter.\n\nTime SeriesMonthly VarYearly VarWeekday varDensity distribution\n\n\n\n\nShow the Code\n# Construct the data for the plot \n# Create the data for the plot\nplot = filter(aqif, date < \"2018-12-31\") |>  \n  mutate(season = hydroTSM::time2season(date, out.fmt = \"seasons\")) |> \n  mutate(season = str_to_title(season)) \n\n\n\nggplot(plot) + geom_bar(aes(x = date, y =aqi, fill = season), stat = \"identity\", alpha = 0.5) +\n  geom_hline(aes(yintercept = 100), color = \"red\") + labs(y = \"Air Quality Index (Forecast)\", x = \"\") +\n  theme_economist() %+replace% \n  theme(legend.title = element_blank(), axis.title.y = element_text(vjust = 2, angle = 90)) +\n  scale_fill_manual(values = c(\"Spring\" = \"#F97A1F\", \"Summer\" = \"#C91D42\", \n                               \"Winter\" = \"#475ED1\", \"Autumn\"  = \"#B3B3B3\"))\n\n\n\n\n\nFigure 14: Mean daily value of the AQI forecast between 2008 and 2018\n\n\n\n\n\n\n\n\nShow the Code\n# Construct the data for the plot \nplot = filter(aqif, date < \"2018-12-31\") |>  \n  mutate(year = year(date), month = month(date, label = T), weekday = weekdays(date, abbreviate = T)) |> \n  group_by(frame = month) %>% summarise(aqi = mean(aqi, na.rm = T))\n\n\n# Plot the time series \nggplot(plot) + geom_line(aes(y = aqi, x = frame, group = 1)) + \n  geom_point(aes(y = aqi, x = frame, group = 1), color = \"red\") + \n  theme_economist()%+replace% \n  theme(legend.title = element_blank(), axis.title.y = element_text(vjust = 2, angle = 90)) + \n  labs(x = \"\", y = \"Average AQI forecast\")\n\n\n\n\n\nFigure 15: Mean monthly value of the AQI forecast\n\n\n\n\n\n\n\n\nShow the Code\n# Create the data for the plot\nplot = filter(aqif, date < \"2018-12-31\") |>  \n  mutate(year = year(date), month = month(date, label = T), weekday = weekdays(date, abbreviate = T)) |> \n  group_by(frame = year) %>% summarise(aqi = mean(aqi, na.rm = T)) |> mutate(frame = as_factor(frame))\n\n# Plot the time series \nggplot(plot) + geom_segment(aes(y = aqi, x = frame, xend = frame, yend = 45, group = 1), lwd = 3) + \n  geom_point(aes(y = aqi, x = frame, group = 1), color = \"red\", size = 4) + \n  theme_economist()%+replace% \n  theme(legend.title = element_blank(), axis.title.y = element_text(vjust = 2, angle = 90)) +\n  labs(y = \"Avg. Air Quality Index Forecast\", x = \"\")\n\n\n\n\n\nFigure 16: Mean yearly value of the AQI forecast\n\n\n\n\n\n\n\n\nShow the Code\n# Create the data for the plot\nplot = filter(aqif, date < \"2018-12-31\") |>  \n  mutate(year = year(date), month = month(date, label = T), weekday = weekdays(date, abbreviate = T)) |> \n  group_by(frame = weekday) %>% summarise(aqi = mean(aqi, na.rm = T)) |> \n  mutate(frame = factor(frame, levels = c(\"Sun\", \"Mon\", \"Tue\", \"Wed\",\"Thu\", \"Fri\", \"Sat\")))\n\n\n# Plot the time series \nggplot(plot) + geom_line(aes(y = aqi, x = frame, group = 1)) + \n  geom_point(aes(y = aqi, x = frame, group = 1), color = \"red\") + \n  theme_economist()%+replace% \n  theme(legend.title = element_blank(), axis.title.y = element_text(vjust = 2, angle = 90)) + \n  labs(x = \"\", y = \"Average AQI forecast\")\n\n\n\n\n\nFigure 17: Mean weekday value of the AQI forecast\n\n\n\n\n\n\n\n\nShow the Code\n# Plot the time series \nggplot(aqif) +  ggdist::stat_halfeye(aes(x = aqi), height = .6,  \n                       justification = -.3,.width = 0, point_colour = NA, fill = \"#141f52\") +\n  geom_point(aes(x = aqi, y = 0), size = 0.2, alpha = .2, position = position_jitter(seed = 1, height = 0.1), color = \"red\") +\n  geom_boxplot(aes(x = aqi), width = .15, fill = \"transparent\", outlier.shape = NA, color = \"black\") +\n   coord_cartesian(ylim = c(-0.1, 0.8)) + theme_economist() %+replace% \n  theme(legend.title = element_blank(), axis.title.y = element_text(vjust = 2, angle = 90)) + \n  labs(x = \"average AQI forecast\", y = \"\")\n\n\n\n\n\nFigure 18: Distribution of the AQI forecast\n\n\n\n\n\n\n\nWith this in mind, Figure 15 contains the average monthly value of the forecasted AQI. As expected, predicted values are significantly higher during the summer months of June to August and the Winter Months of December to January. Higher summer values are in line with higher ozone formation during the hotter months of the year because of the interaction of solar radiations with ozone precursors. Higher winter measures relate to the lower efficiency of internal combustion engines at cold temperatures and the use of fossil fuels for residential heating.\nNext, Figure 16 and Figure 17 contain the average yearly and weekday values of the AQI forecast. Even though the AQI value seems higher between 2008 and 2011 and lower after that, it is not straightforward to notice any long-term trend. Regarding weekday variation, there are slightly higher average values at the start of the week (Monday to Wednesday) and lower from Thursday to Sunday.\nFinally, Figure 18 contains the density function of the AQI forecast. The forecasts appear normally distributed between zero and slightly before one hundred units. However, as we approach one hundred units, there is some clear bunching around the alert threshold, suggesting that the model used by the NYSDEC may work slightly differently when the forecast is in the neighborhood of the alert. In the empirical strategy, we exploit this bunching to identify the effects of the alert on school absences.\nThe following figures compare the forecasted and real AQIs. ?@fig-AqiDifferenceTs contains the time series of average mean daily differences between the predicted and actual AQIs. There appear to be relevant differences between both time series, with a maximum difference of 56 and a minimum of -92 AQI units. These differences aggregate to an average difference between both variables of -3.9 with a standard deviation of 15.17 units. Figure 19 further includes the density plot of the difference between the real and forecasted AQIs.\n\nDaily DifferencesDensity of Daily Diff.Monthly DifferencesYearly DifferencesWeekday DifferencesDensity distributions\n\n\n\n\nShow the Code\n# Create the data for the plot\n#| label: fig-AqiDifferenceTs\n#| fig-cap: Mean daily difference of the AQI and its forecast between 2008 and 2018\n#| fig-cap-location: top\n#| echo: true\n# Construct the data for the plot \n# Create the data for the plot\nplot = filter(aqif, date < \"2018-12-31\") |>  \n  mutate(season = hydroTSM::time2season(date, out.fmt = \"seasons\")) |> \n  mutate(season = str_to_title(season)) %>% left_join(., aqi) |> \n  mutate(diff = aqi-RealAqi)\n\n\n\nggplot(plot) + geom_bar(aes(x = date, y =diff, fill = season), stat = \"identity\", alpha = 0.5) +\n  labs(y = \"Air Quality Index (Forecast)\", x = \"\") +\n  theme_economist() %+replace% \n  theme(legend.title = element_blank(), axis.title.y = element_text(vjust = 2, angle = 90)) +\n  scale_fill_manual(values = c(\"Spring\" = \"#F97A1F\", \"Summer\" = \"#C91D42\", \n                               \"Winter\" = \"#475ED1\", \"Autumn\"  = \"#B3B3B3\"))\n\n\n\n\n\n\n\n\n\nShow the Code\n# Construct the plot-data\nplot = filter(aqif, date < \"2018-12-31\") |>  \n  mutate(season = hydroTSM::time2season(date, out.fmt = \"seasons\")) |> \n  mutate(season = str_to_title(season)) %>% left_join(., aqi) |> \n  mutate(diff = aqi-RealAqi)\n# Plot the time series \nggplot(plot) +  \n  stat_halfeye(aes(x = diff), height = .6,justification = -.3,\n               .width = 0, point_colour = NA, fill = \"#141F52\") +\n  geom_point(aes(x = diff, y = 0), size = 0.2, alpha = .1, \n             position = position_jitter(seed = 1, height = 0.1), color = \"red\") +\n  geom_boxplot(aes(x = diff), width = .15, fill = \"transparent\", outlier.shape = NA, color = \"black\") +\n   coord_cartesian(ylim = c(-0.1, 0.8)) + theme_economist() %+replace% \n  theme(legend.title = element_blank(), axis.title.y = element_text(vjust = 2, angle = 90), \n        panel.background = element_rect(fill = \"#EFF5F5\"), \n        plot.background = element_rect(fill = \"#EFF5F5\")) + \n  labs(x = \"average AQI forecast\", y = \"\")\n\n\n\n\n\nFigure 19: Distribution of the AQI forecast\n\n\n\n\n\n\n\n\nShow the Code\n# Create the data for the plot\nplot = filter(aqif, date < \"2018-12-31\") |>  \n  mutate(month = month(date, label = T)) %>% left_join(., aqi) |> \n  group_by(frame = month) %>% \n  summarise(`AQI Forecast` = mean(aqi, na.rm = T), `AQI Measure` = mean(RealAqi, na.rm = T)) %>% \n  gather(., var, value, -frame)\n\n\n# Plot the time series \nggplot(plot) + geom_line(aes(y = value, x = frame, group = var, linetype = var)) + \n  geom_point(aes(y = value, x = frame, group = 1, color = var)) + \n  theme_economist()%+replace% \n  theme(legend.title = element_blank(), axis.title.y = element_text(vjust = 2, angle = 90)) + \n  labs(x = \"\", y = \"Average AQI forecast\") + scale_color_manual(values = c(\"#141F52\", \"#c91d42\"))\n\n\n\n\n\nFigure 20: Mean monthly value of the AQI measure and its forecast\n\n\n\n\n\n\n\n\nShow the Code\n# Create the data for the plot\nplot = filter(aqif, date < \"2018-12-31\") |>  \n  mutate(year = year(date)) %>% left_join(., aqi) |> \n  group_by(frame = year) %>% \n  summarise(`AQI Forecast` = mean(aqi, na.rm = T), `AQI Measure` = mean(RealAqi, na.rm = T)) %>% \n  gather(., var, value, -frame)\n\n\n# Plot the time series \nggplot(plot) + geom_line(aes(y = value, x = frame, group = var, linetype = var)) + \n  geom_point(aes(y = value, x = frame, group = 1, color = var)) + \n  theme_economist()%+replace% \n  theme(legend.title = element_blank(), axis.title.y = element_text(vjust = 2, angle = 90)) + \n  labs(x = \"\", y = \"Average AQI forecast\") + scale_color_manual(values = c(\"#141F52\", \"#c91d42\"))\n\n\n\n\n\nFigure 21: Mean yearly value of the AQI measure and its forecast\n\n\n\n\n\n\n\n\nShow the Code\n# Create the data for the plot\nplot = filter(aqif, date < \"2018-12-31\") |>  \n  mutate(weekday = weekdays(date)) %>% left_join(., aqi) |> \n  group_by(frame = weekday) %>% \n  summarise(`AQI Forecast` = mean(aqi, na.rm = T), `AQI Measure` = mean(RealAqi, na.rm = T)) %>% \n  gather(., var, value, -frame)\n\n\n# Plot the time series \nggplot(plot) + geom_line(aes(y = value, x = frame, group = var, linetype = var)) + \n  geom_point(aes(y = value, x = frame, group = 1, color = var)) + \n  theme_economist()%+replace% \n  theme(legend.title = element_blank(), axis.title.y = element_text(vjust = 2, angle = 90)) + \n  labs(x = \"\", y = \"Average AQI forecast\") + scale_color_manual(values = c(\"#141F52\", \"#c91d42\"))\n\n\n\n\n\nFigure 22: Mean weekday value of the AQI measure and its forecast\n\n\n\n\n\n\n\n\nShow the Code\nplot = filter(aqif, date < \"2018-12-31\") |>  \n  mutate(weekday = weekdays(date)) %>% left_join(., aqi) %>% \n  select(date, `AQI Forecast` = aqi, `AQI Measure` = RealAqi) %>%\n  gather(., var, value, -date)\n\n\n# Plot the time series \nggplot(plot) +  ggdist::stat_halfeye(aes(x = value, fill = var), height = .6,  \n                       justification = -.3,.width = 0, point_colour = NA, alpha = 0.5) +\n  geom_boxplot(aes(x = value, color = var), width = .25, fill = \"transparent\", outlier.shape = NA) +\n   coord_cartesian(ylim = c(-0.1, 0.8)) + theme_economist() %+replace% \n  theme(legend.title = element_blank(), axis.title.x = element_text(vjust = -2)) + \n  labs(x = \"average AQI forecast\", y = \"\") +\n  scale_fill_manual(values = c(\"#141F52\", \"#c91d42\")) +\n  scale_color_manual(values = c(\"#141F52\", \"#c91d42\"))\n\n\n\n\n\nFigure 23: Density functions of the real and forecasted AQI values\n\n\n\n\n\n\n\nNext, in Figure 20, I portray the average monthly value of the AQI measure and its forecasts. It is interesting to see that the difference between the accurate measure and the forecast of the AQI is lower during the summer months of June to August and higher at the start of the year between January and April. Figure 21 portrays a similar picture with yearly average differences. Notably, the ability of the NYSDEC to predict the AQI increased between 2008 and 2017. With a mean difference in 2008 of close to four units and for 2018 of less than 0.5. In figure Figure 22, we add differences by day of the week where, although the value of the objective AQI measure is consistently higher than its forecast, I cannot distinguish any pattern in the average weekday difference of both time series. Finally, Figure 23 contains the density distributions of the real and forecasted AQIs. Two things stand out. First, the AQI forecast has more density around its median and a smaller tail; second, there is a clear difference in the bunching of the AQI around 100 units."
  }
]