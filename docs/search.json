[
  {
    "objectID": "01_about.html",
    "href": "01_about.html",
    "title": " About",
    "section": "",
    "text": "The website contains four sections:\n\n Data Sets – Includes a description of the data on school absences, the air quality index, demographic controls, and weather covariates.\nDescriptive Statistics – Descriptive statistics on school absences and the forecasts of the air quality index.\nMethodology –Describes the empirical strategy I use to estimate the effect of air quality health advisories on school absences in New York City. It includes four sections; ordinary least squares, instrumental variables, regression discontinuity, and synthetic DiD.\nResults – presents and discusses the main results of the research project."
  },
  {
    "objectID": "01_about.html#raw-data-files",
    "href": "01_about.html#raw-data-files",
    "title": " About",
    "section": "Raw data files",
    "text": "Raw data files\nAs previously mentioned, the folder 01_RawData contains all the raw files. It is divided into N different repositories\n\n\n01_schools includes all files related to school absences and school characteristics in New York City\n02_AQI has the data on the air quality index forecast from the NYSDEC and the AQI measures from the EPA\n03_weather contains several data files of weather covariates\n04_shp is a repository of shape (or spatial) files\n05_dem includes data on neighbourhood-level socio-demographic characteristics from the US Census Buro"
  },
  {
    "objectID": "02_data.html",
    "href": "02_data.html",
    "title": " Data Sets",
    "section": "",
    "text": "This page presents an overall description of the data sets I use to analyze the effect of New York City Air Quality Health Advisories on school absences.\nResearchers can access the data I use to generate these files in the dropbox repository\n\n School Absences\n\n\n\nI obtain data on school absences from the NYC open data-portal website. Table 1 shows the structure of the data. There are 3,339,158 observations in the panel with 1,854 unique school identifiers. The data set spans between Jan 2006 and Dec 2018. It contains the school’s id, the observation date, and the total number of enrolled, present, absent, and released students. It also includes a categorical variable indicating if an abnormal event affected school absences on that date, e.g., extreme weather events like blizzards or hurricanes. I further obtain data on the location of each school. Table 2 contains the school’s type, id, longitude, latitude, tract, neighbourhood, and borough. Table 3 presents socio-demographic data obtained from the New York State Department of Education (NYSDE). The table contains the school’s id, year of observation, count of enrolled students, and the share of female, male, Asian, Hispanic, Black, and White students. Other variables include the share of students with disabilities, learning English, qualifying for free or reduced price lunch, being eligible for human resources administration benefits (poverty), or facing economic hardship (eni). Finally, Table Table 4 contains the school id, the year of observation (only available from 2014), the share of students passing the English Language Art (ELA) and Mathematics (math) tests, and the percentage of fourth-year and sixth-year graduates.\n\nAbsencesLocationDemographicsProficiency\n\n\n\n\n\n\nTable 1:  Structure of the raw file on school absences in NYC \n \n  \n    id \n    date \n    SchoolYear \n    enrolled \n    present \n    absent \n    released \n    DayType \n  \n \n\n  \n    01M015 \n    2006-09-05 \n    2006-2007 \n    252 \n    226 \n    26 \n    0 \n    NormalDay \n  \n  \n    01M015 \n    2006-09-06 \n    2006-2007 \n    248 \n    227 \n    21 \n    0 \n    NormalDay \n  \n  \n    01M015 \n    2006-09-07 \n    2006-2007 \n    245 \n    228 \n    17 \n    0 \n    NormalDay \n  \n\n\n\n\n\n\n\n\n\n\n\n\nTable 2:  Data on the spatial location of schools in NYC \n \n  \n    id \n    lon \n    lat \n    tract \n    nta \n    ntacode \n    boro \n    SchoolType \n  \n \n\n  \n    01M015 \n    -73.97875 \n    40.72207 \n    002601 \n    Lower East Side \n    MN28 \n    Manhattan \n    Elementary \n  \n  \n    01M019 \n    -73.98450 \n    40.73001 \n    004000 \n    East Village \n    MN22 \n    Manhattan \n    Elementary \n  \n  \n    01M020 \n    -73.98631 \n    40.72131 \n    003001 \n    Chinatown \n    MN27 \n    Manhattan \n    Elementary \n  \n\n\nNotes:   lon = Longitude, lat = Latitude, tract = US Census Tract, nta = neighborhood, boro = borough, SchholType = type of school\n\n\n\n\n\n\n\n\n\nShow the Code\n# Show the data set\nkbl(head(dem, 3)) %>% \n  kable_classic(full_width = F, html_font = \"Cambria\") %>% \n  kable_styling(bootstrap_option = c(\"hover\")) |> \n  column_spec(c(1), italic = T, color = \"DarkBlue\") %>% \n   footnote(general = \"id refers to School ID and students to the count of enrolled students in that school and year combinations. Each of the other columns contains the percentage of students within each category, e.g., female refers to the share of female students in the school. The poverty column refers to the share of students qualifying for free or reduced-price lunch or eligible for Human Resources Administration benefits. The eni column refers to the share of students facing economic hardship.\", general_title = \"Notes:\", footnote_as_chunk = T)\n\n\n\n\nTable 3:  Demographic data for NYC schools \n \n  \n    id \n    year \n    students \n    female \n    male \n    asian \n    hispanic \n    black \n    white \n    other \n    disabilities \n    EnglishLearners \n    poverty \n    eni \n  \n \n\n  \n    01M015 \n    2011 \n    189 \n    48.7 \n    51.3 \n    6.3 \n    57.7 \n    33.3 \n    2.1 \n    0.5 \n    27.5 \n    11.6 \n    100 \n    NaN \n  \n  \n    01M015 \n    2012 \n    177 \n    51.4 \n    48.6 \n    8.5 \n    52.5 \n    35.6 \n    1.7 \n    1.7 \n    31.1 \n    11.9 \n    100 \n    NaN \n  \n  \n    01M015 \n    2013 \n    190 \n    48.9 \n    51.1 \n    4.7 \n    54.7 \n    37.9 \n    1.6 \n    1.1 \n    34.2 \n    10.0 \n    95 \n    NaN \n  \n\n\nNotes:  id refers to School ID and students to the count of enrolled students in that school and year combinations. Each of the other columns contains the percentage of students within each category, e.g., female refers to the share of female students in the school. The poverty column refers to the share of students qualifying for free or reduced-price lunch or eligible for Human Resources Administration benefits. The eni column refers to the share of students facing economic hardship.\n\n\n\n\n\n\n\n\n\nShow the Code\n# Show the data set\nkbl(head(prof, 3)) %>% \n  kable_classic(full_width = F, html_font = \"Cambria\") %>% \n  kable_styling(bootstrap_option = c(\"hover\")) |> \n  column_spec(c(1), italic = T, color = \"DarkBlue\") %>% \n   footnote(general = \"id refers to School ID and. Each of the other columns contains the percentage of students within each category; e.g., ela refers to the share of students passing the English Learning Art test. The math column refers to the share of students passing the Mathematics test. And the Graduates4th and 6th columns refer to the share of graduates in each year respectively.\", general_title = \"Notes:\",  footnote_as_chunk = T)\n\n\n\n\nTable 4:  Proficiency data for NYC schools \n \n  \n    id \n    year \n    ela \n    math \n    Graduates4th \n    Graduates6th \n  \n \n\n  \n    17K002 \n    2014 \n    23.1 \n    23.1 \n    NA \n    NA \n  \n  \n    84K704 \n    2014 \n    16.7 \n    16.7 \n    NA \n    NA \n  \n  \n    75K141 \n    2014 \n    NA \n    NA \n    NA \n    NA \n  \n\n\nNotes:  id refers to School ID and. Each of the other columns contains the percentage of students within each category; e.g., ela refers to the share of students passing the English Learning Art test. The math column refers to the share of students passing the Mathematics test. And the Graduates4th and 6th columns refer to the share of graduates in each year respectively.\n\n\n\n\n\n\n\n\n\n\n Forecasts of the air quality index\n\n\n\nThe data on the air quality index (AQI) forecasts come from the New York State Department of Environmental Conservation (NYSDEC).1 Table 5 contains a sample of the raw data. It includes the issue date, forecast date, emission lag, and forecasted value of ozone (o3), fine particulate matter (pm25), and the air quality index (AQI). The issue date is the date the NYSDEC estimated the forecast, and the emission lag is the difference between the issue and forecast dates.\n\n\n\n\nTable 5:  Raw data on the Air Quality Index \n \n  \n    IssueDate \n    ForecastDate \n    EmissionLag \n    o3 \n    pm25 \n    aqi \n  \n \n\n  \n    2007-12-31 \n    2008-01-01 \n    -1 \n    NA \n    65 \n    65 \n  \n  \n    2007-12-31 \n    2008-01-02 \n    -2 \n    NA \n    40 \n    40 \n  \n\n\n\n\n\n\nIt is relevant to distinguish between the issue and forecast dates. The issue date is the date that the NYSDEC performs the forecast. the forecast date is the date of the forecast. For instance, the NYSDEC can forecast an AQI value of 105 for May 1st on April 29th. In this example, April 29th is the issue date, and May 1st the forecast date. It is worth noting that forecasts can have different issue dates. For instance, there can be three forecasts for January 1st.\nTable 6 contains a series of dummy and categorical variables to understand the nature of each forecast. The column SingleForecast indicates situations when only one issued forecast for that particular date exists. For example, if there were two forecasts for January 1st, one on December 30th and the other on the 31st, the value of this column would be zero. The ForecastType is a categorical variable that indicates the structure of issued forecasts for that particular date, e.g., Forecast (0, -2) means that there was a forecast issued at \\(t = 0\\) and \\(t = -2\\). The SameDay variable is equal to one if the issue and forecast dates occur on the same day. The same logic holds for NextDay, TwoDays, ThreeDays, and FourDays. For instance, a value of 1 in the FourDays column occurs when the issue date is four days before the forecast.\n\n\n\n\nTable 6:  Raw data on the Air Quality Index (Forecast Indicators) \n \n  \n    IssueDate \n    ForecastDate \n    aqi \n    SingleForecast \n    ForecastType \n    SameDay \n    NextDay \n    TwoDays \n    ThreeDays \n    FourDays \n  \n \n\n  \n    2007-12-31 \n    2008-01-01 \n    65 \n    1 \n    Forecast (-1) \n    0 \n    1 \n    0 \n    0 \n    0 \n  \n  \n    2007-12-31 \n    2008-01-02 \n    40 \n    0 \n    Forecast (0,-2) \n    0 \n    0 \n    1 \n    0 \n    0 \n  \n\n\n\n\n\n\nTable 7 includes a set of variables on the emission of an air quality alert (AQA). The alert column is an indicator variable equal to one if the AQI forecast exceeds one hundred units. The FullAlert column is one when all forecasts on that date predict an alert. SingleAlert is one if only one forecast is higher than one hundred units. OnlySameDayAlert is one when there is only one same-day forecast. And NextAndSameDayAlert is equal to one if there were two issues for the same forecast – one on the date of the forecast and the other one day before.\n\n\n\n\nTable 7:  Raw data on the Air Quality Index (Alert Indicators) \n \n  \n    IssueDate \n    ForecastDate \n    aqi \n    alert \n    FullAlert \n    SingleAlert \n    OnlySameDayAlert \n    NextAndSameDayAlert \n    TwoDaysSingleAlert \n  \n \n\n  \n    2007-12-31 \n    2008-01-01 \n    65 \n    0 \n    0 \n    0 \n    0 \n    0 \n    0 \n  \n  \n    2007-12-31 \n    2008-01-02 \n    40 \n    0 \n    0 \n    0 \n    0 \n    0 \n    0 \n  \n\n\n\n\n\n\nFigure 1 and Figure 2 show the share of observations with specific combinations of issued forecasts. For the full sample 63% of forecasts were issued one day before and at the date of the alert. For the sub-sample of days with an air quality alert, this number increases to 67%. This combination of different forecasts raises one clear issue; if we want to assign one single value per date, which one of the forecasts should we choose? For this, use the following algorithm:\n\n\nFor the days without an alert, we select the AQI forecast closest to \\(t\\). For instance, if the AQI value for January 1st has one forecast on December 31st and another on December 30th, we select the 31st as the value of the forecasted AQI.\nFor days when there is an alert, and all forecasts imply an AQI value higher than 100 units, we choose the forecast closest to \\(t\\)\nWhen there is a discrepancy between two forecasts regarding the existence of an AQA, we choose the highest. For instance, the forecast at \\(t = 0\\) implies an AQI value of 93 and the one at \\(t = 1\\) a value of 101. In this situation, we will assign the value of 101.\n\n\n\n\n\n\n\n\n\nFigure 1: Forecast type across the full sample of forecasted AQIs\n\n\n\n\n\n\n\n\n\n\nFigure 2: Forecast type for the dates with an AQA\n\n\n\n\n\n\nTable 8 shows the first rows of the final data set on the AQU forecast. In it date is the date of the forecast. ForecastType is the type of forecast as previously defined. pm25, o3, and aqi are the forecasted values of fine particulate matter, ozone, and the air quality index. alert is an indicator variable equal to one when the AQI is larger than 100. I also include a set of indicator variables on the structure of the forecast, i.e., was it a single alert? Did all the forecasts point to the emission of an alert?\n\n\nShow the Code\n# Show the data set\nkbl(head(filter(AqiForecast, alert == 1), 3)) %>% \n  kable_classic(full_width = F, html_font = \"Cambria\") %>% \n  kable_styling(bootstrap_option = c(\"hover\")) |> \n  column_spec(c(1), italic = T, color = \"DarkBlue\") \n\n\n\n\nTable 8:  Final data set on the forecast of the AQI \n \n  \n    date \n    ForecastType \n    pm25 \n    o3 \n    aqi \n    alert \n    SingleAlert \n    FullAlert \n    OnlySameDayAlert \n    NextAndSameDayAlert \n    TwoDaysSingleAlert \n  \n \n\n  \n    2008-06-07 \n    Forecast (-1) \n    92 \n    114 \n    114 \n    1 \n    1 \n    1 \n    0 \n    0 \n    0 \n  \n  \n    2008-06-08 \n    Forecast (-2) \n    80 \n    101 \n    101 \n    1 \n    1 \n    1 \n    0 \n    0 \n    1 \n  \n  \n    2008-06-09 \n    Forecast (0,-3) \n    NA \n    105 \n    105 \n    1 \n    0 \n    1 \n    0 \n    0 \n    0 \n  \n\n\n\n\n\n\n\n\n Data on the air quality index\n\n\n\nI obtain AQI measurements from the Environmental Protection Agency (EPA) pre-generated data files. At each point, the AQI for county \\(i\\) at time \\(t\\) is the maximum AQI across all stations and measured contaminants on that day. Table 9 shows the structure of the AQI data. It contains the observation date and the AQI values for each city borough.\n\n\nShow the Code\n# Show the data set\nkbl(head(aqi, 5), booktabs = T) %>% \n  kable_classic(full_width = F, html_font = \"Cambria\") %>% \n  kable_styling(bootstrap_option = c(\"hover\")) |> \n  column_spec(c(1), italic = T, color = \"DarkBlue\")\n\n\n\n\nTable 9:  Values of the AQI in NYC \n \n  \n    date \n    RealAqi \n    BronxAQI \n    BrooklynAQI \n    ManhattanAQI \n    QueensAQI \n    StatenIslandAQI \n  \n \n\n  \n    2008-01-01 \n    67 \n    67 \n    57 \n    67 \n    60 \n    58 \n  \n  \n    2008-01-02 \n    55 \n    52 \n    45 \n    55 \n    45 \n    43 \n  \n  \n    2008-01-03 \n    50 \n    43 \n    39 \n    50 \n    39 \n    37 \n  \n  \n    2008-01-04 \n    71 \n    67 \n    62 \n    71 \n    64 \n    57 \n  \n  \n    2008-01-05 \n    91 \n    88 \n    80 \n    91 \n    80 \n    76 \n  \n\n\n\n\n\n\n\n\n Economic and demographic covariates\n\n\n\nI collect different economic, demographic, and health covariates at the neighbourhood level from two primary sources; for socio-demographic variables, we use public data from the American Community Survey between 2012-2016. For the health data, we use the information on children asthma-related hospitalization and ER admissions from the New York State Department of Health.\n\nEconomicDemographicSocialHospitalizationsER Admissions\n\n\n\n\nShow the Code\nkbl(head(econ, 5)) %>% \n  kable_classic(full_width = F, html_font = \"Cambria\") %>% \n  kable_styling(bootstrap_option = c(\"hover\")) |> \n  column_spec(c(1), italic = T, color = \"DarkBlue\") %>% \n   footnote(general = \"nta = Name of the neighborhood, ntacode = Code of the neighborhood, \n            boro = Name of the borough, FemaleLF = share of working age women at work, \n            MeanIncome = Average income, MedianIncome = Median Income\" , general_title = \"Notes:\", footnote_as_chunk = T)\n\n\n\n\nTable 10:  Sample of economic covariates \n \n  \n    nta \n    ntacode \n    boro \n    FemaleLF \n    MeanIncome \n    MedianIncome \n  \n \n\n  \n    Bath Beach \n    BK27 \n    Brooklyn \n    52.6 \n    75950 \n    58243 \n  \n  \n    Bay Ridge \n    BK31 \n    Brooklyn \n    57.8 \n    86319 \n    63539 \n  \n  \n    Bedford \n    BK75 \n    Brooklyn \n    62.9 \n    62616 \n    39970 \n  \n  \n    Bensonhurst East \n    BK29 \n    Brooklyn \n    54.6 \n    65715 \n    48097 \n  \n  \n    Bensonhurst West \n    BK28 \n    Brooklyn \n    54.5 \n    70198 \n    51035 \n  \n\n\nNotes:  nta = Name of the neighborhood, ntacode = Code of the neighborhood,             boro = Name of the borough, FemaleLF = share of working age women at work,             MeanIncome = Average income, MedianIncome = Median Income\n\n\n\n\n\n\n\n\n\nShow the Code\nkbl(head(dem, 5)) %>% \n  kable_classic(full_width = F, html_font = \"Cambria\") %>% \n  kable_styling(bootstrap_option = c(\"hover\")) |> \n  column_spec(c(1), italic = T, color = \"DarkBlue\") %>% \n   footnote(general = \"nta = Name of the neighborhood, ntacode = Code of the neighborhood, \n            boro = Name of the borough, ShareHisp = share of Hispanic persons, \n            ShareWhite = Share of white persons, ShareBlack = Share of black persons\", general_title = \"Notes:\", footnote_as_chunk = T)\n\n\n\n\nTable 11:  Sample of demographic covariates \n \n  \n    nta \n    ntacode \n    boro \n    ShareHisp \n    ShareWhite \n    ShareBlack \n  \n \n\n  \n    Bath Beach \n    BK27 \n    Brooklyn \n    17.7 \n    43.7 \n    1.2 \n  \n  \n    Bay Ridge \n    BK31 \n    Brooklyn \n    17.9 \n    63.4 \n    1.9 \n  \n  \n    Bedford \n    BK75 \n    Brooklyn \n    19.5 \n    35.1 \n    40.6 \n  \n  \n    Bensonhurst East \n    BK29 \n    Brooklyn \n    12.3 \n    46.5 \n    0.8 \n  \n  \n    Bensonhurst West \n    BK28 \n    Brooklyn \n    14.6 \n    42.7 \n    0.9 \n  \n\n\nNotes:  nta = Name of the neighborhood, ntacode = Code of the neighborhood,             boro = Name of the borough, ShareHisp = share of Hispanic persons,             ShareWhite = Share of white persons, ShareBlack = Share of black persons\n\n\n\n\n\n\n\n\n\nShow the Code\nkbl(head(soc, 5)) %>% \n  kable_classic(full_width = F, html_font = \"Cambria\") %>% \n  kable_styling(bootstrap_option = c(\"hover\")) |> \n  column_spec(c(1), italic = T, color = \"DarkBlue\") %>% \n   footnote(general = \"nta = Name of the neighborhood, ntacode = Code of the neighborhood,  boro = Name of the borough,\n   SingleParents = share of single-parent households, GrandParentsAid = share of families with help from grandparents,\n   LessThanHighschool = share of persons that did not complete high school, Bachelor = share of persons with a bachelor's degree, \n   EnglishOnly = share of persons that only communicate in English\", \n            general_title = \"Notes:\", footnote_as_chunk = T)\n\n\n\n\nTable 12:  Sample of social covariates \n \n  \n    nta \n    ntacode \n    boro \n    SingleParents \n    GrandParentsAid \n    LessThanHighschool \n    Bachelor \n    EnglishOnly \n  \n \n\n  \n    Bath Beach \n    BK27 \n    Brooklyn \n    26.2 \n    3.1 \n    23.0 \n    33.6 \n    31.0 \n  \n  \n    Bay Ridge \n    BK31 \n    Brooklyn \n    24.1 \n    1.8 \n    13.8 \n    46.4 \n    49.0 \n  \n  \n    Bedford \n    BK75 \n    Brooklyn \n    51.1 \n    3.9 \n    21.7 \n    32.2 \n    58.9 \n  \n  \n    Bensonhurst East \n    BK29 \n    Brooklyn \n    27.6 \n    3.9 \n    25.1 \n    30.2 \n    24.3 \n  \n  \n    Bensonhurst West \n    BK28 \n    Brooklyn \n    26.3 \n    2.1 \n    28.1 \n    26.2 \n    26.1 \n  \n\n\nNotes:  nta = Name of the neighborhood, ntacode = Code of the neighborhood,  boro = Name of the borough,   SingleParents = share of single-parent households, GrandParentsAid = share of families with help from grandparents,   LessThanHighschool = share of persons that did not complete high school, Bachelor = share of persons with a bachelor's degree,    EnglishOnly = share of persons that only communicate in English\n\n\n\n\n\n\n\n\n\nShow the Code\nkbl(head(hosp, 5)) %>% \n  kable_classic(full_width = F, html_font = \"Cambria\") %>% \n  kable_styling(bootstrap_option = c(\"hover\")) |> \n  column_spec(c(1), italic = T, color = \"DarkBlue\") %>% \n   footnote(general = \"nta = Name of the neighborhood, ntacode = Code of the neighborhood, \n            HospChildren = Number of children going to the hospital because of asthma, \n            HospChildRate = Rate of children going to the hospital because of asthma (per 10,000), \n            SmallSampleIndicator = Indicator variable equal to one if the sample is too small\", \n            general_title = \"Notes:\", footnote_as_chunk = T)\n\n\n\n\nTable 13:  Sample of asthma-related hospitalizations \n \n  \n    year \n    nta \n    ntacode \n    HospChildren \n    HospChildrenRate \n    SmallSampleIndicator \n  \n \n\n  \n    2014-2016 \n    Allerton-Pelham Gardens \n    BX31 \n    9 \n    18.3 \n    0 \n  \n  \n    2014-2016 \n    Annadale-Huguenot-Prince's Bay-Eltingville \n    SI01 \n    NA \n    2.9 \n    1 \n  \n  \n    2014-2016 \n    Arden Heights \n    SI48 \n    NA \n    2.3 \n    1 \n  \n  \n    2014-2016 \n    Astoria \n    QN70 \n    8 \n    10.1 \n    0 \n  \n  \n    2014-2016 \n    Auburndale \n    QN48 \n    0 \n    0.0 \n    0 \n  \n\n\nNotes:  nta = Name of the neighborhood, ntacode = Code of the neighborhood,             HospChildren = Number of children going to the hospital because of asthma,             HospChildRate = Rate of children going to the hospital because of asthma (per 10,000),             SmallSampleIndicator = Indicator variable equal to one if the sample is too small\n\n\n\n\n\n\n\n\n\nShow the Code\nkbl(head(er, 5)) %>% \n  kable_classic(full_width = F, html_font = \"Cambria\") %>% \n  kable_styling(bootstrap_option = c(\"hover\")) |> \n  column_spec(c(1), italic = T, color = \"DarkBlue\") %>% \n   footnote(general = \"nta = Name of the neighborhood, ntacode = Code of the neighborhood, \n            ErAdmissions = Number of children going to the ER because of asthma, \n            HospChildRate = Rate of children going to the ER because of asthma (per 10,000), \n            SmallSampleIndicator = Indicator variable equal to one if the sample is too small\", general_title = \"Notes:\", footnote_as_chunk = T)\n\n\n\n\nTable 14:  Sample of children ER admissions \n \n  \n    year \n    nta \n    boro \n    ntacode \n    ErAdmissions \n    ErAdmissionRate \n    SmallSampleIndicator \n  \n \n\n  \n    2014-2016 \n    Allerton-Pelham Gardens \n    Bronx \n    BX31 \n    115 \n    225.5 \n    0 \n  \n  \n    2014-2016 \n    Annadale-Huguenot-Prince's Bay-Eltingville \n    Staten Island \n    SI50 \n    14 \n    30.3 \n    0 \n  \n  \n    2014-2016 \n    Arden Heights \n    Staten Island \n    SI54 \n    14 \n    33.6 \n    0 \n  \n  \n    2014-2016 \n    Astoria \n    Queens \n    QN17 \n    79 \n    104.1 \n    0 \n  \n  \n    2014-2016 \n    Auburndale \n    Queens \n    QN14 \n    11 \n    38.7 \n    0 \n  \n\n\nNotes:  nta = Name of the neighborhood, ntacode = Code of the neighborhood,             ErAdmissions = Number of children going to the ER because of asthma,             HospChildRate = Rate of children going to the ER because of asthma (per 10,000),             SmallSampleIndicator = Indicator variable equal to one if the sample is too small\n\n\n\n\n\n\n\n\n\n\n Weather\n\n\nShow the Code\nweather = read_rds(paste0(file, \"02_GenData/03_weather/NycGsod.rds\"))\n\n\nI obtain weather data from the Global Surface Summary of the Day provided by the US National Centres for Environmental Information (NCEI). Table Table 15 shows the structure of the weather data. For each date between January 2006 and December 2018, I have daily average, minimum, and maximum temperature, atmospheric pressure, wind speed, precipitation, and relative humidity.\n\n\nShow the Code\n# Show the data set\nkbl(head(weather, 2)) %>% \n  kable_classic(full_width = F, html_font = \"Cambria\") %>% \n  kable_styling(bootstrap_option = c(\"hover\")) |> \n  column_spec(c(1), italic = T, color = \"DarkBlue\") %>% \n   footnote(general = str_wrap(\"tmp = Average temperature, MinTmp = Minimum temperature, \n            MaxTmp = Maximum temperature, dew = Dew point, atm = Atmospheric Pressure, \n            wsp = Wind speed, rain = Precipitation, rh = Relative humidity. \n            All temperatures in celsius and precipitation in millimeters\", 75), general_title = \"Notes:\", footnote_as_chunk = T)\n\n\n\n\nTable 15:  Weather data for New York City \n \n  \n    date \n    tmp \n    MinTmp \n    MaxTmp \n    dew \n    atm \n    wsp \n    rain \n    rh \n  \n \n\n  \n    2006-01-01 \n    2.08 \n    -0.28 \n    5.82 \n    -1.07 \n    12.20 \n    1.8 \n    4.45 \n    79.7 \n  \n  \n    2006-01-02 \n    5.38 \n    0.98 \n    8.05 \n    0.32 \n    20.27 \n    1.9 \n    1.78 \n    70.1 \n  \n\n\nNotes:  tmp = Average temperature, MinTmp = Minimum temperature, MaxTmp = Maximumtemperature, dew = Dew point, atm = Atmospheric Pressure, wsp = Wind speed,rain = Precipitation, rh = Relative humidity. All temperatures in celsiusand precipitation in millimeters\n\n\n\n\n\n\n\n\n\n\nFootnotes\n\n\nThe data is not publicly available. Instead, we sent an email to the NYSDEC asking them to provide the forecasted values under the freedom of information act. They were kind enough to give the entirety of predicted dates between 2008 and 2018↩︎"
  },
  {
    "objectID": "02_data.html#iconify-emojione-monotone-school-data-on-school-absences",
    "href": "02_data.html#iconify-emojione-monotone-school-data-on-school-absences",
    "title": " Data Sets",
    "section": " Data on School Absences",
    "text": "Data on School Absences\n\n\n\nI obtain data on school absences from the NYC open data-portal website. Table 1 shows the structure of the data. There are 3,339,158 observations in the panel with 1,854 unique school identifiers. The data set spans between Jan 2006 and Dec 2018. It contains the school’s id, the observation date, and the total number of enrolled, present, absent, and released students. It also includes a categorical variable indicating if an abnormal event affected school absences on that date, e.g., extreme weather events like blizzards or hurricanes. I further obtain data on the location of each school. Table 2 contains the school’s type, id, longitude, latitude, tract, neighbourhood, and borough. Table 3 presents socio-demographic data obtained from the New York State Department of Education (NYSDE). The table contains the school’s id, year of observation, count of enrolled students, and the share of female, male, Asian, Hispanic, Black, and White students. Other variables include the share of students with disabilities, learning English, qualifying for free or reduced price lunch, being eligible for human resources administration benefits (poverty), or facing economic hardship (eni). Finally, Table Table 4 contains the school id, the year of observation (only available from 2014), the share of students passing the English Language Art (ELA) and Mathematics (math) tests, and the percentage of fourth-year and sixth-year graduates.\n\nAbsencesLocationDemographicsProficiency\n\n\n\n\n\n\nTable 1:  Structure of the raw file on school absences in NYC \n \n  \n    id \n    date \n    SchoolYear \n    enrolled \n    present \n    absent \n    released \n    DayType \n  \n \n\n  \n    01M015 \n    2006-09-05 \n    2006-2007 \n    252 \n    226 \n    26 \n    0 \n    NormalDay \n  \n  \n    01M015 \n    2006-09-06 \n    2006-2007 \n    248 \n    227 \n    21 \n    0 \n    NormalDay \n  \n  \n    01M015 \n    2006-09-07 \n    2006-2007 \n    245 \n    228 \n    17 \n    0 \n    NormalDay \n  \n\n\n\n\n\n\n\n\n\n\n\n\nTable 2:  Data on the spatial location of schools in NYC \n \n  \n    id \n    lon \n    lat \n    tract \n    nta \n    ntacode \n    boro \n    SchoolType \n  \n \n\n  \n    01M015 \n    -73.97875 \n    40.72207 \n    002601 \n    Lower East Side \n    MN28 \n    Manhattan \n    Elementary \n  \n  \n    01M019 \n    -73.98450 \n    40.73001 \n    004000 \n    East Village \n    MN22 \n    Manhattan \n    Elementary \n  \n  \n    01M020 \n    -73.98631 \n    40.72131 \n    003001 \n    Chinatown \n    MN27 \n    Manhattan \n    Elementary \n  \n  \n    01M034 \n    -73.97506 \n    40.72601 \n    002800 \n    Lower East Side \n    MN28 \n    Manhattan \n    K-8 \n  \n  \n    01M063 \n    -73.98621 \n    40.72444 \n    003200 \n    East Village \n    MN22 \n    Manhattan \n    Elementary \n  \n\n\nNotes:   lon = Longitude, lat = Latitude, tract = US Census Tract, nta = neighborhood, boro = borough, SchholType = type of school\n\n\n\n\n\n\n\n\n\nShow the Code\n# Show the data set\nkbl(head(dem, 5)) %>% \n  kable_classic(full_width = T, html_font = \"Cambria\") %>% \n  kable_styling(bootstrap_option = c(\"hover\")) |> \n  column_spec(c(1), italic = T, color = \"DarkBlue\") %>% \n   footnote(general = \"id refers to School ID and students to the count of enrolled students in that school and year combinations. Each of the other columns contains the percentage of students within each category, e.g., female refers to the share of female students in the school. The poverty column refers to the share of students qualifying for free or reduced-price lunch or eligible for Human Resources Administration benefits. The eni column refers to the share of students facing economic hardship.\", general_title = \"Notes:\", footnote_as_chunk = T)\n\n\n\n\nTable 3:  Demographic data for NYC schools \n \n  \n    id \n    year \n    students \n    female \n    male \n    asian \n    hispanic \n    black \n    white \n    other \n    disabilities \n    EnglishLearners \n    poverty \n    eni \n  \n \n\n  \n    01M015 \n    2011 \n    189 \n    48.7 \n    51.3 \n    6.3 \n    57.7 \n    33.3 \n    2.1 \n    0.5 \n    27.50 \n    11.6 \n    100.00 \n    NaN \n  \n  \n    01M015 \n    2012 \n    177 \n    51.4 \n    48.6 \n    8.5 \n    52.5 \n    35.6 \n    1.7 \n    1.7 \n    31.10 \n    11.9 \n    100.00 \n    NaN \n  \n  \n    01M015 \n    2013 \n    190 \n    48.9 \n    51.1 \n    4.7 \n    54.7 \n    37.9 \n    1.6 \n    1.1 \n    34.20 \n    10.0 \n    95.00 \n    NaN \n  \n  \n    01M015 \n    2014 \n    183 \n    45.9 \n    54.1 \n    4.4 \n    58.5 \n    35.5 \n    1.1 \n    0.5 \n    35.00 \n    9.3 \n    96.15 \n    93.5 \n  \n  \n    01M015 \n    2015 \n    176 \n    47.2 \n    52.8 \n    5.1 \n    59.7 \n    32.4 \n    1.1 \n    1.7 \n    33.25 \n    9.1 \n    92.35 \n    89.6 \n  \n\n\nNotes:  id refers to School ID and students to the count of enrolled students in that school and year combinations. Each of the other columns contains the percentage of students within each category, e.g., female refers to the share of female students in the school. The poverty column refers to the share of students qualifying for free or reduced-price lunch or eligible for Human Resources Administration benefits. The eni column refers to the share of students facing economic hardship.\n\n\n\n\n\n\n\n\n\nShow the Code\n# Show the data set\nkbl(head(prof, 5)) %>% \n  kable_classic(full_width = T, html_font = \"Cambria\") %>% \n  kable_styling(bootstrap_option = c(\"hover\")) |> \n  column_spec(c(1), italic = T, color = \"DarkBlue\") %>% \n   footnote(general = \"id refers to School ID and. Each of the other columns contains the percentage of students within each category; e.g., ela refers to the share of students passing the English Learning Art test. The math column refers to the share of students passing the Mathematics test. And the Graduates4th and 6th columns refer to the share of graduates in each year respectively.\", general_title = \"Notes:\",  footnote_as_chunk = T)\n\n\n\n\nTable 4:  Proficiency data for NYC schools \n \n  \n    id \n    year \n    ela \n    math \n    Graduates4th \n    Graduates6th \n  \n \n\n  \n    17K002 \n    2014 \n    23.1 \n    23.1 \n    NA \n    NA \n  \n  \n    84K704 \n    2014 \n    16.7 \n    16.7 \n    NA \n    NA \n  \n  \n    75K141 \n    2014 \n    NA \n    NA \n    NA \n    NA \n  \n  \n    16K005 \n    2014 \n    NA \n    NA \n    NA \n    NA \n  \n  \n    75K369 \n    2014 \n    NA \n    NA \n    NA \n    NA \n  \n\n\nNotes:  id refers to School ID and. Each of the other columns contains the percentage of students within each category; e.g., ela refers to the share of students passing the English Learning Art test. The math column refers to the share of students passing the Mathematics test. And the Graduates4th and 6th columns refer to the share of graduates in each year respectively."
  },
  {
    "objectID": "02_data.html#iconify-akar-icons-air-data-on-the-air-quality-index",
    "href": "02_data.html#iconify-akar-icons-air-data-on-the-air-quality-index",
    "title": " Data Sets",
    "section": " Data on the air quality index",
    "text": "Data on the air quality index\n\n\nShow the Code\n# Load the AQI data sets\naqi = read_rds(paste0(file, \"02_GenData/02_aqi/RealAqi.rds\"))\n\n\nWe obtain data on measured AQI values from the Environmental Protection Agency (EPA). The EPA determines the AQI in all American counties with pollution measuring stations. At each point, the AQI for county \\(i\\) at time \\(t\\) is the maximum AQI across all stations and measured contaminants on that day. Table Table 9 shows the structure of the AQI data. It contains the observation date and the AQI values for each city (RealAqi) and each city borough.\n\n\nShow the Code\n# Show the data set\nkbl(head(aqi, 2)) %>% \n  kable_classic(full_width = T, html_font = \"Cambria\") %>% \n  kable_styling(bootstrap_option = c(\"hover\")) |> \n  column_spec(c(1), italic = T, color = \"DarkBlue\") %>% \n   footnote(general = \"This table contains a sample of the AQI data from the EPA. The data contains an observation for each date between January 1st, 2009, and October 1st, 2019. Each column refers to the AQI value in the respective borough. The RealAqi column is the maximum AQI value across all boroughs in the city\", general_title = \"Notes:\", footnote_as_chunk = T)\n\n\n\n\nTable 9:  Values of the AQI in NYC \n \n  \n    date \n    RealAqi \n    BronxAQI \n    BrooklynAQI \n    ManhattanAQI \n    QueensAQI \n    StatenIslandAQI \n  \n \n\n  \n    2008-01-01 \n    67 \n    67 \n    57 \n    67 \n    60 \n    58 \n  \n  \n    2008-01-02 \n    55 \n    52 \n    45 \n    55 \n    45 \n    43 \n  \n\n\nNotes:  This table contains a sample of the AQI data from the EPA. The data contains an observation for each date between January 1st, 2009, and October 1st, 2019. Each column refers to the AQI value in the respective borough. The RealAqi column is the maximum AQI value across all boroughs in the city"
  },
  {
    "objectID": "02_data.html#demographic-covariates",
    "href": "02_data.html#demographic-covariates",
    "title": " Data Sets",
    "section": "Demographic covariates",
    "text": "Demographic covariates\nHere, I present all other demographic and health covariates I use to explore if there are heterogeneous treatment effects on the impact of the AQHAs on school absences. Here, I load the main data files.\n\n\nShow the Code\necon = read_rds(paste0(file, \"02_GenData/03_dem/econ.rds\"))\ndem = read_rds(paste0(file,\"02_GenData/03_dem/dem.rds\"))\nsoc = read_rds(paste0(file,\"02_GenData/03_dem/soc.rds\"))\nhosp = read_rds(paste0(file,\"02_GenData/03_dem/AsthmaHosp.rds\"))\ner = read_rds(paste0(file,\"02_GenData/03_dem/AsthmaEr.rds\"))\n\n\nWe collect different economic, demographic, and health covariates at the neighborhood level from two primary sources; for socio-demographic variables, we use public data from the American Community Survey between 2012-2016. For the health data, we use the information on children’s asthma-related hospitalization and ER admissions from the New York State Department of Health.\n\nEconomicDemographicSocialHospitalizationsER Admissions\n\n\n\n\nShow the Code\nkbl(head(econ, 5)) %>% \n  kable_classic(full_width = T, html_font = \"Cambria\") %>% \n  kable_styling(bootstrap_option = c(\"hover\")) |> \n  column_spec(c(1), italic = T, color = \"DarkBlue\") %>% \n   footnote(general = \"nta = Name of the neighborhood, ntacode = Code of the neighborhood, \n            boro = Name of the borough, FemaleLF = share of working age women at work, \n            MeanIncome = Average income, MedianIncome = Median Income\" , general_title = \"Notes:\", footnote_as_chunk = T)\n\n\n\n\n \n  \n    nta \n    ntacode \n    boro \n    FemaleLF \n    MeanIncome \n    MedianIncome \n  \n \n\n  \n    Bath Beach \n    BK27 \n    Brooklyn \n    52.6 \n    75950 \n    58243 \n  \n  \n    Bay Ridge \n    BK31 \n    Brooklyn \n    57.8 \n    86319 \n    63539 \n  \n  \n    Bedford \n    BK75 \n    Brooklyn \n    62.9 \n    62616 \n    39970 \n  \n  \n    Bensonhurst East \n    BK29 \n    Brooklyn \n    54.6 \n    65715 \n    48097 \n  \n  \n    Bensonhurst West \n    BK28 \n    Brooklyn \n    54.5 \n    70198 \n    51035 \n  \n\n\nNotes:  nta = Name of the neighborhood, ntacode = Code of the neighborhood,             boro = Name of the borough, FemaleLF = share of working age women at work,             MeanIncome = Average income, MedianIncome = Median Income\n\n\n\n\n\n\n\n\nShow the Code\nkbl(head(dem, 5)) %>% \n  kable_classic(full_width = T, html_font = \"Cambria\") %>% \n  kable_styling(bootstrap_option = c(\"hover\")) |> \n  column_spec(c(1), italic = T, color = \"DarkBlue\") %>% \n   footnote(general = \"nta = Name of the neighborhood, ntacode = Code of the neighborhood, \n            boro = Name of the borough, ShareHisp = share of Hispanic persons, \n            ShareWhite = Share of white persons, ShareBlack = Share of black persons\", general_title = \"Notes:\", footnote_as_chunk = T)\n\n\n\n\n \n  \n    nta \n    ntacode \n    boro \n    ShareHisp \n    ShareWhite \n    ShareBlack \n  \n \n\n  \n    Bath Beach \n    BK27 \n    Brooklyn \n    17.7 \n    43.7 \n    1.2 \n  \n  \n    Bay Ridge \n    BK31 \n    Brooklyn \n    17.9 \n    63.4 \n    1.9 \n  \n  \n    Bedford \n    BK75 \n    Brooklyn \n    19.5 \n    35.1 \n    40.6 \n  \n  \n    Bensonhurst East \n    BK29 \n    Brooklyn \n    12.3 \n    46.5 \n    0.8 \n  \n  \n    Bensonhurst West \n    BK28 \n    Brooklyn \n    14.6 \n    42.7 \n    0.9 \n  \n\n\nNotes:  nta = Name of the neighborhood, ntacode = Code of the neighborhood,             boro = Name of the borough, ShareHisp = share of Hispanic persons,             ShareWhite = Share of white persons, ShareBlack = Share of black persons\n\n\n\n\n\n\n\n\nShow the Code\nkbl(head(soc, 5)) %>% \n  kable_classic(full_width = T, html_font = \"Cambria\") %>% \n  kable_styling(bootstrap_option = c(\"hover\")) |> \n  column_spec(c(1), italic = T, color = \"DarkBlue\") %>% \n   footnote(general = \"nta = Name of the neighborhood, ntacode = Code of the neighborhood, \n            boro = Name of the borough, SingleParents = share of single-parent households, \n            GrandParentsAid = share of families with help from grandparents, \n            LessThanHighschool = share of persons that did not complete high school, \n            Bachelor = share of persons with a bachelor's degree, \n            EnglishOnly = share of persons that only communicate in English\", \n            general_title = \"Notes:\", footnote_as_chunk = T)\n\n\n\n\n \n  \n    nta \n    ntacode \n    boro \n    SingleParents \n    GrandParentsAid \n    LessThanHighschool \n    Bachelor \n    EnglishOnly \n  \n \n\n  \n    Bath Beach \n    BK27 \n    Brooklyn \n    26.2 \n    3.1 \n    23.0 \n    33.6 \n    31.0 \n  \n  \n    Bay Ridge \n    BK31 \n    Brooklyn \n    24.1 \n    1.8 \n    13.8 \n    46.4 \n    49.0 \n  \n  \n    Bedford \n    BK75 \n    Brooklyn \n    51.1 \n    3.9 \n    21.7 \n    32.2 \n    58.9 \n  \n  \n    Bensonhurst East \n    BK29 \n    Brooklyn \n    27.6 \n    3.9 \n    25.1 \n    30.2 \n    24.3 \n  \n  \n    Bensonhurst West \n    BK28 \n    Brooklyn \n    26.3 \n    2.1 \n    28.1 \n    26.2 \n    26.1 \n  \n\n\nNotes:  nta = Name of the neighborhood, ntacode = Code of the neighborhood,             boro = Name of the borough, SingleParents = share of single-parent households,             GrandParentsAid = share of families with help from grandparents,             LessThanHighschool = share of persons that did not complete high school,             Bachelor = share of persons with a bachelor's degree,             EnglishOnly = share of persons that only communicate in English\n\n\n\n\n\n\n\n\nShow the Code\nkbl(head(hosp, 5)) %>% \n  kable_classic(full_width = T, html_font = \"Cambria\") %>% \n  kable_styling(bootstrap_option = c(\"hover\")) |> \n  column_spec(c(1), italic = T, color = \"DarkBlue\") %>% \n   footnote(general = \"nta = Name of the neighborhood, ntacode = Code of the neighborhood, \n            HospChildren = Number of children going to the hospital because of asthma, \n            HospChildRate = Rate of children going to the hospital because of asthma (per 10,000), \n            SmallSampleIndicator = Indicator variable equal to one if the sample is too small\", general_title = \"Notes:\", footnote_as_chunk = T)\n\n\n\n\n \n  \n    year \n    nta \n    ntacode \n    HospChildren \n    HospChildrenRate \n    SmallSampleIndicator \n  \n \n\n  \n    2014-2016 \n    Allerton-Pelham Gardens \n    BX31 \n    9 \n    18.3 \n    0 \n  \n  \n    2014-2016 \n    Annadale-Huguenot-Prince's Bay-Eltingville \n    SI01 \n    NA \n    2.9 \n    1 \n  \n  \n    2014-2016 \n    Arden Heights \n    SI48 \n    NA \n    2.3 \n    1 \n  \n  \n    2014-2016 \n    Astoria \n    QN70 \n    8 \n    10.1 \n    0 \n  \n  \n    2014-2016 \n    Auburndale \n    QN48 \n    0 \n    0.0 \n    0 \n  \n\n\nNotes:  nta = Name of the neighborhood, ntacode = Code of the neighborhood,             HospChildren = Number of children going to the hospital because of asthma,             HospChildRate = Rate of children going to the hospital because of asthma (per 10,000),             SmallSampleIndicator = Indicator variable equal to one if the sample is too small\n\n\n\n\n\n\n\n\nShow the Code\nkbl(head(er, 5)) %>% \n  kable_classic(full_width = T, html_font = \"Cambria\") %>% \n  kable_styling(bootstrap_option = c(\"hover\")) |> \n  column_spec(c(1), italic = T, color = \"DarkBlue\") %>% \n   footnote(general = \"nta = Name of the neighborhood, ntacode = Code of the neighborhood, \n            ErAdmissions = Number of children going to the ER because of asthma, \n            HospChildRate = Rate of children going to the ER because of asthma (per 10,000), \n            SmallSampleIndicator = Indicator variable equal to one if the sample is too small\", general_title = \"Notes:\", footnote_as_chunk = T)\n\n\n\n\n \n  \n    year \n    nta \n    boro \n    ntacode \n    ErAdmissions \n    ErAdmissionRate \n    SmallSampleIndicator \n  \n \n\n  \n    2014-2016 \n    Allerton-Pelham Gardens \n    Bronx \n    BX31 \n    115 \n    225.5 \n    0 \n  \n  \n    2014-2016 \n    Annadale-Huguenot-Prince's Bay-Eltingville \n    Staten Island \n    SI50 \n    14 \n    30.3 \n    0 \n  \n  \n    2014-2016 \n    Arden Heights \n    Staten Island \n    SI54 \n    14 \n    33.6 \n    0 \n  \n  \n    2014-2016 \n    Astoria \n    Queens \n    QN17 \n    79 \n    104.1 \n    0 \n  \n  \n    2014-2016 \n    Auburndale \n    Queens \n    QN14 \n    11 \n    38.7 \n    0 \n  \n\n\nNotes:  nta = Name of the neighborhood, ntacode = Code of the neighborhood,             ErAdmissions = Number of children going to the ER because of asthma,             HospChildRate = Rate of children going to the ER because of asthma (per 10,000),             SmallSampleIndicator = Indicator variable equal to one if the sample is too small"
  },
  {
    "objectID": "02_data.html#weather-data",
    "href": "02_data.html#weather-data",
    "title": " Data Sets",
    "section": "Weather data",
    "text": "Weather data\n\n\nShow the Code\nweather = read_rds(paste0(file, \"02_GenData/03_weather/NycGsod.rds\"))\n\n\nWe obtain weather data for the city of New York from the Global Surface Summary of the Day data provided by the US National Centres for Environmental Information (NCEI). Table Table 10 shows the structure of the weather data. For each date between January 2006 and December 2018, we have daily average, minimum, and maximum temperature, alongside atmospheric pressure, wind speed, precipitation, and relative humidity.\n\n\nShow the Code\n# Show the data set\nkbl(head(weather, 2)) %>% \n  kable_classic(full_width = T, html_font = \"Cambria\") %>% \n  kable_styling(bootstrap_option = c(\"hover\")) |> \n  column_spec(c(1), italic = T, color = \"DarkBlue\") %>% \n   footnote(general = \"tmp = Average temperature, MinTmp = Minimum temperature, MaxTmp = Maximum temperature, dew = Dew point, atm = Atmospheric Pressure, wsp = Wind speed, rain = Precipitation, rh = Relative humidity. All temperatures in celsius and precipitation in millimeters\", general_title = \"Notes:\", footnote_as_chunk = T)\n\n\n\n\nTable 10:  Weather data for New York City \n \n  \n    date \n    tmp \n    MinTmp \n    MaxTmp \n    dew \n    atm \n    wsp \n    rain \n    rh \n  \n \n\n  \n    2006-01-01 \n    2.08 \n    -0.28 \n    5.82 \n    -1.07 \n    12.20 \n    1.8 \n    4.45 \n    79.7 \n  \n  \n    2006-01-02 \n    5.38 \n    0.98 \n    8.05 \n    0.32 \n    20.27 \n    1.9 \n    1.78 \n    70.1 \n  \n\n\nNotes:  tmp = Average temperature, MinTmp = Minimum temperature, MaxTmp = Maximum temperature, dew = Dew point, atm = Atmospheric Pressure, wsp = Wind speed, rain = Precipitation, rh = Relative humidity. All temperatures in celsius and precipitation in millimeters"
  },
  {
    "objectID": "04_methods.html",
    "href": "04_methods.html",
    "title": " Methodology",
    "section": "",
    "text": "Regression Discontinuity\nFirst, I infer causality with a regression discontinuity design (RD). The RD exploits the quasi-random allocation of air quality alerts around the emission threshold to infer causality. The central assumption is that days with forecasted AQI values very close to the alert at either side of the emission threshold only differ because of the alert and not because of concomitant factors like weather or air pollution. Under this assumption, the difference in the expected value of school absences on days just below and above the emission threshold is the local average treatment effect on the treated around the discontinuity.\nThe following panel shows the data-driven sharp discontinuity RD plot of school absences as a function of the AQI. The left panel contains a natural linear fit to the left and right sides of the discontinuity. In contrast, the right panel adjusts the polynomial fit with weekday, school year, month, and school period fixed effects alongside weather covariates in the form of average, minimum, and maximum temperature, precipitation, wind speed, and relative humidity. The graphical representation of the discontinuity suggests a jump in school absences after the alert.\n\n\n\n\n\n\nDiscontinuity in school absences around the alert threshold\n\n\n\n\n\n\n\nDiscontinuity in school absences around the alert threshold (Covariate Adjusted)\n\n\n\n\n\nA central assumption of the RD is that no discontinuous unobservables affect both the score and dependant variables. Unfortunately, in the case of air quality alerts in New York, this is not the case. For instance, if both the likelihood of an alert and school absences are consistently higher on Mondays, we may capture the Monday instead of the alert’s effect. To control for the discontinuous impact of this kind of temporal covariates, I run three additional specifications to the raw RD. The first one adds weekday, month, school year, school period, and holiday fixed effects, while the second one further includes average, minimum, and maximum temperature, precipitation, wind speed, and relative humidity as weather covariates. Equation RD specifies the functional form of the preferred model.\n\\[\nAbsent_{nt}  =  \\beta D_{t}(AQI_{t} \\geq 101) + \\tilde{\\mu}^- f(AQI_t)+ \\tilde{\\mu}^+ f(AQI{_t}\\times D_{nt}) +  W'_{nt} \\Delta + \\Omega_{t} + \\epsilon_{t}\n\\] In it, \\(Absent_{nt}\\) is the log of absent students at neighborhood \\(n\\) on day \\(t\\), \\(AQI_{t}\\) is the AQI forecast at time \\(t\\), and \\(D_{t}\\) the treatment indicator equal to one when the AQI is higher than one hundred units. \\(f(AQI_{t}\\times D_{nt})\\) is a linear fit before (\\(\\tilde{\\mu}_{-}\\)) and after (\\(\\tilde{\\mu}_{+}\\)) the discontinuity; I use a linear fit because it performs better and has more accurate boundary properties than higher-order polynomials . \\(W'_{nt}\\) and \\(\\Omega_{t}\\) are matrices of weather controls and time fixed-effects. The estimate of interest, \\(\\beta\\), captures the of the alert on school absences around the emission threshold. finally, the bandwidth around the discontinuity comes from the data-driven plug-in rules based on mean squared error expansions proposed by .\nThe RD strategy is suitable to assess the effect of the alert as parents, schools, or neighborhoods cannot manipulate the AQI or the emission of the alert. Furthermore, there is perfect compliance between the alert’s emission and the running variable as every time the AQI forecast surpasses one hundred units, the probability of the alert jumps from zero to one. Still, there remains the possibility that New Yorkers conditional expectation of an alert would rely on the raw AQI independent of the forecast. Thus, similar to , I provide robust estimates for a fuzzy regression discontinuity design, which exploits the discontinuity in the probability of assignment to treatment to infer causality.\nBesides the fuzzy RD, I perform three robustness exercises in case the fixed effects are not flexible enough to reduce the bias from correlated temporal covariates. First, I run the RD for a matched data set of treatment and control units. I match both groups with propensity score matching based on weather covariates, the weekday, and the month of the observation. Second, I estimate a two-stage RD with the residuals of a Poisson pseudo-maximum likelihood estimator panel model of school absences as a function of selected weather covariates and fixed effects. Third, I estimate a two-stage least-squares (2sls) Poisson MLE with the difference between the actual and forecasted AQI in linear and quadratic form as instruments for the alert"
  },
  {
    "objectID": "05_regressions.html",
    "href": "05_regressions.html",
    "title": " Results",
    "section": "",
    "text": "Ordinary Least Squares (OLS)\nFirst, I estimate the effect of AQAs on school absences with a simple ordinary least squares model of absences on neighborhood \\(i\\) at time \\(t\\) as a function of a treatment indicator equal to one if there is an alert. Equation Equation 1 shows the econometric specification of the OLS estimator.\n\\[\nAbsent_{it} = \\beta Treat_{t} + f(Temp_t, Rain_t) + AQI_t  + \\Omega_t + \\lambda_i + \\epsilon_{it}\n\\tag{1}\\]\nIn it, \\(Absent_{it}\\) is a panel-vector of absences at time \\(t\\) across all neighborhoods in New York City. \\(Treat_{t}\\) is an indicator variable equal to one if the New York State Department of Environmental Conservation emits an alert at \\(t\\). \\(\\beta\\) is the point estimate of interest capturing the relationship between the alert dummy and school absenteeism. I account for the biasing effects of weather covariates by explicitly controlling for temperature and precipitation. Mainly, I remain agnostic on the relationship between weather and school absences by specifying \\(k-1\\) quintile indicator variables for temperature and rain. Next, I consider the effect of pollution exposure on school absences by accounting for the actual value of the air quality index at \\(t\\) (\\(AQI_t\\)). I incorporate seasonality into the empirical model through time-dependent fixed effects (\\(\\Omega_t\\)). Specifically, I include year, month, and weekday fixed effects alongside an indicator variable of day types controlling for exogenous weather or administrative shocks to school absences. Finally \\(\\lambda_i\\) are neighborhood fixed effects and \\(epsilon_{it}\\) the error term clustered at the neighborhood-by-week level to account for the possibility of inter-temporal correlation within neighborhoods and school weeks.\nTable 1 contains the results of estimating the Equation 1 in levels across three different specifications. (1) controls for weather and air pollution at \\(t\\) alongside neighborhood fixed effects and an indicator variable for day-types controlling for unobservable shocks to school absences like hurricanes or general examinations. (2) further includes weekday, month, and year fixed effects to account for seasonality. Finally, (3) is a more restrictive design capturing the effect of the alerts on school absences from within neighborhood-month variation in absenteeism by adding the interaction of neighborhood, year, and month fixed effects. Furthermore (3) also assumes different weekday patterns across neighborhood by including neighborhood-by-weekday fixed effects.\n\nMain resultsLog results\n\n\n\n\nShow the Code\n# Set the path of the R-studio project\nfile = gsub(\"AQAs_SchoolAbsences_NYC\", \"\", getwd())\n# Load the results\ntab = read_rds(paste0(file, \"/02_GenData/06_RegResults/01_rdd/MainOls.rds\"))\n# Include the set of fixed effects and controls\nfe = rbind(`Air Quality index` = c(rep(\"Yes\", 3)), \n           `Weather Controls` = c(rep(\"Yes\", 3)),\n           `Neighborhood FEs` = rep(\"Yes\", 3), \n           `Type of Day FEs` = rep(\"Yes\", 3),\n           `Weekday FEs` = c(rep(\"\", 1), rep(\"Yes\", 2)), \n           `Month FEs`  = c(rep(\"\", 1), rep(\"Yes\", 2)), \n           `Year FEs`  = c(rep(\"\", 1), rep(\"Yes\", 2)), \n           `Year-Month-Neighborhood FEs` = c(rep(\"\", 2), rep(\"Yes\", 1)), \n           `Weekday-Neighborhood FEs` = c(rep(\"\", 2), rep(\"Yes\", 1))) %>%\n  as.data.frame(.) %>% setNames(., names(tab))\n# Add the data with the control variables\ntab = rbind(tab, fe)\n# Create the regression table\nkbl(tab, align = \"c\", digits = 2) %>%\n  kable_classic() %>% kable_styling(bootstrap_option = c(\"hover\")) %>%\n  pack_rows(\"Fitted-Statistics\", 3, 5) %>% pack_rows(\"Controls\", 6, 14) %>% \n  footnote(general = \"Effects of air quality health advisories on school absences in New York City. Point estimates come from an OLS estimator of daily school absences per neighborhood as a fucntion of an indicator variable equal to one in days with air quality health advisories. Interpret point estimates as the effect in absences because of the advisory. Standard errors clustered at the neighborhood-by-week level to account for possible inter-temporal correlations within cities and weeks of the year. Significance Codes: ***: 0.01, **: 0.05, *: 0.1\", general_title = \"Notes:\", footnote_as_chunk = T) %>% scroll_box(height = \"380px\")\n\n\n\n\nTable 1:  Effect of the alert on school absences (OLS) \n \n  \n      \n    1 \n    2 \n    3 \n  \n \n\n  \n    Estimate \n    124.97 *** \n    82.40 *** \n    80.93 *** \n  \n  \n     \n    (9.58) \n    (8.48) \n    (7.42) \n  \n  Fitted-Statistics\n\n    N.obs \n    355144 \n    355144 \n    355144 \n  \n  \n    R2 \n    0.62 \n    0.67 \n    0.72 \n  \n  \n    BIC \n    4961 \n    4917 \n    5115 \n  \n  Controls\n\n    Air Quality index \n    Yes \n    Yes \n    Yes \n  \n  \n    Weather Controls \n    Yes \n    Yes \n    Yes \n  \n  \n    Neighborhood FEs \n    Yes \n    Yes \n    Yes \n  \n  \n    Type of Day FEs \n    Yes \n    Yes \n    Yes \n  \n  \n    Weekday FEs \n     \n    Yes \n    Yes \n  \n  \n    Month FEs \n     \n    Yes \n    Yes \n  \n  \n    Year FEs \n     \n    Yes \n    Yes \n  \n  \n    Year-Month-Neighborhood FEs \n     \n     \n    Yes \n  \n  \n    Weekday-Neighborhood FEs \n     \n     \n    Yes \n  \n\n\nNotes:  Effects of air quality health advisories on school absences in New York City. Point estimates come from an OLS estimator of daily school absences per neighborhood as a fucntion of an indicator variable equal to one in days with air quality health advisories. Interpret point estimates as the effect in absences because of the advisory. Standard errors clustered at the neighborhood-by-week level to account for possible inter-temporal correlations within cities and weeks of the year. Significance Codes: ***: 0.01, **: 0.05, *: 0.1\n\n\n\n\n\n\n\n\n\nShow the Code\n# Set the path of the R-studio project\nfile = gsub(\"AQAs_SchoolAbsences_NYC\", \"\", getwd())\n# Load the results\ntab = read_rds(paste0(file, \"/02_GenData/06_RegResults/01_rdd/LogOls.rds\"))\n# Include the set of fixed effects and controls\nfe = rbind(`Weather Controls` = c(rep(\"Yes\", 3)),\n           `Neighborhood FEs` = rep(\"Yes\", 3), \n           `Type of Day FEs` = rep(\"Yes\", 3),\n           `Weekday FEs` = c(rep(\"\", 1), rep(\"Yes\", 2)), \n           `Month FEs`  = c(rep(\"\", 1), rep(\"Yes\", 2)), \n           `Year FEs`  = c(rep(\"\", 1), rep(\"Yes\", 2)), \n           `AQI` = c(rep(\"\", 2), rep(\"Yes\", 1))) %>%\n  as.data.frame(.) %>% setNames(., names(tab))\n# Add the data with the control variables\ntab = rbind(tab, fe)\n# Create the regression table\nkbl(tab, align = \"c\", digits = 2) %>%\n  kable_classic() %>% kable_styling(bootstrap_option = c(\"hover\")) %>%\n  pack_rows(\"Fitted-Statistics\", 3, 5) %>% pack_rows(\"Controls\", 6, 12) %>% \n  footnote(general = \"Effects of air quality health advisories on school absences in New York City. Point estimates come from an OLS (log) estimator of the log of daily school absences per neighborhood as a fucntion of an indicator variable equal to one in days with air quality health advisories. Interpret point estimates as the effect in absences because of the advisory. Standard errors clustered at the neighborhood-by-week level to account for possible inter-temporal correlations within cities and weeks of the year. Significance Codes: ***: 0.01, **: 0.05, *: 0.1\", general_title = \"Notes:\", footnote_as_chunk = T)  %>% scroll_box(height = \"380px\")\n\n\n\n\nTable 2:  Effect of the alert on school absences (Log OLS) \n \n  \n      \n    1 \n    2 \n    3 \n  \n \n\n  \n    Estimate \n    17.6872 *** \n    12.6736 *** \n    12.6285 *** \n  \n  \n     \n    (1.1698) \n    (0.9713) \n    (0.8527) \n  \n  Fitted-Statistics\n\n    N.obs \n    355144 \n    355144 \n    355144 \n  \n  \n    R2 \n    0.8188 \n    0.8549 \n    0.8914 \n  \n  \n    BIC \n    354 \n    275 \n    437 \n  \n  Controls\n\n    Weather Controls \n    Yes \n    Yes \n    Yes \n  \n  \n    Neighborhood FEs \n    Yes \n    Yes \n    Yes \n  \n  \n    Type of Day FEs \n    Yes \n    Yes \n    Yes \n  \n  \n    Weekday FEs \n     \n    Yes \n    Yes \n  \n  \n    Month FEs \n     \n    Yes \n    Yes \n  \n  \n    Year FEs \n     \n    Yes \n    Yes \n  \n  \n    AQI \n     \n     \n    Yes \n  \n\n\nNotes:  Effects of air quality health advisories on school absences in New York City. Point estimates come from an OLS (log) estimator of the log of daily school absences per neighborhood as a fucntion of an indicator variable equal to one in days with air quality health advisories. Interpret point estimates as the effect in absences because of the advisory. Standard errors clustered at the neighborhood-by-week level to account for possible inter-temporal correlations within cities and weeks of the year. Significance Codes: ***: 0.01, **: 0.05, *: 0.1\n\n\n\n\n\n\n\n\nAcross all specifications, the OLS results suggest that AQAs increase school absences by 112.9 in the most parsimonious model and 62.9 in the full model with high-dimensional fixed effects. According to the Bayes Information Criteria (BIC), the second column without high-dimensional fixed effects is the prefered specification, implying 64.9 additional missing students per NYC neighborhood on days with AQAs. In Table 2 I provide elasticities by estimating the OLS with the log of school absences as dependent variable. Results imply that the raise in school absences translates to percentage increase between 11.8% and 16.3%.\nNext, I perform different robustness exercises to check the stability of point estimates. In Figure 1, I estimate the effect of changing the specification of weather controls across six different models. a) Is the preferred specification with quintile indicator variables of rain and temperature. b) excludes all weather controls from the estimation. c)Changes the quintile indicator variables to decile indicator variables. d) Only controls linearly for temperature and precipitation. e) adds to d a linear specification of relative humidity, wind speed, and atmospheric pressure. Finally, f) includes the quintile indicator variables of temperature and precipitation alongside linear controls for relative humidity, wind speed, and atmospheric pressure. It is reassuring to see that across specifications, the effect of the AQAs on school absences remains positive and significant. The estimates go from 5.68% to 13.83% in the fourth and third specifications. On the one hand, using decile indicators (3rd design) may decrease point estimates by significantly decreasing the available variance we need to identify the effect. On the other, controlling linearly for temperature and precipitation (4th design) may not account for nonlinearities in the weather-absences relationship.\n\nWeather RobustnessAQI RobustnessCluster SEs Robustness\n\n\n\n\n\nShow the Code\n# Set the path of the R-studio project\nfile = gsub(\"AQAs_SchoolAbsences_NYC\", \"\", getwd())\n# Load the data\ndata = read_rds(paste0(file, \"/02_GenData/06_RegResults/01_rdd/OlsRobustWeather.rds\"))\n# Add the specification \ndata = mutate(data, notes = c(\"b) No Weather Controls\", \"a) Prefered Spec\", \n                              \"c) Decile indicators\", \"d) Linear Temp and Rain\", \n                              \"e) Linear weather controls\", \n                              \"f) Preferd plus linear controls\"))\n# Add the confidence intervals\ndata = mutate(data, up = estimate + std.error*1.64, \n              down = estimate - std.error*1.645, \n              ci = paste0(round(estimate,2), \" (\", round(up, 2),\"-\", round(down, 2), \")\"))\n# Add the limits of the plot\nmax = filter(data, up == max(up))$up; min = 0\nmaxy = length(unique(data$spec)) + 1\n# Plot the estimates\nggplot(data) + \n  geom_errorbar(aes(y = str_wrap(notes, width = 17), \n                    xmax = up, xmin = down),  width = 0.25)  + \n  geom_point(aes(x = estimate, y = str_wrap(notes, width = 17))) + \n  geom_vline(aes(xintercept = 0), color = \"red\") +\n  labs(x = \"\", y = \"\") + \n  theme_economist() %+replace% theme(plot.margin = margin(1, 7, 1, .5, unit = \"cm\")) +\n  geom_text(aes(x = max + max/2.75, y = str_wrap(notes, width = 17), label = ci), position = position_dodge(width = 0.5)) +  \n  annotate(\"text\", label = \"Estimate (90% CI)\", x = max + max/2.75, y = maxy , hjust = \"0\")  + \n  geom_text(aes(x = max + max/1.2, y = str_wrap(notes, width = 17), label = round(r2,2)), position = position_dodge(width = 0.5)) +  \n  annotate(\"text\", label = \"R.Squared\", x = max + max/1.2, y = maxy , hjust = \"0\")  + \n  coord_cartesian(xlim = c(min, max), clip = \"off\")\n\n\n\n\n\n(a) Weather Robustness\n\n\n\nFigure 1: Effect of the alert on school absences (Log Model)\n\n\n\n\n\n\n\nShow the Code\n# Set the path of the R-studio project\nfile = gsub(\"AQAs_SchoolAbsences_NYC\", \"\", getwd())\n# Load the data\ndata = read_rds(paste0(file, \"/02_GenData/06_RegResults/01_rdd/OlsRobustAqi.rds\"))\n# Add the specification \ndata = mutate(data, notes = c(\"b) No Aqi\", \"a) Prefered Specification\", \n                              \"c) Quadratic AQI\", \"d) Quintile AQI\", \"e) Decile AQI\"))\n# Add the confidence intervals\ndata = mutate(data, up = estimate + std.error*1.64, \n              down = estimate - std.error*1.645, \n              ci = paste0(round(estimate,2), \" (\", round(up, 2),\"-\", round(down, 2), \")\"))\n# Add the limits of the plot\nmax = filter(data, up == max(up))$up; min = 0\nmaxy = length(unique(data$spec)) + 1\n# Plot the estimates\nggplot(data) + \n  geom_errorbar(aes(y = str_wrap(notes, width = 17), \n                    xmax = up, xmin = down),  width = 0.25)  + \n  geom_point(aes(x = estimate, y = str_wrap(notes, width = 17))) + \n  geom_vline(aes(xintercept = 0), color = \"red\") +\n  labs(x = \"\", y = \"\") + \n  theme_economist() %+replace% theme(plot.margin = margin(1, 7, 1, .5, unit = \"cm\")) +\n  geom_text(aes(x = max + max/2.75, y = str_wrap(notes, width = 17), label = ci), position = position_dodge(width = 0.5)) +  \n  annotate(\"text\", label = \"Estimate (90% CI)\", x = max + max/2.75, y = maxy , hjust = \"0\")  + \n  geom_text(aes(x = max + max/1.2, y = str_wrap(notes, width = 17), label = round(r2,2)), position = position_dodge(width = 0.5)) +  \n  annotate(\"text\", label = \"R.Squared\", x = max + max/1.2, y = maxy , hjust = \"0\")  + \n  coord_cartesian(xlim = c(min, max), clip = \"off\")\n\n\n\n\n\n(a) AQI Robustness\n\n\n\nFigure 2: Effect of the alert on school absences (Log Model)\n\n\n\n\n\n\n\nShow the Code\n# Set the path of the R-studio project\nfile = gsub(\"AQAs_SchoolAbsences_NYC\", \"\", getwd())\n# Load the data\ndata = read_rds(paste0(file, \"/02_GenData/06_RegResults/01_rdd/OlsRobustCluster.rds\"))\n# Add the specification \ndata = mutate(data, notes = c(\"Prefered Spec\", \"Hood-Month-Year\", \n                              \"Hood-Year\", \"Hood\"))\n# Add the confidence intervals\ndata = mutate(data, up = estimate + std.error*1.64, \n              down = estimate - std.error*1.645, \n              ci = paste0(round(estimate,2), \" (\", round(up, 2),\"-\", round(down, 2), \")\"))\n# Add the limits of the plot\nmax = filter(data, up == max(up))$up; min = 0\nmaxy = length(unique(data$spec)) + 1\n# Plot the estimates\nggplot(data) + \n  geom_errorbar(aes(y = str_wrap(notes, width = 17), \n                    xmax = up, xmin = down),  width = 0.25)  + \n  geom_point(aes(x = estimate, y = str_wrap(notes, width = 17))) + \n  geom_vline(aes(xintercept = 0), color = \"red\") +\n  labs(x = \"\", y = \"\") + \n  theme_economist() %+replace% theme(plot.margin = margin(1, 5, 1, .5, unit = \"cm\")) +\n  \n  geom_text(aes(x = max + max/2.75, y = str_wrap(notes, width = 17), label = ci), \n            position = position_dodge(width = 0.5)) + \n  \n  annotate(\"text\", label = \"Estimate (90% CI)\", x = max + max/2.75, y = maxy , hjust = \"0\")  + \n  coord_cartesian(xlim = c(min, max), clip = \"off\")\n\n\n\n\n\n(a) AQI Robustness\n\n\n\nFigure 3: Effect of the alert on school absences (Different Clustering of SEs)\n\n\n\n\n\nIn fig-OlsAqiRobust, I estimate the effect of changing how I control students’ exposure to air pollution. a) is the preferred model where I linearly control for the AQI. b) excludes the AQI from the preferred specification. c) includes a quadratic representation of the AQI. d) controls for exposure to air pollution with k-1 quintile indicator variables of the AQI. Finally, e) changes the quintile for decile indicator variables of exposure. Across all specifications, there are no significant changes in the effect of AQAs on school absences, reducing concerns regarding the biasing impact of actual pollution exposure on my point estimates. Finally Figure 3 contains the confidence intervals of four different clustering specifications. Results show that the qualitative conclussions of the study are not sensitive to different clustering assumptions.\nA relevant policy question is if the effect of the AQAs is heterogeneous across sub-populations. For instance, are the alert’s effect on school absences different across city boroughs, races, or social classes? And if so, what are the likely mechanisms behind this heterogeneity? Figure 4 estimates the difference in the effect of AQAs concerning The Bronx. Results show that AQAs increase school absences by 8.2 additional kids in Manhattan regarding the Bronx. For Staten Island and Brooklyn, there is no evidence of statistical differences, while for Queens, it appears that the effect is slightly smaller.\n\nBoro SpecIncome Quintiles SpecAthma Hospitalizations Spec\n\n\n\n\n\nShow the Code\n# Set the path of the R-studio project\nfile = gsub(\"AQAs_SchoolAbsences_NYC\", \"\", getwd())\n# Load the data\ndata = read_rds(paste0(file, \"/02_GenData/06_RegResults/01_rdd/BoroOls.rds\"))\n# Construct the data for the plot\ndata = mutate(data, est = ifelse(boro != \"The Bronx\",\n              estimate + filter(data, boro == \"The Bronx\")$estimate, estimate)) |> \n  mutate(boro = as.factor(boro)) |> \n  mutate(Num = as.numeric(boro))\n# Add the confidence intervals\ndata = mutate(data, up = est + std.error*1.64, \n              down = est - std.error*1.645, \n              ci = paste0(round(estimate,2), \" (\", round(up, 2),\"-\", round(down, 2), \")\"))\n# Add the limits of the plot\nmax = filter(data, up == max(up))$up; min = 0\nmaxy = length(unique(data$boro)) -0.5\n\n# Plot the estimates\nggplot(filter(data, boro != \"The Bronx\")) +\n  \n  geom_point(aes(y = reorder(boro, est), x = est)) + \n  \n  geom_errorbar(aes(y = reorder(boro, est), \n                 xmin = est - std.error*1.645, \n                 xmax = est + std.error*1.645), alpha = 0.5, width = 0, lwd = 5) +\n  \n  geom_vline(aes(xintercept = filter(data, boro == \"The Bronx\")$estimate), color = \"red\") +\n  \n  geom_text(aes(x = max + max/4, y = str_wrap(boro, width = 17), label = ci), \n            position =position_dodge(width = 0.5)) +  \n  \n  annotate(\"text\", label = \"Estimate (90% CI)\", x = max + max/4, y = maxy , hjust = \"0\") +\n  \n  geom_segment(aes(x = 13, y = maxy, xend = 14.5, yend = maxy),\n                  arrow = arrow(length = unit(0.2, \"cm\"))) +\n  \n   annotate(\"text\", label = str_wrap(\"Effect of AQAs on absences for the Bronx\", 25), x =\n              18.5, y = maxy , hjust = \"0\", size = 2.5) +\n  \n  theme_economist() %+replace% theme(plot.margin = margin(1, 5, 1, .5, unit = \"cm\")) +\n  \n  coord_cartesian(xlim = c(min, max), clip = \"off\") + labs(x = \"\", y = \"\")\n\n\n\n\n\n(a) AQI Robustness\n\n\n\nFigure 4: Effect of the alert on school absences across city boroughs(Log Model)\n\n\n\n\n\n\n\nShow the Code\n# Set the path of the R-studio project\nfile = gsub(\"AQAs_SchoolAbsences_NYC\", \"\", getwd())\n# Load the data\ndata = read_rds(paste0(file, \"/02_GenData/06_RegResults/01_rdd/IncomeOls.rds\"))\n# Construct the data for the plot\ndata = mutate(data, est = ifelse(quintile != \"1\",\n              estimate + filter(data, quintile == \"1\")$estimate, estimate)) |> \n  mutate(quintile = as.factor(quintile)) |> \n  mutate(Num = as.numeric(quintile))\n# Add the confidence intervals\ndata = mutate(data, up = est + std.error*1.64, \n              down = est - std.error*1.645, \n              ci = paste0(round(estimate,2), \" (\", round(up, 2),\"-\", round(down, 2), \")\"))\n# Add the limits of the plot\nmax = filter(data, up == max(up))$up; min = 0\nmaxy = length(unique(data$quintile)) -0.5\n# Plot the estimates\nggplot(filter(data, quintile != \"1\")) +\n  \n   geom_point(aes(y = quintile, x = est)) + \n  \n  geom_errorbar(aes(y = quintile, \n                 xmin = est - std.error*1.645, \n                 xmax = est + std.error*1.645), alpha = 0.5, width = 0, lwd = 5) +\n  \n  geom_vline(aes(xintercept = filter(data, quintile == \"1\")$estimate), color = \"red\") +\n  \n  geom_text(aes(x = max + max/4, y = str_wrap(quintile, width = 17), label = ci), \n            position =position_dodge(width = 0.5)) +  \n  \n  annotate(\"text\", label = \"Estimate (90% CI)\", x = max + max/4, y = maxy , hjust = \"0\") +\n  \n  geom_segment(aes(x = 13, y = maxy, xend = 14.5, yend = maxy),\n                  arrow = arrow(length = unit(0.2, \"cm\"))) +\n  \n   annotate(\"text\", label = str_wrap(\"Effect of AQAs on absences for the lowest quintile\", 25), x =\n              18.5, y = maxy , hjust = \"0\", size = 2.5) +\n  \n  theme_economist() %+replace% theme(plot.margin = margin(1, 5, 1, .5, unit = \"cm\")) +\n  \n  coord_cartesian(xlim = c(min, max), clip = \"off\") + labs(x = \"\", y = \"\")\n\n\n\n\n\n(a) AQI Robustness\n\n\n\nFigure 5: Effect of the alert on school absences across income quintiles (Log Model)\n\n\n\n\n\n\n\nShow the Code\n# Set the path of the R-studio project\nfile = gsub(\"AQAs_SchoolAbsences_NYC\", \"\", getwd())\n# Load the data\ndata = read_rds(paste0(file, \"/02_GenData/06_RegResults/01_rdd/AsthmaHospOls.rds\"))\n# Add the confidence intervals\ndata = mutate(data, ci = paste0(round(estimate,2), \" (\", \n                                round(estimate + std.error*1.645, 2),\"-\",\n                                round(estimate - std.error*1.645, 2), \")\"))\n# Construct the data for the plot\ndata = mutate(data, est = ifelse(quintile != \"1\",\n              estimate + filter(data, quintile == \"1\")$estimate, estimate)) |> \n  mutate(quintile = as.factor(quintile)) |> \n  mutate(Num = as.numeric(quintile))\n# Plot the estimates\nggplot(filter(data, quintile != \"1\")) +\n  geom_point(aes(y = Num, x = est)) + \n  geom_rect(aes(ymin = Num-0.1, ymax = Num + 0.1, xmin = est - std.error*1.645, \n                 xmax = est + std.error*1.645), r = unit(0.5, 'npc'), \n             alpha = 0.5) +\n  geom_vline(aes(xintercept = filter(data, quintile == \"1\")$estimate)) +\n  theme_economist() + labs(y = \"\", x = \"% increase in absences\") +\n  geom_segment(aes(x = filter(data, quintile == \"1\")$estimate, \n                   y = 4.5, yend = 4.5, \n                   xend = filter(data, quintile == \"1\")$estimate + 1.5),\n                  arrow = arrow(length = unit(0.2, \"cm\")), col = \"brown\") +\n   annotate(\"text\",  label = str_wrap(\"Effect of AQAs on \n                                      absences for the lowest \n                                      income quintile\", 25), \n            x = filter(data, quintile == \"1\")$estimate + 3, \n            y = 4.5 , hjust = \"0\", size = 2.5) \n\n\n\n\n\n(a) AQI Robustness\n\n\n\nFigure 6: Effect of the alert on school absences across quintiles of asthma hospitalizations (Log Model)\n\n\n\n\n\nFigure 5 explores if this difference in point estimates between Manhattan, The Bronx, and Queens could relate to income. For this, I divide the sample by income quintile and estimate the effect of the AQAs concerning the lowest quintile. Coefficients imply a nonlinear relationship between the alert and income. Although the estimate is smaller for the third and fourth quintiles, at the fifth quintile, the relationship reverses, suggesting the AQAs increase absences significantly more for wealthy vis-a-vis less wealthy individuals.\n\n\n Instrumental Variables\n\nMain results\n\n\n\n\nShow the Code\n# Set the path of the R-studio project\nfile = gsub(\"AQAs_SchoolAbsences_NYC\", \"\", getwd())\n# Load the results\ntab = read_rds(paste0(file, \"/02_GenData/06_RegResults/02_iv/MainIv.rds\"))\n\n# Include the set of fixed effects and controls\nfe = rbind(`Air Quality index` = c(rep(\"Yes\", 3)), \n           `Weather Controls` = c(rep(\"Yes\", 3)),\n           `Neighborhood FEs` = rep(\"Yes\", 3), \n           `Type of Day FEs` = rep(\"Yes\", 3),\n           `Weekday FEs` = c(rep(\"\", 1), rep(\"Yes\", 2)), \n           `Month FEs`  = c(rep(\"\", 1), rep(\"Yes\", 2)), \n           `Year FEs`  = c(rep(\"\", 1), rep(\"Yes\", 2)), \n           `Year-Month-Neighborhood FEs` = c(rep(\"\", 2), rep(\"Yes\", 1)), \n           `Weekday-Neighborhood FEs` = c(rep(\"\", 2), rep(\"Yes\", 1))) %>%\n  as.data.frame(.) %>% setNames(., names(tab))\n# Add the data with the control variables\ntab = rbind(tab, fe)\n# Create the regression table\nkbl(tab, align = \"c\", digits = 2) %>%\n  kable_classic() %>% kable_styling(bootstrap_option = c(\"hover\")) %>%\n  pack_rows(\"Fitted-Statistics\", 3, 5) %>% pack_rows(\"Controls\", 6, 14) %>% \n  footnote(general = \"Effects of air quality health advisories on school absences in New York City. Point estimates come from an OLS estimator of daily school absences per neighborhood as a fucntion of an indicator variable equal to one in days with air quality health advisories. Interpret point estimates as the effect in absences because of the advisory. Standard errors clustered at the neighborhood-by-week level to account for possible inter-temporal correlations within cities and weeks of the year. Significance Codes: ***: 0.01, **: 0.05, *: 0.1\", general_title = \"Notes:\", footnote_as_chunk = T) %>% scroll_box(height = \"380px\")\n\n\n\n\nTable 3:  Effect of the alert on school absences (IV) \n \n  \n      \n    (1) \n    (2) \n    (3) \n  \n \n\n  \n    Estimate \n    0.21 *** \n    0.12 *** \n    0.13 *** \n  \n  \n     \n    (0.01) \n    (0.01) \n    (0.01) \n  \n  Fitted-Statistics\n\n    N.obs \n    113932 \n    64810 \n    25427 \n  \n  \n    Bandwidth \n    0.80 \n    0.82 \n    0.83 \n  \n  \n    B.C. Bandwidth \n    129266.89 \n    71085.35 \n    56480.48 \n  \n  Controls\n\n    Air Quality index \n    Yes \n    Yes \n    Yes \n  \n  \n    Weather Controls \n    Yes \n    Yes \n    Yes \n  \n  \n    Neighborhood FEs \n    Yes \n    Yes \n    Yes \n  \n  \n    Type of Day FEs \n    Yes \n    Yes \n    Yes \n  \n  \n    Weekday FEs \n     \n    Yes \n    Yes \n  \n  \n    Month FEs \n     \n    Yes \n    Yes \n  \n  \n    Year FEs \n     \n    Yes \n    Yes \n  \n  \n    Year-Month-Neighborhood FEs \n     \n     \n    Yes \n  \n  \n    Weekday-Neighborhood FEs \n     \n     \n    Yes \n  \n\n\nNotes:  Effects of air quality health advisories on school absences in New York City. Point estimates come from an OLS estimator of daily school absences per neighborhood as a fucntion of an indicator variable equal to one in days with air quality health advisories. Interpret point estimates as the effect in absences because of the advisory. Standard errors clustered at the neighborhood-by-week level to account for possible inter-temporal correlations within cities and weeks of the year. Significance Codes: ***: 0.01, **: 0.05, *: 0.1\n\n\n\n\n\n\n\n\n\n\n Regression Discontinuity\nEquation 2 RD specifies the functional form of the preferred RD model.\n\\[\nAbsent_{nt}  =  \\beta D_{t}(AQI_{t} \\geq 101) + \\tilde{\\mu}^- f(AQI_t)+ \\tilde{\\mu}^+ f(AQI{_t}\\times D_{nt}) +  W'_{nt} \\Delta + \\Omega_{t} + \\epsilon_{t}\n\\tag{2}\\]\nIn it, \\(Absent_{nt}\\) is the log of absent students at neighborhood \\(n\\) on day \\(t\\), \\(AQI_{t}\\) is the AQI forecast at time \\(t\\), and \\(D_{t}\\) the treatment indicator equal to one when the AQI is higher than one hundred units. \\(f(AQI_{t}\\times D_{nt})\\) is a linear fit before (\\(\\tilde{\\mu}_{-}\\)) and after (\\(\\tilde{\\mu}_{+}\\)) the discontinuity; I use a linear fit because it performs better and has more accurate boundary properties than higher-order polynomials @Gelman2019. \\(W'_{nt}\\) and \\(\\Omega_{t}\\) are matrices of weather controls and time fixed-effects. The estimate of interest, \\(\\beta\\), captures the LATE of the alert on school absences around the emission threshold. The bandwidth around the discontinuity comes from the data-driven plug-in rules based on mean squared error expansions proposed by @Calonico2015optimal.\nTable 4 includes the results of the regression discontinuity design (in logs) across four different specifications. (1) estimates the effect of AQAs on school absences free of any control variables. (2) adds to the raw specification year, month, day of the week, and school period fixed effects. (3) further includes linear controls of temperature, rain, relative humidity, wind speed, and atmospheric pressure. (4) adds linear controls for the measured value of the AQI at time \\(t\\). To simplify the interpretation of coefficients, I transform the value of \\(\\beta\\) to \\([exp(\\beta) -1]\\) and interpret it as the percentage increase in school absences because of the air quality health advisory.\nResults show an increase from between 7.72% and 17.08% in school absences because the air quality health advisory. The change in point estimates occurs because the inclusion of different covariates changes the optimal bandwidth of the RDD and thus the interpretation of point estimates. For instance, while the interpretation in the first column (raw RD) is the effect of the alerts within ten AQIs from the alert, the interpretation in the last column (full specification) is the effect of the alerts within sixteen AQIs from the alert conditional on seasonality, weather, and air pollution.\n\nLog results\n\n\n\n\nShow the Code\n# Load the results\n# Set the path of the R-studio project\nfile = gsub(\"AQAs_SchoolAbsences_NYC\", \"\", getwd())\ntab = read_rds(paste0(file, \"/02_GenData/06_RegResults/01_rdd/NtaBase.rds\"))\n# Create the regression table\nkbl(tab, align = \"c\") %>%\n  kable_classic() %>% kable_styling(bootstrap_option = c(\"hover\")) %>%\n  pack_rows(\"Fitted-Statistics\", 3, 5) %>%\n  footnote(general = \"Effects of air quality health advisories on school absences in New York City. Point estimates come from a regression discontinuity design. The score is equal to the distance between the forecasted air quality index and 101 units (the threshold for the emission of health advisories). The dependent variable is the log value of school absences at the neighborhood level. Interpret point estimates as the percentage increase in absences because of the advisory, e.g., an coefficient of two is equivalent to a two percent increase in absences. Cluster robsut standard errors in parenthesis. Significance Codes: ***: 0.01, **: 0.05, *: 0.1\", general_title = \"Notes:\", footnote_as_chunk = T)\n## Levels results\n\n\n\nTable 4: Effect of the alert on school absences\n\n\n\n\n\n(a) RDD in Logs \n \n  \n      \n    (1) \n    (2) \n    (3) \n    (4) \n  \n \n\n  \n    Estimate \n    9.29 ** \n    7.72 ** \n    14.37 *** \n    17.08 *** \n  \n  \n     \n    (4.60) \n    (3.85) \n    (3.50) \n    (3.49) \n  \n  Fitted-Statistics\n\n    N.obs \n    8416 \n    10492 \n    10868 \n    10868 \n  \n  \n    Bandwidth \n    10 \n    13 \n    16 \n    16 \n  \n  \n    B.C. Bandwidth \n    16 \n    20 \n    23 \n    23 \n  \n\n\nNotes:  Effects of air quality health advisories on school absences in New York City. Point estimates come from a regression discontinuity design. The score is equal to the distance between the forecasted air quality index and 101 units (the threshold for the emission of health advisories). The dependent variable is the log value of school absences at the neighborhood level. Interpret point estimates as the percentage increase in absences because of the advisory, e.g., an coefficient of two is equivalent to a two percent increase in absences. Cluster robsut standard errors in parenthesis. Significance Codes: ***: 0.01, **: 0.05, *: 0.1\n\n\n\n?(caption)\n\n\n\n\n\n\nShow the Code\n# Load the results\n# Set the path of the R-studio project\nfile = gsub(\"AQAs_SchoolAbsences_NYC\", \"\", getwd())\ntab = read_rds(paste0(file, \"/02_GenData/06_RegResults/01_rdd/NtaLevelsBase.rds\"))\n# Create the regression table\nkbl(tab, align = \"c\") %>%\n  kable_classic() %>% kable_styling(bootstrap_option = c(\"hover\")) %>%\n  pack_rows(\"Fitted-Statistics\", 3, 5) %>%\n  footnote(general = \"Effects of air quality health advisories on school absences in New York City. Point estimates come from a regression discontinuity design. The score is equal to the distance between the forecasted air quality index and 101 units (the threshold for the emission of health advisories). The dependent variable is the log value of school absences at the neighborhood level. Interpret point estimates as the percentage increase in absences because of the advisory, e.g., an coefficient of two is equivalent to a two percent increase in absences. Cluster robsut standard errors in parenthesis. Significance Codes: ***: 0.01, **: 0.05, *: 0.1\", general_title = \"Notes:\", footnote_as_chunk = T)\n\n\n\nTable 5: Effect of the alert on school absences (In levels)\n\n\n\n\n\n(a) RDD in Logs \n \n  \n      \n    (1) \n    (2) \n    (3) \n    (4) \n  \n \n\n  \n    Estimate \n    55.45 *** \n    85.17 *** \n    88.95 *** \n    104.94 *** \n  \n  \n     \n    (18.74) \n    (16.95) \n    (15.55) \n    (15.32) \n  \n  Fitted-Statistics\n\n    N.obs \n    8416 \n    9550 \n    10868 \n    10868 \n  \n  \n    Bandwidth \n    10 \n    11 \n    14 \n    14 \n  \n  \n    B.C. Bandwidth \n    15 \n    18 \n    21 \n    21 \n  \n\n\nNotes:  Effects of air quality health advisories on school absences in New York City. Point estimates come from a regression discontinuity design. The score is equal to the distance between the forecasted air quality index and 101 units (the threshold for the emission of health advisories). The dependent variable is the log value of school absences at the neighborhood level. Interpret point estimates as the percentage increase in absences because of the advisory, e.g., an coefficient of two is equivalent to a two percent increase in absences. Cluster robsut standard errors in parenthesis. Significance Codes: ***: 0.01, **: 0.05, *: 0.1\n\n\n\n?(caption)"
  },
  {
    "objectID": "02_data.html#iconify-bi-graph-up-data-on-the-forecasts-of-the-air-quality-index",
    "href": "02_data.html#iconify-bi-graph-up-data-on-the-forecasts-of-the-air-quality-index",
    "title": " Data Sets",
    "section": " Data on the forecasts of the air quality index",
    "text": "Data on the forecasts of the air quality index\n\n\n\nThe data on the air quality index (AQI) forecasts come from the New York State Department of Environmental Conservation (NYSDEC).1 Table 5 contains a sample of the raw data. It includes the issue date, forecast date, emission lag, and forecasted value of ozone (o3), fine particulate matter (pm25), and the air quality index (AQI). The issue date is the date the NYSDEC estimated the forecast, and the emission lag is the difference between the issue and forecast dates.\nIt is relevant to distinguish between the issue and forecast dates. The issue date is the date that the NYSDEC performs the forecast. the forecast date is the date of the forecast. For instance, the NYSDEC can forecast an AQI value of 105 for May 1st on April 29th. In this example, April 29th is the issue date, and May 1st the forecast date. It is worth noting that forecasts can have different issue dates. For instance, there can be three forecasts for January 1st.\n\nAQI DataForecast TypeIndicators on the type of alert\n\n\n\n\nShow the Code\n# Show the data set\nkbl(head(select(Full, IssueDate:aqi), 2)) %>% \n  kable_classic(full_width = T, html_font = \"Cambria\") %>% \n  kable_styling(bootstrap_option = c(\"hover\")) |> \n  column_spec(c(1), italic = T, color = \"DarkBlue\") %>% \n   footnote(general = \"IssueDate is the date of issue of the forecast Forecast date is the date t.of the alert. ForecastPeriod is the difference between the issue and forecast dates. o3 is the forecasted AQI value of atmospheric ozone. pm25 is the forecasted AQI value of fine particulate matter. aqi is the forecasted AQI value to emit the alert\", general_title = \"Notes:\", footnote_as_chunk = T)\n\n\n\n\nTable 5:  Raw data on the Air Quality Index \n \n  \n    IssueDate \n    ForecastDate \n    EmissionLag \n    o3 \n    pm25 \n    aqi \n  \n \n\n  \n    2007-12-31 \n    2008-01-01 \n    -1 \n    NA \n    65 \n    65 \n  \n  \n    2007-12-31 \n    2008-01-02 \n    -2 \n    NA \n    40 \n    40 \n  \n\n\nNotes:  IssueDate is the date of issue of the forecast Forecast date is the date t.of the alert. ForecastPeriod is the difference between the issue and forecast dates. o3 is the forecasted AQI value of atmospheric ozone. pm25 is the forecasted AQI value of fine particulate matter. aqi is the forecasted AQI value to emit the alert\n\n\n\n\n\n\n\n\n\nShow the Code\n# Show the data set\nkbl(head(select(Full, IssueDate:ForecastDate, aqi, SingleForecast, ForecastType, SameDay:FourDays), 2)) %>% \n  kable_classic(full_width = T, html_font = \"Cambria\") %>% \n  kable_styling(bootstrap_option = c(\"hover\")) |> \n  column_spec(c(1), italic = T, color = \"DarkBlue\") %>% \n   footnote(general = \"IssueDate is the date of issue of the forecast ForecastDate is the date of the alert. ForecastPeriod is the difference between the issue and forecast dates. o3 is the forecasted AQI value of atmospheric ozone. pm25 is the forecasted AQI value of fine particulate matter. aqi is the forecasted AQI value to emit the alert\", general_title = \"Notes:\", footnote_as_chunk = T)\n\n\n\n\nTable 6:  Raw data on the Air Quality Index (Forecast Indicators) \n \n  \n    IssueDate \n    ForecastDate \n    aqi \n    SingleForecast \n    ForecastType \n    SameDay \n    NextDay \n    TwoDays \n    ThreeDays \n    FourDays \n  \n \n\n  \n    2007-12-31 \n    2008-01-01 \n    65 \n    1 \n    Forecast (-1) \n    0 \n    1 \n    0 \n    0 \n    0 \n  \n  \n    2007-12-31 \n    2008-01-02 \n    40 \n    0 \n    Forecast (0,-2) \n    0 \n    0 \n    1 \n    0 \n    0 \n  \n\n\nNotes:  IssueDate is the date of issue of the forecast ForecastDate is the date of the alert. ForecastPeriod is the difference between the issue and forecast dates. o3 is the forecasted AQI value of atmospheric ozone. pm25 is the forecasted AQI value of fine particulate matter. aqi is the forecasted AQI value to emit the alert\n\n\n\n\n\n\n\n\n\nShow the Code\n# Show the data set\nkbl(head(select(Full, IssueDate:ForecastDate, aqi, alert, FullAlert, SingleAlert:TwoDaysSingleAlert), 2)) %>% \n  kable_classic(full_width = T, html_font = \"Cambria\") %>% \n  kable_styling(bootstrap_option = c(\"hover\")) |> \n  column_spec(c(1), italic = T, color = \"DarkBlue\") %>% \n   footnote(general = \"IssueDate is the date of issue of the forecas Forecast date is the date t.of the alert. ForecastPeriod is the difference between the issue and forecast dates. o3 is the forecasted AQI value of atmospheric ozone. pm25 is the forecasted AQI value of fine particulate matter. aqi is the forecasted AQI value to emit the alert\", general_title = \"Notes:\", footnote_as_chunk = T)\n\n\n\n\nTable 7:  Raw data on the Air Quality Index (Alert Indicators) \n \n  \n    IssueDate \n    ForecastDate \n    aqi \n    alert \n    FullAlert \n    SingleAlert \n    OnlySameDayAlert \n    NextAndSameDayAlert \n    TwoDaysSingleAlert \n  \n \n\n  \n    2007-12-31 \n    2008-01-01 \n    65 \n    0 \n    0 \n    0 \n    0 \n    0 \n    0 \n  \n  \n    2007-12-31 \n    2008-01-02 \n    40 \n    0 \n    0 \n    0 \n    0 \n    0 \n    0 \n  \n\n\nNotes:  IssueDate is the date of issue of the forecas Forecast date is the date t.of the alert. ForecastPeriod is the difference between the issue and forecast dates. o3 is the forecasted AQI value of atmospheric ozone. pm25 is the forecasted AQI value of fine particulate matter. aqi is the forecasted AQI value to emit the alert\n\n\n\n\n\n\n\n\nTable 6 contains a series of dummy and categorical variables to understand the nature of each forecast. The column SingleForecast indicates situations when only one issued forecast for that particular date exists. For example, if there were two forecasts for January 1st, one on December 30th and the other on the 31st, the value of this column would be zero. The ForecastType is a categorical variable that indicates the structure of issued forecasts for that particular date, e.g., Forecast (0, -2) means that there was a forecast issued at \\(t = 0\\) and \\(t = -2\\). The SameDay variable is equal to one if the issue and forecast dates occur on the same day. The same logic holds for NextDay, TwoDays, ThreeDays, and FourDays. For instance, a value of 1 in the FourDays column occurs when the issue date is four days before the forecast.\nTable 7 includes a set of variables on the emission of an air quality alert (AQA). The alert column is an indicator variable equal to one if the AQI forecast exceeds one hundred units. The FullAlert column is one when all forecasts on that date predict an alert. SingleAlert is one if only one forecast is higher than one hundred units. OnlySameDayAlert is one when there is only one same-day forecast. And NextAndSameDayAlert is equal to one if there were two issues for the same forecast – one on the date of the forecast and the other one day before.\nFigure 1 and Figure 2 show the share of observations with specific combinations of issued forecasts. For the full sample 93% of forecasts were issued at \\(t \\in (0, -1)\\), \\(\\$t \\in (0, -3)\\), \\(t \\in (-1)\\), and \\(t \\in (-2)\\). For the sub-sample of days with an air quality alert, 89% of the forecast are issued at \\(t \\in (0, -1)\\), $t (0, -1, -2, -3) $, $t (-1) $, and \\(t \\in (0, -3)\\).\n\nFull SampleAlerts\n\n\n\n\nShow the Code\n# Create the plot data\nplot = Full %>% group_by(ForecastType) %>% summarise(count = n()) %>% ungroup() %>% \n  mutate(share = (count/sum(count))*100)\n# Ggplot\nggplot(plot) + geom_bar(aes(y = reorder(ForecastType, -share), x = share), stat = \"identity\", fill = \"orange\") + theme_economist()  %+replace% \n  theme(legend.title = element_blank()) + \n  labs(x = \"Percentage share of observations\", y = \"\")\n\n\n\n\n\nFigure 1: Forecast type across the full sample of forecasted AQIs\n\n\n\n\n\n\n\n\nShow the Code\n# Create the plot data\nplot = Full %>% filter(alert == 1) %>% group_by(ForecastType) %>% \n  summarise(count = n()) %>% ungroup() %>% \n  mutate(share = (count/sum(count))*100)\n# Ggplot\nggplot(plot) + geom_bar(aes(y = reorder(ForecastType, -share), x = share, fill = share), \n                        stat = \"identity\") + theme_economist()  %+replace% \n  theme(legend.title = element_blank()) + \n  labs(x = \"Percentage share of observations\", y = \"\") +\n  scale_fill_viridis()\n\n\n\n\n\nFigure 2: Forecast type for the dates with an AQA\n\n\n\n\n\n\n\nThis combination of different forecasts raises one clear issue; if we want to assign one single value per date, which one should we choose? For this, use the following algorithm:\n\n\nFor the days without an alert, we select the AQI forecast closest to \\(t\\). For instance, if the AQI value for January 1st has one forecast on December 31st and another on December 30th, we select the 31st as the value of the forecasted AQI.\nFor days when there is an alert, and all forecasts imply an AQI value higher than 100 units, we choose the forecast closest to \\(t\\)\nWhen there is a discrepancy between two forecasts regarding the existence of an AQA, we choose the highest. For instance, the forecast at \\(t = 0\\) implies an AQI value of 93 and the one at \\(t = 1\\) a value of 101. In this situation, we will assign the value of 101.\n\n\nI use this algorithm to reach a final data set of forested AQI values. Table 8 shows the first rows of this final data file. In it date is the date of the forecast. ForecastType is the type of forecast as previously defined. pm25, o3, and aqi are the forecasted values of fine particulate matter, ozone, and the air quality index. *** alert *** is an indicator variable equal to one when the AQI is larger than 100. Moreover, I include a set of indicator variables on the structure of the forecast, i.e., was it a single alert? Did all the forecasts point to the emission of an alert? Etc.\n\n\nShow the Code\n# Show the data set\nkbl(head(filter(AqiForecast, alert == 1), 5)) %>% \n  kable_classic(full_width = T, html_font = \"Cambria\") %>% \n  kable_styling(bootstrap_option = c(\"hover\")) |> \n  column_spec(c(1), italic = T, color = \"DarkBlue\") %>% \n   footnote(general = \"IssueDate is the date of issue of the forecast. ForecastDate is the date of the alert. ForecastPeriod is the difference between the issue and forecast dates. o3 is the forecasted AQI value of atmospheric ozone. pm25 is the forecasted AQI value of fine particulate matter. aqi is the forecasted AQI value to emit the alert\", general_title = \"Notes:\", footnote_as_chunk = T)\n\n\n\n\nTable 8:  Final data set on the forecast of the AQI \n \n  \n    date \n    ForecastType \n    pm25 \n    o3 \n    aqi \n    alert \n    SingleAlert \n    FullAlert \n    OnlySameDayAlert \n    NextAndSameDayAlert \n    TwoDaysSingleAlert \n  \n \n\n  \n    2008-06-07 \n    Forecast (-1) \n    92 \n    114 \n    114 \n    1 \n    1 \n    1 \n    0 \n    0 \n    0 \n  \n  \n    2008-06-08 \n    Forecast (-2) \n    80 \n    101 \n    101 \n    1 \n    1 \n    1 \n    0 \n    0 \n    1 \n  \n  \n    2008-06-09 \n    Forecast (0,-3) \n    NA \n    105 \n    105 \n    1 \n    0 \n    1 \n    0 \n    0 \n    0 \n  \n  \n    2008-06-10 \n    Forecast (0,-1) \n    105 \n    110 \n    110 \n    1 \n    0 \n    1 \n    0 \n    1 \n    0 \n  \n  \n    2008-06-14 \n    Forecast (0,-1) \n    NA \n    105 \n    105 \n    1 \n    0 \n    0 \n    1 \n    0 \n    0 \n  \n\n\nNotes:  IssueDate is the date of issue of the forecast. ForecastDate is the date of the alert. ForecastPeriod is the difference between the issue and forecast dates. o3 is the forecasted AQI value of atmospheric ozone. pm25 is the forecasted AQI value of fine particulate matter. aqi is the forecasted AQI value to emit the alert\n\n\n\n\n\n```"
  },
  {
    "objectID": "02_data.html#iconify-emojione-monotone-school-school-absences",
    "href": "02_data.html#iconify-emojione-monotone-school-school-absences",
    "title": " Data Sets",
    "section": " School Absences",
    "text": "School Absences\n\n\n\nI obtain data on school absences from the NYC open data-portal website. Table 1 shows the structure of the data. There are 3,339,158 observations in the panel with 1,854 unique school identifiers. The data set spans between Jan 2006 and Dec 2018. The data contains the school’s id, the observation date, and the total number of enrolled, present, absent, and released students. It also includes a categorical variable indicating if an abnormal event affected school absences on that date, e.g., extreme weather events like blizzards or hurricanes.\nI further obtain data on the location of each school. The location data file (Table 2) contains the school’s type, id, longitude, latitude, tract, neighbourhood, and borough. There are eight school types: Elementary, K-8, Secondary School, Junior High, High school, K-12 all grades, Early Childhood, Ungraded\n\nAbsencesLocationDemographicsProficiency\n\n\n\n\n\n\nTable 1:  Structure of the raw file on school absences in NYC \n \n  \n    id \n    date \n    SchoolYear \n    enrolled \n    present \n    absent \n    released \n    DayType \n  \n \n\n  \n    01M015 \n    2006-09-05 \n    2006-2007 \n    252 \n    226 \n    26 \n    0 \n    NormalDay \n  \n  \n    01M015 \n    2006-09-06 \n    2006-2007 \n    248 \n    227 \n    21 \n    0 \n    NormalDay \n  \n  \n    01M015 \n    2006-09-07 \n    2006-2007 \n    245 \n    228 \n    17 \n    0 \n    NormalDay \n  \n\n\n\n\n\n\n\n\n\n\n\n\nTable 2:  Data on the spatial location of schools in NYC \n \n  \n    id \n    lon \n    lat \n    tract \n    nta \n    ntacode \n    boro \n    SchoolType \n  \n \n\n  \n    01M015 \n    -73.97875 \n    40.72207 \n    002601 \n    Lower East Side \n    MN28 \n    Manhattan \n    Elementary \n  \n  \n    01M019 \n    -73.98450 \n    40.73001 \n    004000 \n    East Village \n    MN22 \n    Manhattan \n    Elementary \n  \n  \n    01M020 \n    -73.98631 \n    40.72131 \n    003001 \n    Chinatown \n    MN27 \n    Manhattan \n    Elementary \n  \n  \n    01M034 \n    -73.97506 \n    40.72601 \n    002800 \n    Lower East Side \n    MN28 \n    Manhattan \n    K-8 \n  \n  \n    01M063 \n    -73.98621 \n    40.72444 \n    003200 \n    East Village \n    MN22 \n    Manhattan \n    Elementary \n  \n\n\nNotes:   lon = Longitude, lat = Latitude, tract = US Census Tract, nta = neighborhood, boro = borough, SchholType = type of school\n\n\n\n\n\n\n\n\n\nShow the Code\n# Show the data set\nkbl(head(dem, 5)) %>% \n  kable_classic(full_width = T, html_font = \"Cambria\") %>% \n  kable_styling(bootstrap_option = c(\"hover\")) |> \n  column_spec(c(1), italic = T, color = \"DarkBlue\") %>% \n   footnote(general = \"id refers to School ID and students to the count of enrolled students in that school and year combinations. Each of the other columns contains the percentage of students within each category, e.g., female refers to the share of female students in the school. The poverty column refers to the share of students qualifying for free or reduced-price lunch or eligible for Human Resources Administration benefits. The eni column refers to the share of students facing economic hardship.\", general_title = \"Notes:\", footnote_as_chunk = T)\n\n\n\n\nTable 3:  Demographic data for NYC schools \n \n  \n    id \n    year \n    students \n    female \n    male \n    asian \n    hispanic \n    black \n    white \n    other \n    disabilities \n    EnglishLearners \n    poverty \n    eni \n  \n \n\n  \n    01M015 \n    2011 \n    189 \n    48.7 \n    51.3 \n    6.3 \n    57.7 \n    33.3 \n    2.1 \n    0.5 \n    27.50 \n    11.6 \n    100.00 \n    NaN \n  \n  \n    01M015 \n    2012 \n    177 \n    51.4 \n    48.6 \n    8.5 \n    52.5 \n    35.6 \n    1.7 \n    1.7 \n    31.10 \n    11.9 \n    100.00 \n    NaN \n  \n  \n    01M015 \n    2013 \n    190 \n    48.9 \n    51.1 \n    4.7 \n    54.7 \n    37.9 \n    1.6 \n    1.1 \n    34.20 \n    10.0 \n    95.00 \n    NaN \n  \n  \n    01M015 \n    2014 \n    183 \n    45.9 \n    54.1 \n    4.4 \n    58.5 \n    35.5 \n    1.1 \n    0.5 \n    35.00 \n    9.3 \n    96.15 \n    93.5 \n  \n  \n    01M015 \n    2015 \n    176 \n    47.2 \n    52.8 \n    5.1 \n    59.7 \n    32.4 \n    1.1 \n    1.7 \n    33.25 \n    9.1 \n    92.35 \n    89.6 \n  \n\n\nNotes:  id refers to School ID and students to the count of enrolled students in that school and year combinations. Each of the other columns contains the percentage of students within each category, e.g., female refers to the share of female students in the school. The poverty column refers to the share of students qualifying for free or reduced-price lunch or eligible for Human Resources Administration benefits. The eni column refers to the share of students facing economic hardship.\n\n\n\n\n\n\n\n\n\nShow the Code\n# Show the data set\nkbl(head(prof, 5)) %>% \n  kable_classic(full_width = T, html_font = \"Cambria\") %>% \n  kable_styling(bootstrap_option = c(\"hover\")) |> \n  column_spec(c(1), italic = T, color = \"DarkBlue\") %>% \n   footnote(general = \"id refers to School ID and. Each of the other columns contains the percentage of students within each category; e.g., ela refers to the share of students passing the English Learning Art test. The math column refers to the share of students passing the Mathematics test. And the Graduates4th and 6th columns refer to the share of graduates in each year respectively.\", general_title = \"Notes:\",  footnote_as_chunk = T)\n\n\n\n\nTable 4:  Proficiency data for NYC schools \n \n  \n    id \n    year \n    ela \n    math \n    Graduates4th \n    Graduates6th \n  \n \n\n  \n    17K002 \n    2014 \n    23.1 \n    23.1 \n    NA \n    NA \n  \n  \n    84K704 \n    2014 \n    16.7 \n    16.7 \n    NA \n    NA \n  \n  \n    75K141 \n    2014 \n    NA \n    NA \n    NA \n    NA \n  \n  \n    16K005 \n    2014 \n    NA \n    NA \n    NA \n    NA \n  \n  \n    75K369 \n    2014 \n    NA \n    NA \n    NA \n    NA \n  \n\n\nNotes:  id refers to School ID and. Each of the other columns contains the percentage of students within each category; e.g., ela refers to the share of students passing the English Learning Art test. The math column refers to the share of students passing the Mathematics test. And the Graduates4th and 6th columns refer to the share of graduates in each year respectively.\n\n\n\n\n\n\n\n\nTable 3 presents the socio-demographic data of each school obtained from the New York State Department of Education (NYSDE). The table contains the school’s id, year of observation, count of enrolled students, and the share of female, male, Asian, Hispanic, Black, and White students. Other variables include the share of students with disabilities, learning English, qualifying for free or reduced price lunch, being eligible for human resources administration benefits (poverty), or facing economic hardship (eni).\nFinally, I obtain data on students’ mathematical and writing proficiency. Table Table 4 contains the school id, the year of observation (only available from 2014), the share of students passing the English Language Art (ELA) and Mathematics (math) tests, and the percentage of fourth-year and sixth-year graduates."
  },
  {
    "objectID": "02_data.html#iconify-bi-graph-up-forecasts-of-the-air-quality-index",
    "href": "02_data.html#iconify-bi-graph-up-forecasts-of-the-air-quality-index",
    "title": " Data Sets",
    "section": " Forecasts of the air quality index",
    "text": "Forecasts of the air quality index\n\n\n\nThe data on the air quality index (AQI) forecasts come from the New York State Department of Environmental Conservation (NYSDEC).1 Table 5 contains a sample of the raw data. It includes the issue date, forecast date, emission lag, and forecasted value of ozone (o3), fine particulate matter (pm25), and the air quality index (AQI). The issue date is the date the NYSDEC estimated the forecast, and the emission lag is the difference between the issue and forecast dates.\nIt is relevant to distinguish between the issue and forecast dates. The issue date is the date that the NYSDEC performs the forecast. the forecast date is the date of the forecast. For instance, the NYSDEC can forecast an AQI value of 105 for May 1st on April 29th. In this example, April 29th is the issue date, and May 1st the forecast date. It is worth noting that forecasts can have different issue dates. For instance, there can be three forecasts for January 1st.\n\nAQI DataForecast TypeIndicators on the type of alert\n\n\n\n\nShow the Code\n# Show the data set\nkbl(head(select(Full, IssueDate:aqi), 2)) %>% \n  kable_classic(full_width = T, html_font = \"Cambria\") %>% \n  kable_styling(bootstrap_option = c(\"hover\")) |> \n  column_spec(c(1), italic = T, color = \"DarkBlue\") %>% \n   footnote(general = \"IssueDate is the date of issue of the forecast Forecast date is the date t.of the alert. ForecastPeriod is the difference between the issue and forecast dates. o3 is the forecasted AQI value of atmospheric ozone. pm25 is the forecasted AQI value of fine particulate matter. aqi is the forecasted AQI value to emit the alert\", general_title = \"Notes:\", footnote_as_chunk = T)\n\n\n\n\nTable 5:  Raw data on the Air Quality Index \n \n  \n    IssueDate \n    ForecastDate \n    EmissionLag \n    o3 \n    pm25 \n    aqi \n  \n \n\n  \n    2007-12-31 \n    2008-01-01 \n    -1 \n    NA \n    65 \n    65 \n  \n  \n    2007-12-31 \n    2008-01-02 \n    -2 \n    NA \n    40 \n    40 \n  \n\n\nNotes:  IssueDate is the date of issue of the forecast Forecast date is the date t.of the alert. ForecastPeriod is the difference between the issue and forecast dates. o3 is the forecasted AQI value of atmospheric ozone. pm25 is the forecasted AQI value of fine particulate matter. aqi is the forecasted AQI value to emit the alert\n\n\n\n\n\n\n\n\n\nShow the Code\n# Show the data set\nkbl(head(select(Full, IssueDate:ForecastDate, aqi, SingleForecast, ForecastType, SameDay:FourDays), 2)) %>% \n  kable_classic(full_width = T, html_font = \"Cambria\") %>% \n  kable_styling(bootstrap_option = c(\"hover\")) |> \n  column_spec(c(1), italic = T, color = \"DarkBlue\") %>% \n   footnote(general = \"IssueDate is the date of issue of the forecast ForecastDate is the date of the alert. ForecastPeriod is the difference between the issue and forecast dates. o3 is the forecasted AQI value of atmospheric ozone. pm25 is the forecasted AQI value of fine particulate matter. aqi is the forecasted AQI value to emit the alert\", general_title = \"Notes:\", footnote_as_chunk = T)\n\n\n\n\nTable 6:  Raw data on the Air Quality Index (Forecast Indicators) \n \n  \n    IssueDate \n    ForecastDate \n    aqi \n    SingleForecast \n    ForecastType \n    SameDay \n    NextDay \n    TwoDays \n    ThreeDays \n    FourDays \n  \n \n\n  \n    2007-12-31 \n    2008-01-01 \n    65 \n    1 \n    Forecast (-1) \n    0 \n    1 \n    0 \n    0 \n    0 \n  \n  \n    2007-12-31 \n    2008-01-02 \n    40 \n    0 \n    Forecast (0,-2) \n    0 \n    0 \n    1 \n    0 \n    0 \n  \n\n\nNotes:  IssueDate is the date of issue of the forecast ForecastDate is the date of the alert. ForecastPeriod is the difference between the issue and forecast dates. o3 is the forecasted AQI value of atmospheric ozone. pm25 is the forecasted AQI value of fine particulate matter. aqi is the forecasted AQI value to emit the alert\n\n\n\n\n\n\n\n\n\nShow the Code\n# Show the data set\nkbl(head(select(Full, IssueDate:ForecastDate, aqi, alert, FullAlert, SingleAlert:TwoDaysSingleAlert), 2)) %>% \n  kable_classic(full_width = T, html_font = \"Cambria\") %>% \n  kable_styling(bootstrap_option = c(\"hover\")) |> \n  column_spec(c(1), italic = T, color = \"DarkBlue\") %>% \n   footnote(general = \"IssueDate is the date of issue of the forecas Forecast date is the date t.of the alert. ForecastPeriod is the difference between the issue and forecast dates. o3 is the forecasted AQI value of atmospheric ozone. pm25 is the forecasted AQI value of fine particulate matter. aqi is the forecasted AQI value to emit the alert\", general_title = \"Notes:\", footnote_as_chunk = T)\n\n\n\n\nTable 7:  Raw data on the Air Quality Index (Alert Indicators) \n \n  \n    IssueDate \n    ForecastDate \n    aqi \n    alert \n    FullAlert \n    SingleAlert \n    OnlySameDayAlert \n    NextAndSameDayAlert \n    TwoDaysSingleAlert \n  \n \n\n  \n    2007-12-31 \n    2008-01-01 \n    65 \n    0 \n    0 \n    0 \n    0 \n    0 \n    0 \n  \n  \n    2007-12-31 \n    2008-01-02 \n    40 \n    0 \n    0 \n    0 \n    0 \n    0 \n    0 \n  \n\n\nNotes:  IssueDate is the date of issue of the forecas Forecast date is the date t.of the alert. ForecastPeriod is the difference between the issue and forecast dates. o3 is the forecasted AQI value of atmospheric ozone. pm25 is the forecasted AQI value of fine particulate matter. aqi is the forecasted AQI value to emit the alert\n\n\n\n\n\n\n\n\nTable 6 contains a series of dummy and categorical variables to understand the nature of each forecast. The column SingleForecast indicates situations when only one issued forecast for that particular date exists. For example, if there were two forecasts for January 1st, one on December 30th and the other on the 31st, the value of this column would be zero. The ForecastType is a categorical variable that indicates the structure of issued forecasts for that particular date, e.g., Forecast (0, -2) means that there was a forecast issued at \\(t = 0\\) and \\(t = -2\\). The SameDay variable is equal to one if the issue and forecast dates occur on the same day. The same logic holds for NextDay, TwoDays, ThreeDays, and FourDays. For instance, a value of 1 in the FourDays column occurs when the issue date is four days before the forecast.\nTable 7 includes a set of variables on the emission of an air quality alert (AQA). The alert column is an indicator variable equal to one if the AQI forecast exceeds one hundred units. The FullAlert column is one when all forecasts on that date predict an alert. SingleAlert is one if only one forecast is higher than one hundred units. OnlySameDayAlert is one when there is only one same-day forecast. And NextAndSameDayAlert is equal to one if there were two issues for the same forecast – one on the date of the forecast and the other one day before.\nFigure 1 and Figure 2 show the share of observations with specific combinations of issued forecasts. For the full sample 93% of forecasts were issued at \\(t \\in (0, -1)\\), \\(\\$t \\in (0, -3)\\), \\(t \\in (-1)\\), and \\(t \\in (-2)\\). For the sub-sample of days with an air quality alert, 89% of the forecast are issued at \\(t \\in (0, -1)\\), $t (0, -1, -2, -3) $, $t (-1) $, and \\(t \\in (0, -3)\\).\n\nFull SampleAlerts\n\n\n\n\nShow the Code\n# Create the plot data\nplot = Full %>% group_by(ForecastType) %>% summarise(count = n()) %>% ungroup() %>% \n  mutate(share = (count/sum(count))*100)\n# Ggplot\nggplot(plot) + geom_bar(aes(y = reorder(ForecastType, -share), x = share), stat = \"identity\", fill = \"orange\") + theme_economist()  %+replace% \n  theme(legend.title = element_blank()) + \n  labs(x = \"Percentage share of observations\", y = \"\")\n\n\n\n\n\nFigure 1: Forecast type across the full sample of forecasted AQIs\n\n\n\n\n\n\n\n\nShow the Code\n# Create the plot data\nplot = Full %>% filter(alert == 1) %>% group_by(ForecastType) %>% \n  summarise(count = n()) %>% ungroup() %>% \n  mutate(share = (count/sum(count))*100)\n# Ggplot\nggplot(plot) + geom_bar(aes(y = reorder(ForecastType, -share), x = share, fill = share), \n                        stat = \"identity\") + theme_economist()  %+replace% \n  theme(legend.title = element_blank()) + \n  labs(x = \"Percentage share of observations\", y = \"\") +\n  scale_fill_viridis()\n\n\n\n\n\nFigure 2: Forecast type for the dates with an AQA\n\n\n\n\n\n\n\nThis combination of different forecasts raises one clear issue; if we want to assign one single value per date, which one should we choose? For this, use the following algorithm:\n\n\nFor the days without an alert, we select the AQI forecast closest to \\(t\\). For instance, if the AQI value for January 1st has one forecast on December 31st and another on December 30th, we select the 31st as the value of the forecasted AQI.\nFor days when there is an alert, and all forecasts imply an AQI value higher than 100 units, we choose the forecast closest to \\(t\\)\nWhen there is a discrepancy between two forecasts regarding the existence of an AQA, we choose the highest. For instance, the forecast at \\(t = 0\\) implies an AQI value of 93 and the one at \\(t = 1\\) a value of 101. In this situation, we will assign the value of 101.\n\n\nI use this algorithm to reach a final data set of forested AQI values. Table 8 shows the first rows of this final data file. In it date is the date of the forecast. ForecastType is the type of forecast as previously defined. pm25, o3, and aqi are the forecasted values of fine particulate matter, ozone, and the air quality index. *** alert *** is an indicator variable equal to one when the AQI is larger than 100. Moreover, I include a set of indicator variables on the structure of the forecast, i.e., was it a single alert? Did all the forecasts point to the emission of an alert? Etc.\n\n\nShow the Code\n# Show the data set\nkbl(head(filter(AqiForecast, alert == 1), 5)) %>% \n  kable_classic(full_width = T, html_font = \"Cambria\") %>% \n  kable_styling(bootstrap_option = c(\"hover\")) |> \n  column_spec(c(1), italic = T, color = \"DarkBlue\") %>% \n   footnote(general = \"IssueDate is the date of issue of the forecast. ForecastDate is the date of the alert. ForecastPeriod is the difference between the issue and forecast dates. o3 is the forecasted AQI value of atmospheric ozone. pm25 is the forecasted AQI value of fine particulate matter. aqi is the forecasted AQI value to emit the alert\", general_title = \"Notes:\", footnote_as_chunk = T)\n\n\n\n\nTable 8:  Final data set on the forecast of the AQI \n \n  \n    date \n    ForecastType \n    pm25 \n    o3 \n    aqi \n    alert \n    SingleAlert \n    FullAlert \n    OnlySameDayAlert \n    NextAndSameDayAlert \n    TwoDaysSingleAlert \n  \n \n\n  \n    2008-06-07 \n    Forecast (-1) \n    92 \n    114 \n    114 \n    1 \n    1 \n    1 \n    0 \n    0 \n    0 \n  \n  \n    2008-06-08 \n    Forecast (-2) \n    80 \n    101 \n    101 \n    1 \n    1 \n    1 \n    0 \n    0 \n    1 \n  \n  \n    2008-06-09 \n    Forecast (0,-3) \n    NA \n    105 \n    105 \n    1 \n    0 \n    1 \n    0 \n    0 \n    0 \n  \n  \n    2008-06-10 \n    Forecast (0,-1) \n    105 \n    110 \n    110 \n    1 \n    0 \n    1 \n    0 \n    1 \n    0 \n  \n  \n    2008-06-14 \n    Forecast (0,-1) \n    NA \n    105 \n    105 \n    1 \n    0 \n    0 \n    1 \n    0 \n    0 \n  \n\n\nNotes:  IssueDate is the date of issue of the forecast. ForecastDate is the date of the alert. ForecastPeriod is the difference between the issue and forecast dates. o3 is the forecasted AQI value of atmospheric ozone. pm25 is the forecasted AQI value of fine particulate matter. aqi is the forecasted AQI value to emit the alert\n\n\n\n\n\n```"
  },
  {
    "objectID": "02_data.html#iconify-akar-icons-air-air-quality-index",
    "href": "02_data.html#iconify-akar-icons-air-air-quality-index",
    "title": " Data Sets",
    "section": " Air quality index",
    "text": "Air quality index\n\n\nShow the Code\n# Load the AQI data sets\naqi = read_rds(paste0(file, \"02_GenData/02_aqi/RealAqi.rds\"))\n\n\nWe obtain data on measured AQI values from the Environmental Protection Agency (EPA). The EPA determines the AQI in all American counties with pollution measuring stations. At each point, the AQI for county \\(i\\) at time \\(t\\) is the maximum AQI across all stations and measured contaminants on that day. Table Table 9 shows the structure of the AQI data. It contains the observation date and the AQI values for each city (RealAqi) and each city borough.\n\n\nShow the Code\n# Show the data set\nkbl(head(aqi, 2)) %>% \n  kable_classic(full_width = T, html_font = \"Cambria\") %>% \n  kable_styling(bootstrap_option = c(\"hover\")) |> \n  column_spec(c(1), italic = T, color = \"DarkBlue\") %>% \n   footnote(general = \"This table contains a sample of the AQI data from the EPA. The data contains an observation for each date between January 1st, 2009, and October 1st, 2019. Each column refers to the AQI value in the respective borough. The RealAqi column is the maximum AQI value across all boroughs in the city\", general_title = \"Notes:\", footnote_as_chunk = T)\n\n\n\n\nTable 9:  Values of the AQI in NYC \n \n  \n    date \n    RealAqi \n    BronxAQI \n    BrooklynAQI \n    ManhattanAQI \n    QueensAQI \n    StatenIslandAQI \n  \n \n\n  \n    2008-01-01 \n    67 \n    67 \n    57 \n    67 \n    60 \n    58 \n  \n  \n    2008-01-02 \n    55 \n    52 \n    45 \n    55 \n    45 \n    43 \n  \n\n\nNotes:  This table contains a sample of the AQI data from the EPA. The data contains an observation for each date between January 1st, 2009, and October 1st, 2019. Each column refers to the AQI value in the respective borough. The RealAqi column is the maximum AQI value across all boroughs in the city"
  },
  {
    "objectID": "02_data.html#iconify-solid-people-roof-demographic-covariates",
    "href": "02_data.html#iconify-solid-people-roof-demographic-covariates",
    "title": " Data Sets",
    "section": " Demographic covariates",
    "text": "Demographic covariates\nHere, I present all other demographic and health covariates I use to explore if there are heterogeneous treatment effects on the impact of the AQHAs on school absences. Here, I load the main data files.\n\n\nShow the Code\necon = read_rds(paste0(file, \"02_GenData/03_dem/econ.rds\"))\ndem = read_rds(paste0(file,\"02_GenData/03_dem/dem.rds\"))\nsoc = read_rds(paste0(file,\"02_GenData/03_dem/soc.rds\"))\nhosp = read_rds(paste0(file,\"02_GenData/03_dem/AsthmaHosp.rds\"))\ner = read_rds(paste0(file,\"02_GenData/03_dem/AsthmaEr.rds\"))\n\n\nWe collect different economic, demographic, and health covariates at the neighborhood level from two primary sources; for socio-demographic variables, we use public data from the American Community Survey between 2012-2016. For the health data, we use the information on children’s asthma-related hospitalization and ER admissions from the New York State Department of Health.\n\nEconomicDemographicSocialHospitalizationsER Admissions\n\n\n\n\nShow the Code\nkbl(head(econ, 5)) %>% \n  kable_classic(full_width = T, html_font = \"Cambria\") %>% \n  kable_styling(bootstrap_option = c(\"hover\")) |> \n  column_spec(c(1), italic = T, color = \"DarkBlue\") %>% \n   footnote(general = \"nta = Name of the neighborhood, ntacode = Code of the neighborhood, \n            boro = Name of the borough, FemaleLF = share of working age women at work, \n            MeanIncome = Average income, MedianIncome = Median Income\" , general_title = \"Notes:\", footnote_as_chunk = T)\n\n\n\n\n \n  \n    nta \n    ntacode \n    boro \n    FemaleLF \n    MeanIncome \n    MedianIncome \n  \n \n\n  \n    Bath Beach \n    BK27 \n    Brooklyn \n    52.6 \n    75950 \n    58243 \n  \n  \n    Bay Ridge \n    BK31 \n    Brooklyn \n    57.8 \n    86319 \n    63539 \n  \n  \n    Bedford \n    BK75 \n    Brooklyn \n    62.9 \n    62616 \n    39970 \n  \n  \n    Bensonhurst East \n    BK29 \n    Brooklyn \n    54.6 \n    65715 \n    48097 \n  \n  \n    Bensonhurst West \n    BK28 \n    Brooklyn \n    54.5 \n    70198 \n    51035 \n  \n\n\nNotes:  nta = Name of the neighborhood, ntacode = Code of the neighborhood,             boro = Name of the borough, FemaleLF = share of working age women at work,             MeanIncome = Average income, MedianIncome = Median Income\n\n\n\n\n\n\n\n\nShow the Code\nkbl(head(dem, 5)) %>% \n  kable_classic(full_width = T, html_font = \"Cambria\") %>% \n  kable_styling(bootstrap_option = c(\"hover\")) |> \n  column_spec(c(1), italic = T, color = \"DarkBlue\") %>% \n   footnote(general = \"nta = Name of the neighborhood, ntacode = Code of the neighborhood, \n            boro = Name of the borough, ShareHisp = share of Hispanic persons, \n            ShareWhite = Share of white persons, ShareBlack = Share of black persons\", general_title = \"Notes:\", footnote_as_chunk = T)\n\n\n\n\n \n  \n    nta \n    ntacode \n    boro \n    ShareHisp \n    ShareWhite \n    ShareBlack \n  \n \n\n  \n    Bath Beach \n    BK27 \n    Brooklyn \n    17.7 \n    43.7 \n    1.2 \n  \n  \n    Bay Ridge \n    BK31 \n    Brooklyn \n    17.9 \n    63.4 \n    1.9 \n  \n  \n    Bedford \n    BK75 \n    Brooklyn \n    19.5 \n    35.1 \n    40.6 \n  \n  \n    Bensonhurst East \n    BK29 \n    Brooklyn \n    12.3 \n    46.5 \n    0.8 \n  \n  \n    Bensonhurst West \n    BK28 \n    Brooklyn \n    14.6 \n    42.7 \n    0.9 \n  \n\n\nNotes:  nta = Name of the neighborhood, ntacode = Code of the neighborhood,             boro = Name of the borough, ShareHisp = share of Hispanic persons,             ShareWhite = Share of white persons, ShareBlack = Share of black persons\n\n\n\n\n\n\n\n\nShow the Code\nkbl(head(soc, 5)) %>% \n  kable_classic(full_width = T, html_font = \"Cambria\") %>% \n  kable_styling(bootstrap_option = c(\"hover\")) |> \n  column_spec(c(1), italic = T, color = \"DarkBlue\") %>% \n   footnote(general = \"nta = Name of the neighborhood, ntacode = Code of the neighborhood, \n            boro = Name of the borough, SingleParents = share of single-parent households, \n            GrandParentsAid = share of families with help from grandparents, \n            LessThanHighschool = share of persons that did not complete high school, \n            Bachelor = share of persons with a bachelor's degree, \n            EnglishOnly = share of persons that only communicate in English\", \n            general_title = \"Notes:\", footnote_as_chunk = T)\n\n\n\n\n \n  \n    nta \n    ntacode \n    boro \n    SingleParents \n    GrandParentsAid \n    LessThanHighschool \n    Bachelor \n    EnglishOnly \n  \n \n\n  \n    Bath Beach \n    BK27 \n    Brooklyn \n    26.2 \n    3.1 \n    23.0 \n    33.6 \n    31.0 \n  \n  \n    Bay Ridge \n    BK31 \n    Brooklyn \n    24.1 \n    1.8 \n    13.8 \n    46.4 \n    49.0 \n  \n  \n    Bedford \n    BK75 \n    Brooklyn \n    51.1 \n    3.9 \n    21.7 \n    32.2 \n    58.9 \n  \n  \n    Bensonhurst East \n    BK29 \n    Brooklyn \n    27.6 \n    3.9 \n    25.1 \n    30.2 \n    24.3 \n  \n  \n    Bensonhurst West \n    BK28 \n    Brooklyn \n    26.3 \n    2.1 \n    28.1 \n    26.2 \n    26.1 \n  \n\n\nNotes:  nta = Name of the neighborhood, ntacode = Code of the neighborhood,             boro = Name of the borough, SingleParents = share of single-parent households,             GrandParentsAid = share of families with help from grandparents,             LessThanHighschool = share of persons that did not complete high school,             Bachelor = share of persons with a bachelor's degree,             EnglishOnly = share of persons that only communicate in English\n\n\n\n\n\n\n\n\nShow the Code\nkbl(head(hosp, 5)) %>% \n  kable_classic(full_width = T, html_font = \"Cambria\") %>% \n  kable_styling(bootstrap_option = c(\"hover\")) |> \n  column_spec(c(1), italic = T, color = \"DarkBlue\") %>% \n   footnote(general = \"nta = Name of the neighborhood, ntacode = Code of the neighborhood, \n            HospChildren = Number of children going to the hospital because of asthma, \n            HospChildRate = Rate of children going to the hospital because of asthma (per 10,000), \n            SmallSampleIndicator = Indicator variable equal to one if the sample is too small\", general_title = \"Notes:\", footnote_as_chunk = T)\n\n\n\n\n \n  \n    year \n    nta \n    ntacode \n    HospChildren \n    HospChildrenRate \n    SmallSampleIndicator \n  \n \n\n  \n    2014-2016 \n    Allerton-Pelham Gardens \n    BX31 \n    9 \n    18.3 \n    0 \n  \n  \n    2014-2016 \n    Annadale-Huguenot-Prince's Bay-Eltingville \n    SI01 \n    NA \n    2.9 \n    1 \n  \n  \n    2014-2016 \n    Arden Heights \n    SI48 \n    NA \n    2.3 \n    1 \n  \n  \n    2014-2016 \n    Astoria \n    QN70 \n    8 \n    10.1 \n    0 \n  \n  \n    2014-2016 \n    Auburndale \n    QN48 \n    0 \n    0.0 \n    0 \n  \n\n\nNotes:  nta = Name of the neighborhood, ntacode = Code of the neighborhood,             HospChildren = Number of children going to the hospital because of asthma,             HospChildRate = Rate of children going to the hospital because of asthma (per 10,000),             SmallSampleIndicator = Indicator variable equal to one if the sample is too small\n\n\n\n\n\n\n\n\nShow the Code\nkbl(head(er, 5)) %>% \n  kable_classic(full_width = T, html_font = \"Cambria\") %>% \n  kable_styling(bootstrap_option = c(\"hover\")) |> \n  column_spec(c(1), italic = T, color = \"DarkBlue\") %>% \n   footnote(general = \"nta = Name of the neighborhood, ntacode = Code of the neighborhood, \n            ErAdmissions = Number of children going to the ER because of asthma, \n            HospChildRate = Rate of children going to the ER because of asthma (per 10,000), \n            SmallSampleIndicator = Indicator variable equal to one if the sample is too small\", general_title = \"Notes:\", footnote_as_chunk = T)\n\n\n\n\n \n  \n    year \n    nta \n    boro \n    ntacode \n    ErAdmissions \n    ErAdmissionRate \n    SmallSampleIndicator \n  \n \n\n  \n    2014-2016 \n    Allerton-Pelham Gardens \n    Bronx \n    BX31 \n    115 \n    225.5 \n    0 \n  \n  \n    2014-2016 \n    Annadale-Huguenot-Prince's Bay-Eltingville \n    Staten Island \n    SI50 \n    14 \n    30.3 \n    0 \n  \n  \n    2014-2016 \n    Arden Heights \n    Staten Island \n    SI54 \n    14 \n    33.6 \n    0 \n  \n  \n    2014-2016 \n    Astoria \n    Queens \n    QN17 \n    79 \n    104.1 \n    0 \n  \n  \n    2014-2016 \n    Auburndale \n    Queens \n    QN14 \n    11 \n    38.7 \n    0 \n  \n\n\nNotes:  nta = Name of the neighborhood, ntacode = Code of the neighborhood,             ErAdmissions = Number of children going to the ER because of asthma,             HospChildRate = Rate of children going to the ER because of asthma (per 10,000),             SmallSampleIndicator = Indicator variable equal to one if the sample is too small"
  },
  {
    "objectID": "02_data.html#iconify-fluent-weather-drizzle-48-filled-weather",
    "href": "02_data.html#iconify-fluent-weather-drizzle-48-filled-weather",
    "title": " Data Sets",
    "section": " Weather",
    "text": "Weather\n\n\nShow the Code\nweather = read_rds(paste0(file, \"02_GenData/03_weather/NycGsod.rds\"))\n\n\nWe obtain weather data for the city of New York from the Global Surface Summary of the Day data provided by the US National Centres for Environmental Information (NCEI). Table Table 10 shows the structure of the weather data. For each date between January 2006 and December 2018, we have daily average, minimum, and maximum temperature, alongside atmospheric pressure, wind speed, precipitation, and relative humidity.\n\n\nShow the Code\n# Show the data set\nkbl(head(weather, 2)) %>% \n  kable_classic(full_width = T, html_font = \"Cambria\") %>% \n  kable_styling(bootstrap_option = c(\"hover\")) |> \n  column_spec(c(1), italic = T, color = \"DarkBlue\") %>% \n   footnote(general = \"tmp = Average temperature, MinTmp = Minimum temperature, MaxTmp = Maximum temperature, dew = Dew point, atm = Atmospheric Pressure, wsp = Wind speed, rain = Precipitation, rh = Relative humidity. All temperatures in celsius and precipitation in millimeters\", general_title = \"Notes:\", footnote_as_chunk = T)\n\n\n\n\nTable 10:  Weather data for New York City \n \n  \n    date \n    tmp \n    MinTmp \n    MaxTmp \n    dew \n    atm \n    wsp \n    rain \n    rh \n  \n \n\n  \n    2006-01-01 \n    2.08 \n    -0.28 \n    5.82 \n    -1.07 \n    12.20 \n    1.8 \n    4.45 \n    79.7 \n  \n  \n    2006-01-02 \n    5.38 \n    0.98 \n    8.05 \n    0.32 \n    20.27 \n    1.9 \n    1.78 \n    70.1 \n  \n\n\nNotes:  tmp = Average temperature, MinTmp = Minimum temperature, MaxTmp = Maximum temperature, dew = Dew point, atm = Atmospheric Pressure, wsp = Wind speed, rain = Precipitation, rh = Relative humidity. All temperatures in celsius and precipitation in millimeters"
  },
  {
    "objectID": "02_data.html#iconify-fa6-solid-people-roof-demographic-covariates",
    "href": "02_data.html#iconify-fa6-solid-people-roof-demographic-covariates",
    "title": " Data Sets",
    "section": " Demographic covariates",
    "text": "Demographic covariates\nHere, I present all other demographic and health covariates I use to explore if there are heterogeneous treatment effects on the impact of the AQHAs on school absences. Here, I load the main data files.\n\n\nShow the Code\necon = read_rds(paste0(file, \"02_GenData/03_dem/econ.rds\"))\ndem = read_rds(paste0(file,\"02_GenData/03_dem/dem.rds\"))\nsoc = read_rds(paste0(file,\"02_GenData/03_dem/soc.rds\"))\nhosp = read_rds(paste0(file,\"02_GenData/03_dem/AsthmaHosp.rds\"))\ner = read_rds(paste0(file,\"02_GenData/03_dem/AsthmaEr.rds\"))\n\n\nWe collect different economic, demographic, and health covariates at the neighborhood level from two primary sources; for socio-demographic variables, we use public data from the American Community Survey between 2012-2016. For the health data, we use the information on children’s asthma-related hospitalization and ER admissions from the New York State Department of Health.\n\nEconomicDemographicSocialHospitalizationsER Admissions\n\n\n\n\nShow the Code\nkbl(head(econ, 5)) %>% \n  kable_classic(full_width = T, html_font = \"Cambria\") %>% \n  kable_styling(bootstrap_option = c(\"hover\")) |> \n  column_spec(c(1), italic = T, color = \"DarkBlue\") %>% \n   footnote(general = \"nta = Name of the neighborhood, ntacode = Code of the neighborhood, \n            boro = Name of the borough, FemaleLF = share of working age women at work, \n            MeanIncome = Average income, MedianIncome = Median Income\" , general_title = \"Notes:\", footnote_as_chunk = T)\n\n\n\n\n \n  \n    nta \n    ntacode \n    boro \n    FemaleLF \n    MeanIncome \n    MedianIncome \n  \n \n\n  \n    Bath Beach \n    BK27 \n    Brooklyn \n    52.6 \n    75950 \n    58243 \n  \n  \n    Bay Ridge \n    BK31 \n    Brooklyn \n    57.8 \n    86319 \n    63539 \n  \n  \n    Bedford \n    BK75 \n    Brooklyn \n    62.9 \n    62616 \n    39970 \n  \n  \n    Bensonhurst East \n    BK29 \n    Brooklyn \n    54.6 \n    65715 \n    48097 \n  \n  \n    Bensonhurst West \n    BK28 \n    Brooklyn \n    54.5 \n    70198 \n    51035 \n  \n\n\nNotes:  nta = Name of the neighborhood, ntacode = Code of the neighborhood,             boro = Name of the borough, FemaleLF = share of working age women at work,             MeanIncome = Average income, MedianIncome = Median Income\n\n\n\n\n\n\n\n\nShow the Code\nkbl(head(dem, 5)) %>% \n  kable_classic(full_width = T, html_font = \"Cambria\") %>% \n  kable_styling(bootstrap_option = c(\"hover\")) |> \n  column_spec(c(1), italic = T, color = \"DarkBlue\") %>% \n   footnote(general = \"nta = Name of the neighborhood, ntacode = Code of the neighborhood, \n            boro = Name of the borough, ShareHisp = share of Hispanic persons, \n            ShareWhite = Share of white persons, ShareBlack = Share of black persons\", general_title = \"Notes:\", footnote_as_chunk = T)\n\n\n\n\n \n  \n    nta \n    ntacode \n    boro \n    ShareHisp \n    ShareWhite \n    ShareBlack \n  \n \n\n  \n    Bath Beach \n    BK27 \n    Brooklyn \n    17.7 \n    43.7 \n    1.2 \n  \n  \n    Bay Ridge \n    BK31 \n    Brooklyn \n    17.9 \n    63.4 \n    1.9 \n  \n  \n    Bedford \n    BK75 \n    Brooklyn \n    19.5 \n    35.1 \n    40.6 \n  \n  \n    Bensonhurst East \n    BK29 \n    Brooklyn \n    12.3 \n    46.5 \n    0.8 \n  \n  \n    Bensonhurst West \n    BK28 \n    Brooklyn \n    14.6 \n    42.7 \n    0.9 \n  \n\n\nNotes:  nta = Name of the neighborhood, ntacode = Code of the neighborhood,             boro = Name of the borough, ShareHisp = share of Hispanic persons,             ShareWhite = Share of white persons, ShareBlack = Share of black persons\n\n\n\n\n\n\n\n\nShow the Code\nkbl(head(soc, 5)) %>% \n  kable_classic(full_width = T, html_font = \"Cambria\") %>% \n  kable_styling(bootstrap_option = c(\"hover\")) |> \n  column_spec(c(1), italic = T, color = \"DarkBlue\") %>% \n   footnote(general = \"nta = Name of the neighborhood, ntacode = Code of the neighborhood, \n            boro = Name of the borough, SingleParents = share of single-parent households, \n            GrandParentsAid = share of families with help from grandparents, \n            LessThanHighschool = share of persons that did not complete high school, \n            Bachelor = share of persons with a bachelor's degree, \n            EnglishOnly = share of persons that only communicate in English\", \n            general_title = \"Notes:\", footnote_as_chunk = T)\n\n\n\n\n \n  \n    nta \n    ntacode \n    boro \n    SingleParents \n    GrandParentsAid \n    LessThanHighschool \n    Bachelor \n    EnglishOnly \n  \n \n\n  \n    Bath Beach \n    BK27 \n    Brooklyn \n    26.2 \n    3.1 \n    23.0 \n    33.6 \n    31.0 \n  \n  \n    Bay Ridge \n    BK31 \n    Brooklyn \n    24.1 \n    1.8 \n    13.8 \n    46.4 \n    49.0 \n  \n  \n    Bedford \n    BK75 \n    Brooklyn \n    51.1 \n    3.9 \n    21.7 \n    32.2 \n    58.9 \n  \n  \n    Bensonhurst East \n    BK29 \n    Brooklyn \n    27.6 \n    3.9 \n    25.1 \n    30.2 \n    24.3 \n  \n  \n    Bensonhurst West \n    BK28 \n    Brooklyn \n    26.3 \n    2.1 \n    28.1 \n    26.2 \n    26.1 \n  \n\n\nNotes:  nta = Name of the neighborhood, ntacode = Code of the neighborhood,             boro = Name of the borough, SingleParents = share of single-parent households,             GrandParentsAid = share of families with help from grandparents,             LessThanHighschool = share of persons that did not complete high school,             Bachelor = share of persons with a bachelor's degree,             EnglishOnly = share of persons that only communicate in English\n\n\n\n\n\n\n\n\nShow the Code\nkbl(head(hosp, 5)) %>% \n  kable_classic(full_width = T, html_font = \"Cambria\") %>% \n  kable_styling(bootstrap_option = c(\"hover\")) |> \n  column_spec(c(1), italic = T, color = \"DarkBlue\") %>% \n   footnote(general = \"nta = Name of the neighborhood, ntacode = Code of the neighborhood, \n            HospChildren = Number of children going to the hospital because of asthma, \n            HospChildRate = Rate of children going to the hospital because of asthma (per 10,000), \n            SmallSampleIndicator = Indicator variable equal to one if the sample is too small\", general_title = \"Notes:\", footnote_as_chunk = T)\n\n\n\n\n \n  \n    year \n    nta \n    ntacode \n    HospChildren \n    HospChildrenRate \n    SmallSampleIndicator \n  \n \n\n  \n    2014-2016 \n    Allerton-Pelham Gardens \n    BX31 \n    9 \n    18.3 \n    0 \n  \n  \n    2014-2016 \n    Annadale-Huguenot-Prince's Bay-Eltingville \n    SI01 \n    NA \n    2.9 \n    1 \n  \n  \n    2014-2016 \n    Arden Heights \n    SI48 \n    NA \n    2.3 \n    1 \n  \n  \n    2014-2016 \n    Astoria \n    QN70 \n    8 \n    10.1 \n    0 \n  \n  \n    2014-2016 \n    Auburndale \n    QN48 \n    0 \n    0.0 \n    0 \n  \n\n\nNotes:  nta = Name of the neighborhood, ntacode = Code of the neighborhood,             HospChildren = Number of children going to the hospital because of asthma,             HospChildRate = Rate of children going to the hospital because of asthma (per 10,000),             SmallSampleIndicator = Indicator variable equal to one if the sample is too small\n\n\n\n\n\n\n\n\nShow the Code\nkbl(head(er, 5)) %>% \n  kable_classic(full_width = T, html_font = \"Cambria\") %>% \n  kable_styling(bootstrap_option = c(\"hover\")) |> \n  column_spec(c(1), italic = T, color = \"DarkBlue\") %>% \n   footnote(general = \"nta = Name of the neighborhood, ntacode = Code of the neighborhood, \n            ErAdmissions = Number of children going to the ER because of asthma, \n            HospChildRate = Rate of children going to the ER because of asthma (per 10,000), \n            SmallSampleIndicator = Indicator variable equal to one if the sample is too small\", general_title = \"Notes:\", footnote_as_chunk = T)\n\n\n\n\n \n  \n    year \n    nta \n    boro \n    ntacode \n    ErAdmissions \n    ErAdmissionRate \n    SmallSampleIndicator \n  \n \n\n  \n    2014-2016 \n    Allerton-Pelham Gardens \n    Bronx \n    BX31 \n    115 \n    225.5 \n    0 \n  \n  \n    2014-2016 \n    Annadale-Huguenot-Prince's Bay-Eltingville \n    Staten Island \n    SI50 \n    14 \n    30.3 \n    0 \n  \n  \n    2014-2016 \n    Arden Heights \n    Staten Island \n    SI54 \n    14 \n    33.6 \n    0 \n  \n  \n    2014-2016 \n    Astoria \n    Queens \n    QN17 \n    79 \n    104.1 \n    0 \n  \n  \n    2014-2016 \n    Auburndale \n    Queens \n    QN14 \n    11 \n    38.7 \n    0 \n  \n\n\nNotes:  nta = Name of the neighborhood, ntacode = Code of the neighborhood,             ErAdmissions = Number of children going to the ER because of asthma,             HospChildRate = Rate of children going to the ER because of asthma (per 10,000),             SmallSampleIndicator = Indicator variable equal to one if the sample is too small"
  },
  {
    "objectID": "02_data.html#iconify-tabler-math-function-y-air-quality-index",
    "href": "02_data.html#iconify-tabler-math-function-y-air-quality-index",
    "title": " Data Sets",
    "section": " Air quality index",
    "text": "Air quality index\n\n\nShow the Code\n# Load the AQI data sets\naqi = read_rds(paste0(file, \"02_GenData/02_aqi/RealAqi.rds\"))\n\n\nWe obtain data on measured AQI values from the Environmental Protection Agency (EPA). The EPA determines the AQI in all American counties with pollution measuring stations. At each point, the AQI for county \\(i\\) at time \\(t\\) is the maximum AQI across all stations and measured contaminants on that day. Table Table 9 shows the structure of the AQI data. It contains the observation date and the AQI values for each city (RealAqi) and each city borough.\n\n\nShow the Code\n# Show the data set\nkbl(head(aqi, 2)) %>% \n  kable_classic(full_width = T, html_font = \"Cambria\") %>% \n  kable_styling(bootstrap_option = c(\"hover\")) |> \n  column_spec(c(1), italic = T, color = \"DarkBlue\") %>% \n   footnote(general = \"This table contains a sample of the AQI data from the EPA. The data contains an observation for each date between January 1st, 2009, and October 1st, 2019. Each column refers to the AQI value in the respective borough. The RealAqi column is the maximum AQI value across all boroughs in the city\", general_title = \"Notes:\", footnote_as_chunk = T)\n\n\n\n\nTable 9:  Values of the AQI in NYC \n \n  \n    date \n    RealAqi \n    BronxAQI \n    BrooklynAQI \n    ManhattanAQI \n    QueensAQI \n    StatenIslandAQI \n  \n \n\n  \n    2008-01-01 \n    67 \n    67 \n    57 \n    67 \n    60 \n    58 \n  \n  \n    2008-01-02 \n    55 \n    52 \n    45 \n    55 \n    45 \n    43 \n  \n\n\nNotes:  This table contains a sample of the AQI data from the EPA. The data contains an observation for each date between January 1st, 2009, and October 1st, 2019. Each column refers to the AQI value in the respective borough. The RealAqi column is the maximum AQI value across all boroughs in the city"
  },
  {
    "objectID": "02_data.html#data-on-the-forecasts-of-the-air-quality-index",
    "href": "02_data.html#data-on-the-forecasts-of-the-air-quality-index",
    "title": " Data Sets",
    "section": "Data on the forecasts of the air quality index",
    "text": "Data on the forecasts of the air quality index\n\n\n\nThe data on the air quality index (AQI) forecasts come from the New York State Department of Environmental Conservation (NYSDEC).1 Table 5 contains a sample of the raw data. It includes the issue date, forecast date, emission lag, and forecasted value of ozone (o3), fine particulate matter (pm25), and the air quality index (AQI). The issue date is the date the NYSDEC estimated the forecast, and the emission lag is the difference between the issue and forecast dates.\nIt is relevant to distinguish between the issue and forecast dates. The issue date is the date that the NYSDEC performs the forecast. the forecast date is the date of the forecast. For instance, the NYSDEC can forecast an AQI value of 105 for May 1st on April 29th. In this example, April 29th is the issue date, and May 1st the forecast date. It is worth noting that forecasts can have different issue dates. For instance, there can be three forecasts for January 1st.\n\nAQI DataForecast TypeIndicators on the type of alert\n\n\n\n\nShow the Code\n# Show the data set\nkbl(head(select(Full, IssueDate:aqi), 2)) %>% \n  kable_classic(full_width = T, html_font = \"Cambria\") %>% \n  kable_styling(bootstrap_option = c(\"hover\")) |> \n  column_spec(c(1), italic = T, color = \"DarkBlue\") %>% \n   footnote(general = \"IssueDate is the date of issue of the forecast Forecast date is the date t.of the alert. ForecastPeriod is the difference between the issue and forecast dates. o3 is the forecasted AQI value of atmospheric ozone. pm25 is the forecasted AQI value of fine particulate matter. aqi is the forecasted AQI value to emit the alert\", general_title = \"Notes:\", footnote_as_chunk = T)\n\n\n\n\nTable 5:  Raw data on the Air Quality Index \n \n  \n    IssueDate \n    ForecastDate \n    EmissionLag \n    o3 \n    pm25 \n    aqi \n  \n \n\n  \n    2007-12-31 \n    2008-01-01 \n    -1 \n    NA \n    65 \n    65 \n  \n  \n    2007-12-31 \n    2008-01-02 \n    -2 \n    NA \n    40 \n    40 \n  \n\n\nNotes:  IssueDate is the date of issue of the forecast Forecast date is the date t.of the alert. ForecastPeriod is the difference between the issue and forecast dates. o3 is the forecasted AQI value of atmospheric ozone. pm25 is the forecasted AQI value of fine particulate matter. aqi is the forecasted AQI value to emit the alert\n\n\n\n\n\n\n\n\n\nShow the Code\n# Show the data set\nkbl(head(select(Full, IssueDate:ForecastDate, aqi, SingleForecast, ForecastType, SameDay:FourDays), 2)) %>% \n  kable_classic(full_width = T, html_font = \"Cambria\") %>% \n  kable_styling(bootstrap_option = c(\"hover\")) |> \n  column_spec(c(1), italic = T, color = \"DarkBlue\") %>% \n   footnote(general = \"IssueDate is the date of issue of the forecast ForecastDate is the date of the alert. ForecastPeriod is the difference between the issue and forecast dates. o3 is the forecasted AQI value of atmospheric ozone. pm25 is the forecasted AQI value of fine particulate matter. aqi is the forecasted AQI value to emit the alert\", general_title = \"Notes:\", footnote_as_chunk = T)\n\n\n\n\nTable 6:  Raw data on the Air Quality Index (Forecast Indicators) \n \n  \n    IssueDate \n    ForecastDate \n    aqi \n    SingleForecast \n    ForecastType \n    SameDay \n    NextDay \n    TwoDays \n    ThreeDays \n    FourDays \n  \n \n\n  \n    2007-12-31 \n    2008-01-01 \n    65 \n    1 \n    Forecast (-1) \n    0 \n    1 \n    0 \n    0 \n    0 \n  \n  \n    2007-12-31 \n    2008-01-02 \n    40 \n    0 \n    Forecast (0,-2) \n    0 \n    0 \n    1 \n    0 \n    0 \n  \n\n\nNotes:  IssueDate is the date of issue of the forecast ForecastDate is the date of the alert. ForecastPeriod is the difference between the issue and forecast dates. o3 is the forecasted AQI value of atmospheric ozone. pm25 is the forecasted AQI value of fine particulate matter. aqi is the forecasted AQI value to emit the alert\n\n\n\n\n\n\n\n\n\nShow the Code\n# Show the data set\nkbl(head(select(Full, IssueDate:ForecastDate, aqi, alert, FullAlert, SingleAlert:TwoDaysSingleAlert), 2)) %>% \n  kable_classic(full_width = T, html_font = \"Cambria\") %>% \n  kable_styling(bootstrap_option = c(\"hover\")) |> \n  column_spec(c(1), italic = T, color = \"DarkBlue\") %>% \n   footnote(general = \"IssueDate is the date of issue of the forecas Forecast date is the date t.of the alert. ForecastPeriod is the difference between the issue and forecast dates. o3 is the forecasted AQI value of atmospheric ozone. pm25 is the forecasted AQI value of fine particulate matter. aqi is the forecasted AQI value to emit the alert\", general_title = \"Notes:\", footnote_as_chunk = T)\n\n\n\n\nTable 7:  Raw data on the Air Quality Index (Alert Indicators) \n \n  \n    IssueDate \n    ForecastDate \n    aqi \n    alert \n    FullAlert \n    SingleAlert \n    OnlySameDayAlert \n    NextAndSameDayAlert \n    TwoDaysSingleAlert \n  \n \n\n  \n    2007-12-31 \n    2008-01-01 \n    65 \n    0 \n    0 \n    0 \n    0 \n    0 \n    0 \n  \n  \n    2007-12-31 \n    2008-01-02 \n    40 \n    0 \n    0 \n    0 \n    0 \n    0 \n    0 \n  \n\n\nNotes:  IssueDate is the date of issue of the forecas Forecast date is the date t.of the alert. ForecastPeriod is the difference between the issue and forecast dates. o3 is the forecasted AQI value of atmospheric ozone. pm25 is the forecasted AQI value of fine particulate matter. aqi is the forecasted AQI value to emit the alert\n\n\n\n\n\n\n\n\nTable 6 contains a series of dummy and categorical variables to understand the nature of each forecast. The column SingleForecast indicates situations when only one issued forecast for that particular date exists. For example, if there were two forecasts for January 1st, one on December 30th and the other on the 31st, the value of this column would be zero. The ForecastType is a categorical variable that indicates the structure of issued forecasts for that particular date, e.g., Forecast (0, -2) means that there was a forecast issued at \\(t = 0\\) and \\(t = -2\\). The SameDay variable is equal to one if the issue and forecast dates occur on the same day. The same logic holds for NextDay, TwoDays, ThreeDays, and FourDays. For instance, a value of 1 in the FourDays column occurs when the issue date is four days before the forecast.\nTable 7 includes a set of variables on the emission of an air quality alert (AQA). The alert column is an indicator variable equal to one if the AQI forecast exceeds one hundred units. The FullAlert column is one when all forecasts on that date predict an alert. SingleAlert is one if only one forecast is higher than one hundred units. OnlySameDayAlert is one when there is only one same-day forecast. And NextAndSameDayAlert is equal to one if there were two issues for the same forecast – one on the date of the forecast and the other one day before.\nFigure 1 and Figure 2 show the share of observations with specific combinations of issued forecasts. For the full sample 93% of forecasts were issued at \\(t \\in (0, -1)\\), \\(\\$t \\in (0, -3)\\), \\(t \\in (-1)\\), and \\(t \\in (-2)\\). For the sub-sample of days with an air quality alert, 89% of the forecast are issued at \\(t \\in (0, -1)\\), $t (0, -1, -2, -3) $, $t (-1) $, and \\(t \\in (0, -3)\\).\n\nFull SampleAlerts\n\n\n\n\nShow the Code\n# Create the plot data\nplot = Full %>% group_by(ForecastType) %>% summarise(count = n()) %>% ungroup() %>% \n  mutate(share = (count/sum(count))*100)\n# Ggplot\nggplot(plot) + geom_bar(aes(y = reorder(ForecastType, -share), x = share), stat = \"identity\", fill = \"orange\") + theme_economist()  %+replace% \n  theme(legend.title = element_blank()) + \n  labs(x = \"Percentage share of observations\", y = \"\")\n\n\n\n\n\nFigure 1: Forecast type across the full sample of forecasted AQIs\n\n\n\n\n\n\n\n\nShow the Code\n# Create the plot data\nplot = Full %>% filter(alert == 1) %>% group_by(ForecastType) %>% \n  summarise(count = n()) %>% ungroup() %>% \n  mutate(share = (count/sum(count))*100)\n# Ggplot\nggplot(plot) + geom_bar(aes(y = reorder(ForecastType, -share), x = share, fill = share), \n                        stat = \"identity\") + theme_economist()  %+replace% \n  theme(legend.title = element_blank()) + \n  labs(x = \"Percentage share of observations\", y = \"\") +\n  scale_fill_viridis()\n\n\n\n\n\nFigure 2: Forecast type for the dates with an AQA\n\n\n\n\n\n\n\nThis combination of different forecasts raises one clear issue; if we want to assign one single value per date, which one should we choose? For this, use the following algorithm:\n\n\nFor the days without an alert, we select the AQI forecast closest to \\(t\\). For instance, if the AQI value for January 1st has one forecast on December 31st and another on December 30th, we select the 31st as the value of the forecasted AQI.\nFor days when there is an alert, and all forecasts imply an AQI value higher than 100 units, we choose the forecast closest to \\(t\\)\nWhen there is a discrepancy between two forecasts regarding the existence of an AQA, we choose the highest. For instance, the forecast at \\(t = 0\\) implies an AQI value of 93 and the one at \\(t = 1\\) a value of 101. In this situation, we will assign the value of 101.\n\n\nI use this algorithm to reach a final data set of forested AQI values. Table 8 shows the first rows of this final data file. In it date is the date of the forecast. ForecastType is the type of forecast as previously defined. pm25, o3, and aqi are the forecasted values of fine particulate matter, ozone, and the air quality index. *** alert *** is an indicator variable equal to one when the AQI is larger than 100. Moreover, I include a set of indicator variables on the structure of the forecast, i.e., was it a single alert? Did all the forecasts point to the emission of an alert? Etc.\n\n\nShow the Code\n# Show the data set\nkbl(head(filter(AqiForecast, alert == 1), 5)) %>% \n  kable_classic(full_width = T, html_font = \"Cambria\") %>% \n  kable_styling(bootstrap_option = c(\"hover\")) |> \n  column_spec(c(1), italic = T, color = \"DarkBlue\") %>% \n   footnote(general = \"IssueDate is the date of issue of the forecast. ForecastDate is the date of the alert. ForecastPeriod is the difference between the issue and forecast dates. o3 is the forecasted AQI value of atmospheric ozone. pm25 is the forecasted AQI value of fine particulate matter. aqi is the forecasted AQI value to emit the alert\", general_title = \"Notes:\", footnote_as_chunk = T)\n\n\n\n\nTable 8:  Final data set on the forecast of the AQI \n \n  \n    date \n    ForecastType \n    pm25 \n    o3 \n    aqi \n    alert \n    SingleAlert \n    FullAlert \n    OnlySameDayAlert \n    NextAndSameDayAlert \n    TwoDaysSingleAlert \n  \n \n\n  \n    2008-06-07 \n    Forecast (-1) \n    92 \n    114 \n    114 \n    1 \n    1 \n    1 \n    0 \n    0 \n    0 \n  \n  \n    2008-06-08 \n    Forecast (-2) \n    80 \n    101 \n    101 \n    1 \n    1 \n    1 \n    0 \n    0 \n    1 \n  \n  \n    2008-06-09 \n    Forecast (0,-3) \n    NA \n    105 \n    105 \n    1 \n    0 \n    1 \n    0 \n    0 \n    0 \n  \n  \n    2008-06-10 \n    Forecast (0,-1) \n    105 \n    110 \n    110 \n    1 \n    0 \n    1 \n    0 \n    1 \n    0 \n  \n  \n    2008-06-14 \n    Forecast (0,-1) \n    NA \n    105 \n    105 \n    1 \n    0 \n    0 \n    1 \n    0 \n    0 \n  \n\n\nNotes:  IssueDate is the date of issue of the forecast. ForecastDate is the date of the alert. ForecastPeriod is the difference between the issue and forecast dates. o3 is the forecasted AQI value of atmospheric ozone. pm25 is the forecasted AQI value of fine particulate matter. aqi is the forecasted AQI value to emit the alert\n\n\n\n\n\n```"
  },
  {
    "objectID": "02_data.html#data-on-the-air-quality-index",
    "href": "02_data.html#data-on-the-air-quality-index",
    "title": " Data Sets",
    "section": "Data on the air quality index",
    "text": "Data on the air quality index\n\n\nShow the Code\n# Load the AQI data sets\naqi = read_rds(paste0(file, \"02_GenData/02_aqi/RealAqi.rds\"))\n\n\nWe obtain data on measured AQI values from the Environmental Protection Agency (EPA). The EPA determines the AQI in all American counties with pollution measuring stations. At each point, the AQI for county \\(i\\) at time \\(t\\) is the maximum AQI across all stations and measured contaminants on that day. Table Table 9 shows the structure of the AQI data. It contains the observation date and the AQI values for each city (RealAqi) and each city borough.\n\n\nShow the Code\n# Show the data set\nkbl(head(aqi, 2)) %>% \n  kable_classic(full_width = T, html_font = \"Cambria\") %>% \n  kable_styling(bootstrap_option = c(\"hover\")) |> \n  column_spec(c(1), italic = T, color = \"DarkBlue\") %>% \n   footnote(general = \"This table contains a sample of the AQI data from the EPA. The data contains an observation for each date between January 1st, 2009, and October 1st, 2019. Each column refers to the AQI value in the respective borough. The RealAqi column is the maximum AQI value across all boroughs in the city\", general_title = \"Notes:\", footnote_as_chunk = T)\n\n\n\n\nTable 9:  Values of the AQI in NYC \n \n  \n    date \n    RealAqi \n    BronxAQI \n    BrooklynAQI \n    ManhattanAQI \n    QueensAQI \n    StatenIslandAQI \n  \n \n\n  \n    2008-01-01 \n    67 \n    67 \n    57 \n    67 \n    60 \n    58 \n  \n  \n    2008-01-02 \n    55 \n    52 \n    45 \n    55 \n    45 \n    43 \n  \n\n\nNotes:  This table contains a sample of the AQI data from the EPA. The data contains an observation for each date between January 1st, 2009, and October 1st, 2019. Each column refers to the AQI value in the respective borough. The RealAqi column is the maximum AQI value across all boroughs in the city"
  },
  {
    "objectID": "02_data.html#aqi-data",
    "href": "02_data.html#aqi-data",
    "title": " Data Sets",
    "section": "AQI Data",
    "text": "AQI Data\n\n\nShow the Code\n# Show the data set\nkbl(head(select(Full, IssueDate:aqi), 2)) %>% \n  kable_classic(full_width = T, html_font = \"Cambria\") %>% \n  kable_styling(bootstrap_option = c(\"hover\")) |> \n  column_spec(c(1), italic = T, color = \"DarkBlue\") %>% \n   footnote(general = \"IssueDate is the date of issue of the forecast Forecast date is the date t.of the alert. ForecastPeriod is the difference between the issue and forecast dates. o3 is the forecasted AQI value of atmospheric ozone. pm25 is the forecasted AQI value of fine particulate matter. aqi is the forecasted AQI value to emit the alert\", general_title = \"Notes:\", footnote_as_chunk = T)\n\n\n\n\nTable 5:  Raw data on the Air Quality Index \n \n  \n    IssueDate \n    ForecastDate \n    EmissionLag \n    o3 \n    pm25 \n    aqi \n  \n \n\n  \n    2007-12-31 \n    2008-01-01 \n    -1 \n    NA \n    65 \n    65 \n  \n  \n    2007-12-31 \n    2008-01-02 \n    -2 \n    NA \n    40 \n    40 \n  \n\n\nNotes:  IssueDate is the date of issue of the forecast Forecast date is the date t.of the alert. ForecastPeriod is the difference between the issue and forecast dates. o3 is the forecasted AQI value of atmospheric ozone. pm25 is the forecasted AQI value of fine particulate matter. aqi is the forecasted AQI value to emit the alert\n\n\n\n\n\nTable 6 contains a series of dummy and categorical variables to understand the nature of each forecast. The column SingleForecast indicates situations when only one issued forecast for that particular date exists. For example, if there were two forecasts for January 1st, one on December 30th and the other on the 31st, the value of this column would be zero. The ForecastType is a categorical variable that indicates the structure of issued forecasts for that particular date, e.g., Forecast (0, -2) means that there was a forecast issued at \\(t = 0\\) and \\(t = -2\\). The SameDay variable is equal to one if the issue and forecast dates occur on the same day. The same logic holds for NextDay, TwoDays, ThreeDays, and FourDays. For instance, a value of 1 in the FourDays column occurs when the issue date is four days before the forecast.\n\n\nShow the Code\n# Show the data set\nkbl(head(select(Full, IssueDate:ForecastDate, aqi, SingleForecast, ForecastType, SameDay:FourDays), 2)) %>% \n  kable_classic(full_width = T, html_font = \"Cambria\") %>% \n  kable_styling(bootstrap_option = c(\"hover\")) |> \n  column_spec(c(1), italic = T, color = \"DarkBlue\") %>% \n   footnote(general = \"IssueDate is the date of issue of the forecast ForecastDate is the date of the alert. ForecastPeriod is the difference between the issue and forecast dates. o3 is the forecasted AQI value of atmospheric ozone. pm25 is the forecasted AQI value of fine particulate matter. aqi is the forecasted AQI value to emit the alert\", general_title = \"Notes:\", footnote_as_chunk = T)\n\n\n\n\nTable 6:  Raw data on the Air Quality Index (Forecast Indicators) \n \n  \n    IssueDate \n    ForecastDate \n    aqi \n    SingleForecast \n    ForecastType \n    SameDay \n    NextDay \n    TwoDays \n    ThreeDays \n    FourDays \n  \n \n\n  \n    2007-12-31 \n    2008-01-01 \n    65 \n    1 \n    Forecast (-1) \n    0 \n    1 \n    0 \n    0 \n    0 \n  \n  \n    2007-12-31 \n    2008-01-02 \n    40 \n    0 \n    Forecast (0,-2) \n    0 \n    0 \n    1 \n    0 \n    0 \n  \n\n\nNotes:  IssueDate is the date of issue of the forecast ForecastDate is the date of the alert. ForecastPeriod is the difference between the issue and forecast dates. o3 is the forecasted AQI value of atmospheric ozone. pm25 is the forecasted AQI value of fine particulate matter. aqi is the forecasted AQI value to emit the alert\n\n\n\n\n\nTable 7 includes a set of variables on the emission of an air quality alert (AQA). The alert column is an indicator variable equal to one if the AQI forecast exceeds one hundred units. The FullAlert column is one when all forecasts on that date predict an alert. SingleAlert is one if only one forecast is higher than one hundred units. OnlySameDayAlert is one when there is only one same-day forecast. And NextAndSameDayAlert is equal to one if there were two issues for the same forecast – one on the date of the forecast and the other one day before.\n\n\nShow the Code\n# Show the data set\nkbl(head(select(Full, IssueDate:ForecastDate, aqi, alert, FullAlert, SingleAlert:TwoDaysSingleAlert), 2)) %>% \n  kable_classic(full_width = T, html_font = \"Cambria\") %>% \n  kable_styling(bootstrap_option = c(\"hover\")) |> \n  column_spec(c(1), italic = T, color = \"DarkBlue\") %>% \n   footnote(general = \"IssueDate is the date of issue of the forecas Forecast date is the date t.of the alert. ForecastPeriod is the difference between the issue and forecast dates. o3 is the forecasted AQI value of atmospheric ozone. pm25 is the forecasted AQI value of fine particulate matter. aqi is the forecasted AQI value to emit the alert\", general_title = \"Notes:\", footnote_as_chunk = T)\n\n\n\n\nTable 7:  Raw data on the Air Quality Index (Alert Indicators) \n \n  \n    IssueDate \n    ForecastDate \n    aqi \n    alert \n    FullAlert \n    SingleAlert \n    OnlySameDayAlert \n    NextAndSameDayAlert \n    TwoDaysSingleAlert \n  \n \n\n  \n    2007-12-31 \n    2008-01-01 \n    65 \n    0 \n    0 \n    0 \n    0 \n    0 \n    0 \n  \n  \n    2007-12-31 \n    2008-01-02 \n    40 \n    0 \n    0 \n    0 \n    0 \n    0 \n    0 \n  \n\n\nNotes:  IssueDate is the date of issue of the forecas Forecast date is the date t.of the alert. ForecastPeriod is the difference between the issue and forecast dates. o3 is the forecasted AQI value of atmospheric ozone. pm25 is the forecasted AQI value of fine particulate matter. aqi is the forecasted AQI value to emit the alert\n\n\n\n\n\nFigure 1 and Figure 2 show the share of observations with specific combinations of issued forecasts. For the full sample 93% of forecasts were issued at \\(t \\in (0, -1)\\), \\(\\$t \\in (0, -3)\\), \\(t \\in (-1)\\), and \\(t \\in (-2)\\). For the sub-sample of days with an air quality alert, 89% of the forecast are issued at \\(t \\in (0, -1)\\), $t (0, -1, -2, -3) $, $t (-1) $, and \\(t \\in (0, -3)\\).\n\nFull SampleAlerts\n\n\n\n\nShow the Code\n# Create the plot data\nplot = Full %>% group_by(ForecastType) %>% summarise(count = n()) %>% ungroup() %>% \n  mutate(share = (count/sum(count))*100)\n# Ggplot\nggplot(plot) + geom_bar(aes(y = reorder(ForecastType, -share), x = share), stat = \"identity\", fill = \"orange\") + theme_economist()  %+replace% \n  theme(legend.title = element_blank()) + \n  labs(x = \"Percentage share of observations\", y = \"\")\n\n\n\n\n\nFigure 1: Forecast type across the full sample of forecasted AQIs\n\n\n\n\n\n\n\n\nShow the Code\n# Create the plot data\nplot = Full %>% filter(alert == 1) %>% group_by(ForecastType) %>% \n  summarise(count = n()) %>% ungroup() %>% \n  mutate(share = (count/sum(count))*100)\n# Ggplot\nggplot(plot) + geom_bar(aes(y = reorder(ForecastType, -share), x = share, fill = share), \n                        stat = \"identity\") + theme_economist()  %+replace% \n  theme(legend.title = element_blank()) + \n  labs(x = \"Percentage share of observations\", y = \"\") +\n  scale_fill_viridis()\n\n\n\n\n\nFigure 2: Forecast type for the dates with an AQA\n\n\n\n\n\n\n\nThis combination of different forecasts raises one clear issue; if we want to assign one single value per date, which one should we choose? For this, use the following algorithm:\n\n\nFor the days without an alert, we select the AQI forecast closest to \\(t\\). For instance, if the AQI value for January 1st has one forecast on December 31st and another on December 30th, we select the 31st as the value of the forecasted AQI.\nFor days when there is an alert, and all forecasts imply an AQI value higher than 100 units, we choose the forecast closest to \\(t\\)\nWhen there is a discrepancy between two forecasts regarding the existence of an AQA, we choose the highest. For instance, the forecast at \\(t = 0\\) implies an AQI value of 93 and the one at \\(t = 1\\) a value of 101. In this situation, we will assign the value of 101.\n\n\nI use this algorithm to reach a final data set of forested AQI values. Table 8 shows the first rows of this final data file. In it date is the date of the forecast. ForecastType is the type of forecast as previously defined. pm25, o3, and aqi are the forecasted values of fine particulate matter, ozone, and the air quality index. *** alert *** is an indicator variable equal to one when the AQI is larger than 100. Moreover, I include a set of indicator variables on the structure of the forecast, i.e., was it a single alert? Did all the forecasts point to the emission of an alert? Etc.\n\n\nShow the Code\n# Show the data set\nkbl(head(filter(AqiForecast, alert == 1), 5)) %>% \n  kable_classic(full_width = T, html_font = \"Cambria\") %>% \n  kable_styling(bootstrap_option = c(\"hover\")) |> \n  column_spec(c(1), italic = T, color = \"DarkBlue\") %>% \n   footnote(general = \"IssueDate is the date of issue of the forecast. ForecastDate is the date of the alert. ForecastPeriod is the difference between the issue and forecast dates. o3 is the forecasted AQI value of atmospheric ozone. pm25 is the forecasted AQI value of fine particulate matter. aqi is the forecasted AQI value to emit the alert\", general_title = \"Notes:\", footnote_as_chunk = T)\n\n\n\n\nTable 8:  Final data set on the forecast of the AQI \n \n  \n    date \n    ForecastType \n    pm25 \n    o3 \n    aqi \n    alert \n    SingleAlert \n    FullAlert \n    OnlySameDayAlert \n    NextAndSameDayAlert \n    TwoDaysSingleAlert \n  \n \n\n  \n    2008-06-07 \n    Forecast (-1) \n    92 \n    114 \n    114 \n    1 \n    1 \n    1 \n    0 \n    0 \n    0 \n  \n  \n    2008-06-08 \n    Forecast (-2) \n    80 \n    101 \n    101 \n    1 \n    1 \n    1 \n    0 \n    0 \n    1 \n  \n  \n    2008-06-09 \n    Forecast (0,-3) \n    NA \n    105 \n    105 \n    1 \n    0 \n    1 \n    0 \n    0 \n    0 \n  \n  \n    2008-06-10 \n    Forecast (0,-1) \n    105 \n    110 \n    110 \n    1 \n    0 \n    1 \n    0 \n    1 \n    0 \n  \n  \n    2008-06-14 \n    Forecast (0,-1) \n    NA \n    105 \n    105 \n    1 \n    0 \n    0 \n    1 \n    0 \n    0 \n  \n\n\nNotes:  IssueDate is the date of issue of the forecast. ForecastDate is the date of the alert. ForecastPeriod is the difference between the issue and forecast dates. o3 is the forecasted AQI value of atmospheric ozone. pm25 is the forecasted AQI value of fine particulate matter. aqi is the forecasted AQI value to emit the alert\n\n\n\n\n\n```"
  },
  {
    "objectID": "03_descriptives.html",
    "href": "03_descriptives.html",
    "title": " Descriptives",
    "section": "",
    "text": "Schools\n\n\nShow the Code\n# Set the path of the R-studio project\nfile = gsub(\"AQAs_SchoolAbsences_NYC\", \"\", getwd())\n# Load the economic covariates at the Nta level\necon = read_rds(paste0(file, \"02_GenData/03_dem/econ.rds\"))\ndem = read_rds(paste0(file, \"02_GenData/03_dem/dem.rds\"))\nasthma = read_rds(paste0(file, \"02_GenData/03_dem/AsthmaHosp.rds\"))\n# Load the location of all schools\nlocation = read_rds(paste0(file, \"02_GenData/01_schools/location.rds\"))\n# Load the data set on absenteeism\nabsent = read_rds(paste0(file, \"02_GenData/RawAbsences.rds\")) |> ungroup()\n\nNtaAbsent = left_join(absent |> dplyr::filter(DayType == \"NormalDay\"), location) |>  group_by(nta, date) |> \n  summarise_at(vars(enrolled, absent, released), sum, na.rm = T)\n\n# Load the shapefile of city boroughs\nBoroShp = st_read(paste0(file, \"01_RawData/04_shp/02_bgh\"), quiet = T)%>% st_transform(., crs = 4326) %>% st_simplify(., preserveTopology = T)\n# Load the shapefile on city neighborhoods\nNtaShp = st_read(paste0(file, \"01_RawData/04_shp/03_ngh\"), quiet = T)%>% st_transform(., crs = 4326) %>% st_simplify(., preserveTopology = T)\n\n\nFigure 1 in the first tab shows the location of all schools by type. Schools spread around the city, with significant clusters in South Bronx, North Manhattan, and Brooklyn. Staten Island and Queen’s distance between schools is larger than for the Bronx or Manhattan. The data set contains 856 elementary schools, 495 high schools, 379 junior high schools, 267 kindergarten to eighth-grade schools (K8), 145 secondaries, 109 kindergarten to twelfth-grade schools (K12), 2 early childhood, and two ungraded. Figure 2 portrays the median neighborhood income in 2016 (according to the American Community Survey). The city’s wealthier areas are in Manhattan, Staten Island, and West Brooklyn, with more impoverished regions in South Bronx and East Brooklyn. Figure 3 portrays the share of white persons in each neighborhood. The strong correlation between income and the share of whites is evident, with higher percentages of white persons in Manhattan and Staten Island and lower shares in the Bronx, Queens, and Brooklyn. Figure 4 contains the share of children’s hospitalization per 10,000 across all city areas. Again, there is a strong relationship between asthma hospitalizations and income, with higher hospitalization rates in the Bronx and North-Central Brooklyn and lower in Staten Island and Manhattan.\n\nSchools in NYCIncomeShare of whitesAsthma Hosp. Rate\n\n\n\n\nShow the Code\n# Create the plot data\n# Simplify the shapefile\nBoroShp  = st_transform(BoroShp, crs = 4326) %>% \n  st_simplify(., preserveTopology = T)\n# Transform the locations data frame into a spatial object\nlocation = st_as_sf(location, coords = c(\"lon\", \"lat\"), crs = 4326)\n# Plot the map of schools in New York\ntmap_style(\"classic\"); tm_graticules(labels.inside.frame = T, labels.show = F) +\n  tm_shape(BoroShp) + tm_polygons()  + tm_shape(location) +\n  tm_dots(size = 0.025, col = \"SchoolType\", palette = \"Dark2\", title = \"Type of School\") + \n  tm_compass(type = \"rose\", position = c(\"right\", \"top\"), size = 2) +\n  tm_scale_bar(width = 0.2, position = c(\"right\", \"bottom\"), text.size = 1)\n\n\n\n\n\nFigure 1: Schools over New York City\n\n\n\n\n\n\n\n\nShow the Code\n# Create the plot data\n# Simplify the shapefile\nplot  = left_join(NtaShp, econ |>  mutate(MedianIncome = MedianIncome/1000))\n# Plot the map of schools in New York\ntmap_style(\"classic\"); tm_graticules(labels.inside.frame = T, labels.show = F) +\n  tm_shape(plot) +\n  tm_fill(col = \"MedianIncome\", style = \"quantile\", n = 10, \n          title = \"Median Income (Ths.)\",  \n          palette = \"RdBu\", colorNA = \"black\", textNA = \"No Data\")  +\n  tm_borders(lwd = 0.5) +\n  tm_compass(type = \"rose\", position = c(\"right\", \"top\"), size = 2) +\n  tm_scale_bar(width = 0.2, position = c(\"right\", \"bottom\"), text.size = 1)\n\n\n\n\n\nFigure 2: Average Income across NYC neighborhoods\n\n\n\n\n\n\n\n\nShow the Code\n# Create the plot data\n# Simplify the shapefile\nplot  = left_join(NtaShp, dem)\n# Plot the map of schools in New York\ntmap_style(\"classic\"); tm_graticules(labels.inside.frame = T, labels.show = F) +\n  tm_shape(plot) +\n  tm_fill(col = \"ShareWhite\", style = \"quantile\", n = 10,\n          title = str_wrap(\"Share of Persons Identifying as White\", width = 25),\n          palette = \"RdBu\", colorNA = \"black\", textNA = \"No Data\")  +\n  tm_borders(lwd = 0.5) +\n  tm_compass(type = \"rose\", position = c(\"right\", \"top\"), size = 2) +\n  tm_scale_bar(width = 0.2, position = c(\"right\", \"bottom\"), text.size = 1)\n\n\n\n\n\nFigure 3: Share of white persons per neighborhood\n\n\n\n\n\n\n\n\nShow the Code\n# Create the plot data\n# Simplify the shapefile\nplot  = left_join(NtaShp, asthma)\n# Plot the map of schools in New York\ntmap_style(\"classic\"); tm_graticules(labels.inside.frame = T, labels.show = F) +\n  tm_shape(plot) +\n  tm_fill(col = \"HospChildrenRate\", style = \"quantile\", n = 10,  \n          title = str_wrap(\"Children Hospitalization Rate (Cases per 10,000 Kids)\", width = 30),\n          palette = \"RdBu\", colorNA = \"black\", textNA = \"No Data\")  +\n  tm_borders(lwd = 0.5) +\n  tm_compass(type = \"rose\", position = c(\"right\", \"top\"), size = 2) +\n  tm_scale_bar(width = 0.2, position = c(\"right\", \"bottom\"), text.size = 1)\n\n\n\n\n\nFigure 4: Children hospitalization rate per neighborhood\n\n\n\n\n\n\n\nTable 1 contains descriptive statistics on absent, released, and enrolled students. There are 3,339,158 observations across 1,854 schools. On average, there are 56 daily absences per school in the city of New York. This is equivalent to around 9.04% of enrolled students. The absences have a median of 39 and a standard deviation of 75. Concerning released students, 2 (0.40%) students are released from school on an average day. Additionally, and in line with an over-dispersed Poisson distribution, releases have a median of 0 and a standard deviation of 27 pupils per day.\n\n\nShow the Code\n# Show the data set\nsumtable(select(ungroup(absent), absent, released, enrolled), \n         digits = 2, fixed.digits = T, \n         summ = c(\"mean(x)\", \"median(x)\", \"sd(x)\", \"min(x)\", \n                  \"max(x)\", \"notNA(x)\",\"countNA(x)\"), \n         summ.names = c(\"Mean\", \"Median\", \"SD\", \"Min\", \"Max\", \"N\", \"NAs\"), \n         labels = c(\"Absent Students\", \"Released Students\", \"Enrolled Students\"))\n\n\n\n\n\nTable 1:  Descriptive Statistics on School Absences \n \n  \n    Variable \n    Mean \n    Median \n    SD \n    Min \n    Max \n    N \n    NAs \n  \n \n\n  \n    Absent Students \n    56.34 \n    39 \n    74.74 \n    0 \n    3511 \n    3339158 \n    0 \n  \n  \n    Released Students \n    2.46 \n    0 \n    27.29 \n    0 \n    3777 \n    3338834 \n    324 \n  \n  \n    Enrolled Students \n    622.96 \n    497 \n    511.04 \n    1 \n    5850 \n    3339158 \n    0 \n  \n\n\n\n\n\n\nFigure 5 shows the number of schools per year reporting absences. Between 2008 and 2018, the number of reporting schools moved from a minimum of 1,545 in 2008 to a maximum of 1,659 in 2016. There are 1,365 schools in the data set that reported absenteeism for all years between 2008 and 2018. Although I use the entire sample in the regression analysis, I provide evidence that our results are robust to only focusing on the set of schools that never drop the panel.\n\n\nShow the Code\n# Number of schools reporting absences per year\nabsent |>  filter(DayType == \"NormalDay\") |>  \n  group_by(year) |> summarise(Schools = length(unique(id))) |>  \n  filter(year > 2007) |> mutate(year = as_factor(year)) %>% ggplot() + \n   geom_line(aes(x = year, y= Schools, group = 1), size = 0.75) +\n  geom_point(aes(x = year, y= Schools), color = \"red\") +\n  labs(y = \"\", x = \"Year\") +   theme_economist() %+replace%\n  theme(legend.title = element_blank(), plot.background = element_blank()) +\n  grids(\"y\")\n\n\n\n\n\nFigure 5: Number of reporting schools\n\n\n\n\nFigure 6 portrays the density function of school absences. As expected, the distribution of absences resembles a gamma probability density function with most of the density between zero and one hundred units.\n\n\nShow the Code\n#  Create the plot\nplot = absent |> ungroup() |>  filter(DayType == \"NormalDay\") |> filter(absent < quantile(absent, 0.99, na.rm = T)) |> group_by(date) |> \n  summarise(absent = mean(absent, na.rm = T))\n\n# Construct the ggplot\nggplot(plot) + \n  ggdist::stat_halfeye(aes(x = absent), height = .6,  justification = -.3,\n                       .width = 0, point_colour = NA, fill = \"#141f52\") +\n  geom_point(aes(x = absent, y = 0), size = 0.2, alpha = .2, position = position_jitter(seed = 1, height = 0.1), color = \"red\")+ \n   geom_boxplot(aes(x = absent), width = .25, \n                fill = \"transparent\", outlier.shape = NA) + \n  labs(y = \"\", x = \"Absent Students\") + theme_economist() %+replace%\n  theme(legend.title = element_blank(), plot.background = element_blank()) +\n  grids(\"y\")\n\n\n\n\n\nFigure 6: Density distribution of School Absences\n\n\n\n\nFigure 7 plots the time series of school absences. Each bar represents a day between 2006 and 2018. The breaks in the time series refer to the summer and winter breaks. Overall, it is reassuring to see no extreme changes in average school absences across our sample period. Note that drastic jumps in the number of absent students often coincide with weather events. For instance, the significant increase in 2014 refers to the 2014 nor’easter and in 2012 to intense snowfall.\n\n\nShow the Code\n# Create the data for the plot\nplot = absent |>  filter(DayType == \"NormalDay\") |> filter(absent < quantile(absent, 0.99, na.rm = T)) |> group_by(date, year) |>  summarise(absent = mean(absent)) |> ungroup() |> \n  mutate(RollMean = rollmean(absent, k = 5, fill = NA))\n\n# Plot it\nggplot(plot) + \n  geom_bar(aes(x = date, y = absent, fill = as_factor(year)), size = 0.05, stat = \"identity\") + \n  labs(y = \"Mean Absences\", x = \"Date\") + guides(fill = \"none\") + theme_economist() %+replace%\n  theme(legend.title = element_blank(), plot.background = element_blank()) +\n  grids(\"y\")\n\n\n\n\n\nFigure 7: Time Series of Daily School Absences\n\n\n\n\nIn Figure 8, we portray the average value of school absences across months of the year. The first thing to notice is a significant increase in absences for the month before the summer holidays. Additionally, absences appear to be higher during the winter months of December to February because of weather conditions and seasonal influenza. Regarding variation within weeks (?@fig-WeeklyTS). There are more increased absences on Fridays and Mondays and lower throughout the rest of the week.\n\n\nShow the Code\n# Construct the data for the plot \nplot = list(`Monthly Variation` = absent |>  dplyr::filter(DayType == \"NormalDay\") |> \n           filter(absent < quantile(absent, 0.99, na.rm = T)) |> \n           mutate(month = month(date, label = T)) |> \n           group_by(ts = month) |>  summarise(absent = mean(absent, na.rm = T)) ,\n           \n           `Weekday Variation` = absent |>  dplyr::filter(DayType == \"NormalDay\") |> \n           filter(absent < quantile(absent, 0.99, na.rm = T)) |> \n           mutate(weekday = substr(weekday, 1,2)) |> \n           group_by(ts = weekday) |>  summarise(absent = mean(absent, na.rm = T))) %>% \n  \n  rbindlist(., idcol = \"window\")\n           \n           \n        \n# Plot the time series\nggplot(plot) + geom_bar(aes(x = ts, y = absent, group = 1), stat = \"identity\", fill = \"#141f52\") + \n  geom_point(aes(x = ts, y = absent, group = 1), color = \"red\") +\n  labs(y = \"Mean Absences\", x = \"\") + guides(fill = \"none\") + theme_economist() %+replace%\n  theme(legend.title = element_blank(), plot.background = element_blank()) +\n  grids(\"y\") + facet_wrap(~window, scales = \"free\")\n\n\n\n\n\nFigure 8: Monthly Variation in School Absences\n\n\n\n\nThroughout the study, we aggregate the school-level data into neighborhood averages for three main reasons. First, aggregating data reduces the noise from school-specific miss-recordings and human error. Second, it is easier to match socio-demographic data from the American Community Survey. And third, it decreases the computational burden of our empirical strategy.\nTable 2 contains descriptive statistics on school absences at the neighborhood level. The NTA data contains 379,120 observations across 0 neighbourhoods. On average, there are 491 absences per day, equivalent to around 8.90% of enrolled students. The absences have a median of 354 and a standard deviation of 573. Concerning released students, 9 (0.16%) students are released from school on an average day.\n\n\nShow the Code\n# Show the data set\ntab = left_join(absent |> filter(DayType == \"NormalDay\"), location) |>  group_by(nta, date) |> \n  summarise_at(vars(enrolled, absent, released), sum, na.rm = T)\n\n\nsumtable(select(ungroup(tab) ,absent, released, enrolled), \n         digits = 2, fixed.digits = T, \n         summ = c(\"mean(x)\", \"median(x)\", \"sd(x)\", \"min(x)\", \n                  \"max(x)\", \"notNA(x)\",\"countNA(x)\"), \n         summ.names = c(\"Mean\", \"Median\", \"SD\", \"Min\", \"Max\", \"N\", \"NAs\"), \n         labels = c(\"Absent Students\", \"Released Students\", \"Enrolled Students\"))\n\n\n\n\n\nTable 2:  Descriptive Statistics on School Absences at the neighborhood level \n \n  \n    Variable \n    Mean \n    Median \n    SD \n    Min \n    Max \n    N \n    NAs \n  \n \n\n  \n    Absent Students \n    491.29 \n    354 \n    572.72 \n    0 \n    22819 \n    379120 \n    0 \n  \n  \n    Released Students \n    8.84 \n    0 \n    75.01 \n    0 \n    3801 \n    379120 \n    0 \n  \n  \n    Enrolled Students \n    5521.89 \n    4746 \n    3697.11 \n    229 \n    67963 \n    379120 \n    0 \n  \n\n\n\n\n\n\nThe next set of figures contains different descriptive statistics of school absences at the neighborhood level. First, Figure 9 has the density function of the log of absent daily students per neighborhood. Next, the map in Figure 10 includes the average number of students enrolled per NTA. Figure 11 refers to the average share of annual absences, i.e., absences/enrollment.\n\nDensitySchool EnrollmentShare of Absences.\n\n\n\n\nShow the Code\n# Construct the data for the plot \nAbsentNta = left_join(absent |>  \n                        filter(DayType == \"NormalDay\") |> \n                        filter(absent < quantile(absent, 0.99, na.rm = T)), location) |>  \n  group_by(nta, ntacode,date) |> \n  summarise_at(vars(enrolled, absent, released), sum, na.rm = T) |> \n  filter(absent > 0)\n\n# Plot the time series\nggplot(AbsentNta) + \n  stat_halfeye(aes(x = log(absent)), height = .6,  justification = -.3, .width = 0, \n               point_colour = NA, fill = \"#141f52\") +\n  geom_point(aes(x = log(absent), y = 0), size = 0.2, alpha = .2, \n             position = position_jitter(seed = 1, height = 0.1), color = \"red\")+ \n   geom_boxplot(aes(x = log(absent)), width = .25, fill = \"transparent\", outlier.shape = NA) + \n  labs(y = \"\", x = \"Log of Absent Students\")  + theme_economist() %+replace%\n  theme(legend.title = element_blank(), plot.background = element_blank()) +\n  grids(\"y\")\n\n\n\n\n\nFigure 9: Density plot of school absences at the NTA level\n\n\n\n\n\n\n\n\nShow the Code\n# Construct the data for the plot \nmap = AbsentNta |> group_by(ntacode) |> \n  summarise(`Avg. Enrolled Students` = mean(enrolled, na.rm = T)) %>% \n  left_join(NtaShp, .)\n\n# Plot the map series\ntmap_style(\"classic\"); tm_graticules(labels.inside.frame = T, labels.show = F) +\n  tm_shape(map) +\n  tm_fill(col = \"Avg. Enrolled Students\", style = \"quantile\", n = 10,  \n          palette = \"RdBu\", colorNA = \"white\", textNA = \"No Data\")  +\n  tm_borders(lwd = 0.5) +\n  tm_compass(type = \"rose\", position = c(\"right\", \"top\"), size = 2) +\n  tm_scale_bar(width = 0.2, position = c(\"right\", \"bottom\"), text.size = 1)\n\n\n\n\n\nFigure 10: School enrollment per NTA\n\n\n\n\n\n\n\n\nShow the Code\n# Construct the data for the plot \nmap = AbsentNta |> group_by(ntacode) |> \n  summarise(`Share of Absences` = mean(absent, na.rm = T)/mean(enrolled, na.rm = T)) %>% left_join(NtaShp, .) |>  \n  mutate(`Share of Absences` = `Share of Absences`*100)\n\n# Plot the map series\ntmap_style(\"classic\"); tm_graticules(labels.inside.frame = T, labels.show = F) +\n  tm_shape(map) +\n  tm_fill(col = \"Share of Absences\", style = \"quantile\", n = 10,  \n          palette = \"RdBu\", colorNA = \"white\", textNA = \"No Data\")  +\n  tm_borders(lwd = 0.5) +\n  tm_compass(type = \"rose\", position = c(\"right\", \"top\"), size = 2) +\n  tm_scale_bar(width = 0.2, position = c(\"right\", \"bottom\"), text.size = 1)\n\n\n\n\n\nFigure 11: Share of absenteeism per NTA\n\n\n\n\n\n\n\n\n\n Air Quality Index\n\n\nShow the Code\n# Set the path of the R-studio project\nfile = gsub(\"AQAs_SchoolAbsences_NYC\", \"\", getwd())\naqif = read_rds(paste0(file, \"02_GenData/02_aqi/AqiForecast.rds\"))\naqi = read_rds(paste0(file, \"02_GenData/02_aqi/RealAqi.rds\"))\n\n\nTable 3 contains descriptive statistics on the AQI and its forecast. The average and maximum forecast is slightly smaller (50.39) than the AQI (54.36). The average AQI is 54.36, slightly above the EPA threshold between good and moderate air quality.\n\n\nShow the Code\n# Construct the data set for the summary table\ntab = left_join(filter(aqif, date < \"2018-12-31\", date > \"2008-12-31\"), aqi)\n# Summary table\nsumtable(select(ungroup(tab) ,aqi, RealAqi), \n         digits = 2, fixed.digits = T, \n         summ = c(\"mean(x)\", \"median(x)\", \"sd(x)\", \"min(x)\", \n                  \"max(x)\", \"notNA(x)\",\"countNA(x)\"), \n         summ.names = c(\"Mean\", \"Median\", \"SD\", \"Min\", \"Max\", \"N\", \"NAs\"), \n         labels = c(\"AQI Forecast\", \"AQI Real\"), out = \"kable\") %>%\n  kable_classic(full_width = F, html_font = \"Cambria\") %>% \n  kable_styling(bootstrap_option = c(\"hover\")) |> \n  column_spec(c(1), italic = T, color = \"DarkBlue\")\n\n\n\n\n\nTable 3:  Descriptive Statistics on the air quality index \n \n  \n    Variable \n    Mean \n    Median \n    SD \n    Min \n    Max \n    N \n    NAs \n  \n \n\n  \n    AQI Forecast \n    50.39 \n    48 \n    18.78 \n    4 \n    151 \n    3565 \n    0 \n  \n  \n    AQI Real \n    54.36 \n    51 \n    21.21 \n    16 \n    208 \n    3565 \n    0 \n  \n\n\n\n\n\n\nFigure 12 shows the average daily value of the forecast. Although there is no clear evidence of a long-term trend, seasonality does appear quite relevant for the time series. Summer (and to a lesser degree winter) forecasts are consistently higher than for the other seasons. Furthermore, the probability of forecasts higher than 100 units is also higher during the summer. For instance, out of 131 alerts, one hundred and five occurred during the summer, fourteen in the spring, eight in Autumn, and only four in the winter.\n\n\nShow the Code\n#### Construct the data for the plot \nplot = filter(aqif, date < \"2018-12-31\") |>  \n  mutate(season = hydroTSM::time2season(date, out.fmt = \"seasons\")) |> \n  mutate(season = str_to_title(season)) \n\n\n#### Plot the time series\nggplot(plot) + geom_bar(aes(x = date, y =aqi, fill = season), stat = \"identity\", alpha = 0.5) +\n  geom_hline(aes(yintercept = 100), color = \"red\") + \n  labs(y = \"Air Quality Index (Forecast)\", x = \"\") +\n  scale_fill_manual(values = c(\"Spring\" = \"#F97A1F\", \"Summer\" = \"#C91D42\", \n                               \"Winter\" = \"#475ED1\", \"Autumm\"  = \"#B3B3B3\")) +\n    theme_economist() %+replace% \n  theme(legend.title = element_blank(), plot.background = element_blank(),\n        axis.title.y = element_text(vjust = 2, angle = 90))  + grids(\"y\")\n\n\n\n\n\nFigure 12: Mean daily value of the AQI forecast between 2008 and 2018\n\n\n\n\nFigure 13 contains the average monthly, daily, and yearly value of forecast. Predicted values are significantly higher during the summer months of June to August and the Winter Months of December to January. While higher summer values are in line with higher ozone formation during the hotter months of the year because of the interaction of solar radiation with ozone precursors, higher winter measures relate to the lower efficiency of internal combustion engines at cold temperatures and the use of fossil fuels for residential heating. Even though the AQI value seems higher between 2008 and 2011 and lower after that, it is not straightforward to notice any long-term trend. Regarding weekday variation, there are slightly higher average values at the start of the week (Monday to Wednesday) and lower from Thursday to Sunday.\n\n\nShow the Code\n#\n# Construct the data for the plot \nplot = list(Yearly = filter(aqif, date < \"2018-12-31\") |>  \n  mutate(year = substr(year(date),3,4)) |> \n  group_by(frame = year) %>% summarise(aqi = mean(aqi, na.rm = T)), \n  \n  Monthly = filter(aqif, date < \"2018-12-31\") |>  \n  mutate(month = month(date, label = T)) |> \n  group_by(frame = month) %>% summarise(aqi = mean(aqi, na.rm = T)), \n  \n  Weekly = filter(aqif, date < \"2018-12-31\") |>  \n  mutate(weekday = weekdays(date, abbreviate = T)) |> \n  group_by(frame = weekday) %>% summarise(aqi = mean(aqi, na.rm = T))) %>% \n  \n  rbindlist(., idcol = \"window\")\n\n# Compute the deviation from the mean\nplot = plot |>  group_by(window) |> \n  mutate(change = ((aqi -mean(aqi))/mean(aqi))*100)\n\n# Plot the time series \nggplot(plot) + \n  geom_bar(aes(y = aqi, x = frame, group = 1), fill = \"#141f52\", stat = \"identity\") + \n  geom_point(aes(y = aqi, x = frame, group = 1), color = \"red\") + \n  \n  labs(x = \"\", y = \"Air Quality Index\") + facet_wrap(~window, scales = \"free\") +\n  \n  theme_economist()%+replace% \n  theme(legend.title = element_blank(), plot.background = element_blank(),\n        axis.title.y = element_text(vjust = 2, angle = 90), \n        strip.text = element_text(hjust = 0)) + grids(\"y\") \n\n\n\n\n\nFigure 13: Mean monthly value of the AQI forecast\n\n\n\n\nFigure 14 contains the density function of the AQI forecast. The forecasts appear normally distributed between zero and slightly before one hundred units. However, as we approach one hundred units, there is some clear bunching around the alert threshold, suggesting that the model used by the NYSDEC may work slightly differently when the forecast is in the neighborhood of the alert. In the empirical strategy, we exploit this bunching to identify the effects of the alert on school absences.\n\n\nShow the Code\n# Plot the time series \nggplot(aqif) +  \n  ggdist::stat_halfeye(aes(x = aqi), height = .6,  \n                       justification = -.3,.width = 0, point_colour = NA, fill = \"#141f52\") +\n  geom_point(aes(x = aqi, y = 0), size = 0.2, alpha = .2, \n             position = position_jitter(seed = 1, height = 0.1), color = \"red\") +\n  geom_boxplot(aes(x = aqi), width = .15, fill = \"transparent\", outlier.shape = NA, color = \"black\") +\n  \n  coord_cartesian(ylim = c(-0.1, 0.8)) + theme_economist() %+replace% \n  theme(legend.title = element_blank(), axis.title.y = element_text(vjust = 2, angle = 90), \n        plot.background = element_blank()) + grids(\"y\") + \n  labs(x = \"average AQI forecast\", y = \"\")\n\n\n\n\n\nFigure 14: Distribution of the AQI forecast\n\n\n\n\nFigure 15 contains the time series (left panel) and density distribution (right panel) of average mean daily differences between the predicted and actual AQI. With a maximum difference of 56 and a minimum of -92 AQI units there appear to be relevant differences between both time series. These differences aggregate to an average between both variables of -3.9 with a standard deviation of 15.17 units.\n\n\nShow the Code\n#### Data for plotting daily differences between the AQI and the forecast ####\nplot = filter(aqif, date < \"2018-12-31\") |>  \n  mutate(season = hydroTSM::time2season(date, out.fmt = \"seasons\")) |> \n  mutate(season = str_to_title(season)) %>% left_join(., aqi) |> \n  mutate(diff = aqi-RealAqi)\n\n#### Time series of differences\nggplot(plot) + geom_bar(aes(x = date, y =diff, fill = season), stat = \"identity\", alpha = 0.5) +\n  labs(y = \"Differences between the AQI and its forecast\", x = \"\") +\n  scale_fill_manual(values = c(\"Spring\" = \"#F97A1F\", \"Summer\" = \"#C91D42\", \n                               \"Winter\" = \"#475ED1\", \"Autumn\"  = \"#B3B3B3\")) +\n  theme_economist() %+replace% \n  theme(legend.title = element_blank(), axis.title.y = element_text(vjust = 2, angle = 90), \n        plot.background = element_blank()) + grids(\"y\")\n\n#### Plot the density distribution of differences ####\nggplot(plot) +  \n  stat_halfeye(aes(x = diff), height = .6,justification = -.3,\n               .width = 0, point_colour = NA, fill = \"#141F52\") +\n  geom_point(aes(x = diff, y = 0), size = 0.2, alpha = .1, \n             position = position_jitter(seed = 1, height = 0.1), color = \"red\") +\n  geom_boxplot(aes(x = diff), width = .15, fill = \"transparent\", outlier.shape = NA, color = \"black\") +\n  \n   coord_cartesian(ylim = c(-0.1, 0.8)) + labs(x = \"Difference between the AQI and its forecast\", y = \"\") +\n  \n  theme_economist() %+replace% \n  theme(legend.title = element_blank(), axis.title.y = element_text(vjust = 2, angle = 90), plot.background = element_blank()) +\n  grids(\"y\")\n\n\n\n\n\n\n\n\n(a) Time Series\n\n\n\n\n\n\n\n(b) Density\n\n\n\n\nFigure 15: Mean daily difference of the AQI and its forecast between 2008 and 2018\n\n\n\nFigure 16 portrays the average yearly, monthly, and weekday value of the AQI measure and its forecasts. The ability of the NYSDEC to predict the AQI increased between 2008 and 2017. With a mean difference in 2008 of close to four units and for 2018 of less than 0.5. It is interesting to see that the difference is lower during the summer months of June to August and higher at the start of the year between January and April. Regarding weekday differences, although the value of the AQI is consistently higher than its forecast, I cannot distinguish any pattern in the difference betweeen both time series.\n\n\nShow the Code\n#### Yearly Differences ####\nplot = filter(aqif, date < \"2018-12-31\") |>  \n  mutate(year = year(date)) %>% left_join(., aqi) |> \n  group_by(frame = year) %>% \n  summarise(`AQI Forecast` = mean(aqi, na.rm = T), `AQI Measure` = mean(RealAqi, na.rm = T)) %>% \n  gather(., var, value, -frame)\n\n\n#### Plot it ####\nggplot(plot) + geom_line(aes(y = value, x = frame, group = var, linetype = var)) + \n  geom_point(aes(y = value, x = frame, group = 1, color = var)) + \n  \n  labs(x = \"\", y = \"\") + \n  scale_color_manual(values = c(\"#141F52\", \"#c91d42\")) +\n  scale_x_continuous(breaks = pretty_breaks()) +\n  \n    theme_economist()%+replace% \n  theme(legend.title = element_blank(), plot.background = element_blank(),\n        axis.title.y = element_text(vjust = 2, angle = 90)) + \n  grids(\"y\")\n\n#### Monthly time series ####\nplot = filter(aqif, date < \"2018-12-31\") |>  \n  mutate(month = month(date, label = T)) %>% left_join(., aqi) |> \n  group_by(frame = month) %>% \n  summarise(`AQI Forecast` = mean(aqi, na.rm = T), `AQI Measure` = mean(RealAqi, na.rm = T)) %>% \n  gather(., var, value, -frame)\n\n\n#### Plot it ####\nggplot(plot) + geom_line(aes(y = value, x = frame, group = var, linetype = var)) + \n  geom_point(aes(y = value, x = frame, group = 1, color = var)) + \n  \n  \n  labs(x = \"\", y = \"\") + \n  scale_color_manual(values = c(\"#141F52\", \"#c91d42\")) +\n  \n        theme_economist()%+replace% \n  theme(legend.title = element_blank(), plot.background = element_blank(),\n        axis.title.y = element_text(vjust = 2, angle = 90)) + \n  grids(\"y\")\n\n\n#### Weekday differences ####\nplot = filter(aqif, date < \"2018-12-31\") |>  \n  mutate(weekday = weekdays(date)) %>% left_join(., aqi) |> \n  group_by(frame = weekday) %>% \n  summarise(`AQI Forecast` = mean(aqi, na.rm = T), `AQI Measure` = mean(RealAqi, na.rm = T)) %>% \n  gather(., var, value, -frame) %>% \n  mutate(frame = as_factor(frame)) |> \n  mutate(frame = fct_relevel(frame, c(\"Sunday\", \"Monday\", \"Tuesday\", \n                                      \"Wednesday\", \"Thursday\", \"Friday\", \n                                      \"Saturday\")))\n\n\n#### Plot it ####\nggplot(plot) + geom_line(aes(y = value, x = frame, group = var, linetype = var)) + \n  geom_point(aes(y = value, x = frame, group = 1, color = var)) +\n  \n  labs(x = \"\", y = \"\") + \n  scale_color_manual(values = c(\"#141F52\", \"#c91d42\")) +\n  \n      theme_economist()%+replace% \n  theme(legend.title = element_blank(), plot.background = element_blank(),\n        axis.title.y = element_text(vjust = 2, angle = 90)) + \n  grids(\"y\")\n\n\n\n\n\n\n\n\n(a) Monthly\n\n\n\n\n\n\n\n(b) Weekly\n\n\n\n\n\n\n\n(c) Yearly\n\n\n\n\nFigure 16: Mean difference in the AQI and its forecast\n\n\n\nFigure 17 contains the density distributions of the real and forecasted AQIs. Two things stand out. First, the AQI forecast has more density around its median and a smaller tail; second, there is a clear difference in the bunching of the forecast around 100 units.\n\n\nShow the Code\nplot = filter(aqif, date < \"2018-12-31\") |>  \n  mutate(weekday = weekdays(date)) %>% left_join(., aqi) %>% \n  select(date, `AQI Forecast` = aqi, `AQI Measure` = RealAqi) %>%\n  gather(., var, value, -date)\n\n\n# Plot the time series \nggplot(plot) +  ggdist::stat_halfeye(aes(x = value, fill = var), height = .6,  \n                       justification = -.3,.width = 0, point_colour = NA, alpha = 0.5) +\n  geom_boxplot(aes(x = value, color = var), width = .25, fill = \"transparent\", outlier.shape = NA) +\n   coord_cartesian(ylim = c(-0.1, 0.8))  + \n  labs(x = \"\", y = \"\") +\n  scale_fill_manual(values = c(\"#141F52\", \"#c91d42\")) +\n  scale_color_manual(values = c(\"#141F52\", \"#c91d42\")) +\n  \n  theme_economist() %+replace% \n  theme(legend.title = element_blank(), plot.background = element_blank(),\n        axis.title.x = element_text(vjust = -2)) + grids(\"y\")\n\n\n\n\n\nFigure 17: Density functions of the real and forecasted AQI values"
  }
]