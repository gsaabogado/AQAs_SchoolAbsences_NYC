---
title: "SchoolAbsences"
format: 
  html: 
    toc: true
    warning: false
    code-fold: true
    code-summary: "Show the Code"
---

## Descriptive Statistics

### School Absences and Demographics

#### Load the necessary data

```{r}
#| warning: false
# Set the path of the R-studio project
file = "~/Dropbox (Personal)/DIW/NYC school absenses/"
# Load the economic covariates at the Nta level
econ = read_rds(paste0(file, "02_GenData/03_dem/econ.rds"))
dem = read_rds(paste0(file, "02_GenData/03_dem/dem.rds"))
asthma = read_rds(paste0(file, "02_GenData/03_dem/AsthmaHosp.rds"))
# Load the location of all schools
location = read_rds(paste0(file, "02_GenData/01_schools/location.rds"))
# Load the data set on absenteeism
absent = read_rds(paste0(file, "02_GenData/RawAbsences.rds"))
NtaAbsent = left_join(absent |> filter(DayType == "NormalDay"), location) |>  group_by(nta, date) |> 
  summarise_at(vars(enrolled, absent, released), sum, na.rm = T)
# Load the shapefile of city boroughs
BoroShp = st_read(paste0(file, "01_RawData/04_shp/02_bgh"), quiet = T)%>% st_transform(., crs = 4326) %>% st_simplify(., preserveTopology = T)
# Load the shapefile on city neighborhoods
NtaShp = st_read(paste0(file, "01_RawData/04_shp/03_ngh"), quiet = T)%>% st_transform(., crs = 4326) %>% st_simplify(., preserveTopology = T)
```

The following set of maps describe the spatial distribution of schools, income, race, and asthma-related hospitalizations in NYC.

::: panel-tabset
## Schools in NYC

```{r}
#| label: fig-SchoolsMap
#| fig-cap: Schools over New York City
#| fig-cap-location: top
#| echo: true
# Create the plot data
# Simplify the shapefile
BoroShp  = st_transform(BoroShp, crs = 4326) %>% 
  st_simplify(., preserveTopology = T)
# Transform the locations data frame into a spatial object
location = st_as_sf(location, coords = c("lon", "lat"), crs = 4326)
# Plot the map of schools in New York
tmap_style("classic"); tm_graticules(labels.inside.frame = T, labels.show = F) +
  tm_shape(BoroShp) + tm_polygons()  + tm_shape(location) +
  tm_dots(size = 0.025, col = "SchoolType", palette = "Dark2", title = "Type of School") + 
  tm_compass(type = "rose", position = c("right", "top"), size = 2) +
  tm_scale_bar(width = 0.2, position = c("right", "bottom"), text.size = 1)
```

## Income

```{r}
#| label: fig-IncomeMap
#| fig-cap: Average Income across NYC neighborhoods
#| fig-cap-location: top
#| echo: true
# Create the plot data
# Simplify the shapefile
plot  = left_join(NtaShp, econ |>  mutate(MedianIncome = MedianIncome/1000))
# Plot the map of schools in New York
tmap_style("classic"); tm_graticules(labels.inside.frame = T, labels.show = F) +
  tm_shape(plot) +
  tm_fill(col = "MedianIncome", style = "quantile", n = 10, 
          title = "Median Income (Ths.)",  
          palette = "RdBu", colorNA = "black", textNA = "No Data")  +
  tm_borders(lwd = 0.5) +
  tm_compass(type = "rose", position = c("right", "top"), size = 2) +
  tm_scale_bar(width = 0.2, position = c("right", "bottom"), text.size = 1)
```

## Share of whites

```{r}
#| label: fig-WhiteShare
#| fig-cap: Share of white persons per neighborhood
#| fig-cap-location: top
#| echo: true
# Create the plot data
# Simplify the shapefile
plot  = left_join(NtaShp, dem)
# Plot the map of schools in New York
tmap_style("classic"); tm_graticules(labels.inside.frame = T, labels.show = F) +
  tm_shape(plot) +
  tm_fill(col = "ShareWhite", style = "quantile", n = 10,
          title = str_wrap("Share of Persons Identifying as White", width = 25),
          palette = "RdBu", colorNA = "black", textNA = "No Data")  +
  tm_borders(lwd = 0.5) +
  tm_compass(type = "rose", position = c("right", "top"), size = 2) +
  tm_scale_bar(width = 0.2, position = c("right", "bottom"), text.size = 1)
```

## Asthma Hosp. Rate

```{r}
#| label: fig-AsthmaMap
#| fig-cap: Children hospitalization rate per neighborhood
#| fig-cap-location: top
#| echo: true
# Create the plot data
# Simplify the shapefile
plot  = left_join(NtaShp, asthma)
# Plot the map of schools in New York
tmap_style("classic"); tm_graticules(labels.inside.frame = T, labels.show = F) +
  tm_shape(plot) +
  tm_fill(col = "HospChildrenRate", style = "quantile", n = 10,  
          title = str_wrap("Children Hospitalization Rate (Cases per 10,000 Kids)", width = 30),
          palette = "RdBu", colorNA = "black", textNA = "No Data")  +
  tm_borders(lwd = 0.5) +
  tm_compass(type = "rose", position = c("right", "top"), size = 2) +
  tm_scale_bar(width = 0.2, position = c("right", "bottom"), text.size = 1)
```
:::

@fig-SchoolsMap shows the location of all schools by type. Schools spread around the city, with significant clusters in South Bronx, North Manhattan, and Brooklyn. In Staten Island and Queens, the distance between schools is more prominent than in the Bronx and Manhattan. The data set contains `r comma(nrow(filter(location, SchoolType == "Elementary")))` elementary schools, `r comma(nrow(filter(location, SchoolType == "High school")))` high schools, `r comma(nrow(filter(location, SchoolType == "Junior High")))` junior high schools, `r comma(nrow(filter(location, SchoolType == "K-8")))` kindergarten to eighth-grade schools (K8), `r comma(nrow(filter(location, SchoolType == "Secondary School")))` secondaries, `r comma(nrow(filter(location, SchoolType == "K-12 all grades")))` kindergarten to twelfth-grade schools (K12), `r comma(nrow(filter(location, SchoolType == "Ungraded")))` early childhood, and two ungraded.

@fig-IncomeMap portrays the median neighborhood income in 2016 according to the American Community Survey. As expected, we can find the city's wealthier areas in Manhattan, Staten Island, and West Brooklyn, with more impoverished areas in the South Bronx and East Brooklyn. In @fig-WhiteShare, the strong correlation between income and the share of white persons in each neighborhood is evident, with higher shares of white persons in Manhattan and Staten Island and lower shares in the Bronx, Queens, and Brooklyn. Finally, @fig-AsthmaMap contains the share of children hospitalization per 10,000 kids across all city areas. Again, there is a strong relationship between asthma hospitalizations and income, with higher hospitalization rates in the Bronx and North-Central Brooklyn and lower in Staten Island and Manhattan

@tbl-DescAbsent contains descriptive statistics on absent, released, and enrolled students. In total, we have `r comma(nrow(absent))` observations across `r comma(length(unique(absent$id)))` schools. There are `r comma(mean(absent$absent, na.rm = T))` average daily absences per school in the city of New York. This is equivalent to around `r percent((mean(absent$absent, na.rm = T)/mean(absent$enrolled, na.rm = T)), accuracy = 0.01)` of enrolled students. The absences have a median of `r comma(median(absent$absent, na.rm = T))` and a standard deviation of `r comma(sd(absent$absent, na.rm = T))`. Concerning released students, `r comma(mean(absent$released, na.rm = T))` (`r percent((mean(absent$released, na.rm = T)/mean(absent$enrolled, na.rm = T)), accuracy = 0.01)`) students are released from school on an average day. Additionally, and in line with an over-dispersed Poisson distribution, releases have a median of `r comma(median(absent$released, na.rm = T))` and a standard deviation of `r comma(sd(absent$released, na.rm = T))` pupils per day.

```{r}
#| label: tbl-DescAbsent
#| tbl-cap: Descriptive Statistics on School Absences
#| tbl-cap-location: top
#| echo: true
# Show the data set
sumtable(select(absent, absent, released, enrolled), 
         digits = 2, fixed.digits = T, 
         summ = c("mean(x)", "median(x)", "sd(x)", "min(x)", 
                  "max(x)", "notNA(x)","countNA(x)"), 
         summ.names = c("Mean", "Median", "SD", "Min", "Max", "N", "NAs"), 
         labels = c("Absent Students", "Released Students", "Enrolled Students"))
```

The following tab-set contains a series of different descriptive figures regarding the data on school absences. First, @fig-SchoolCount shows the number of schools per year reporting school absences to the education department. Between 2008 and 2018, the number of reporting schools moved from a minimum of 1,545 in 2008 to a maximum of 1,659 in 2016. There are 1,365 schools in the data set that reported absenteeism for all years between 2008 and 2018. Although we use the entire sample in the regression analysis, we provide evidence that our results are robust to only focusing on the set of schools that never drop the panel.

::: panel-tabset
## Schools Per Year

```{r}
#| label: fig-SchoolCount
#| fig-cap: Number of reporting schools
#| fig-cap-location: top
#| echo: true

# Number of schools reporting absences per year
absent |>  filter(DayType == "NormalDay") |>  
  group_by(year) |> summarise(Schools = length(unique(id))) |>  
  filter(year > 2007) |> mutate(year = as_factor(year)) %>% ggplot() + 
   geom_line(aes(x = year, y= Schools, group = 1), size = 0.75) +
  geom_point(aes(x = year, y= Schools), color = "red") +
  theme_economist() %+replace% 
  theme(legend.title = element_blank())  + 
  labs(y = "", x = "Year")
```

## Density of Absences

```{r}
#| label: fig-SchoolLevelDensity
#| fig-cap: Density distribution of School Absences
#| fig-cap-location: top
#| echo: true

#  Create the plot
plot = absent |>  filter(DayType == "NormalDay") |> filter(absent < quantile(absent, 0.99, na.rm = T)) |> group_by(date) |> 
  summarise(absent = mean(absent, na.rm = T))
# Construct the ggplot
ggplot(plot) + 
  ggdist::stat_halfeye(aes(x = absent), height = .6,  justification = -.3,
                       .width = 0, point_colour = NA, fill = "#141f52") +
  geom_point(aes(x = absent, y = 0), size = 0.2, alpha = .2, position = position_jitter(seed = 1, height = 0.1), color = "red")+ 
   geom_boxplot(aes(x = absent), width = .25, 
                fill = "transparent", outlier.shape = NA) + 
  theme_economist()  %+replace% 
  theme( axis.title.x = element_text(vjust = -2)) +
  labs(y = "", x = "Absent Students") 
  
```

## Time Series of Absences

```{r}
#| label: fig-TimeSeriesAbsences
#| fig-cap: Time Series of Daily School Absences
#| fig-cap-location: top
#| echo: true
plot = absent |>  filter(DayType == "NormalDay") |> filter(absent < quantile(absent, 0.99, na.rm = T)) |> group_by(date, year) |>  summarise(absent = mean(absent)) |> ungroup() |> 
  mutate(RollMean = rollmean(absent, k = 5, fill = NA))

ggplot(plot) + 
  geom_bar(aes(x = date, y = absent, fill = as_factor(year)), size = 0.05, stat = "identity") + 
  theme_economist()  %+replace% 
  theme(legend.title = element_blank(), legend.position = "bottom") + 
  labs(y = "Mean Absences", x = "Date") + guides(fill = "none")
```

## Monthly Variation

```{r}
#| label: fig-MonthlyTS
#| fig-cap: Monthly Variation in School Absences
#| fig-cap-location: top
#| echo: true
# Construct the data for the plot 
plot = absent |>  filter(DayType == "NormalDay") |> 
           filter(absent < quantile(absent, 0.99, na.rm = T)) |> 
           mutate(month = month(date, label = T)) |> 
           group_by(ts = month) |>  summarise(absent = mean(absent, na.rm = T)) 
        
# Plot the time series
ggplot(plot) + geom_line(aes(x = ts, y = absent, group = 1)) + 
  geom_point(aes(x = ts, y = absent, group = 1), color = "red") +
  theme_economist()  %+replace% 
  theme(legend.title = element_blank(), strip.text = element_text(hjust = 0)) + 
  labs(y = "Mean Absences", x = "") + guides(fill = "none")

```

## Weekday Variation

```{r}
#| label: fig-WeeklyTS
#| fig-cap: Weekday Variation in School Absences
#| fig-cap-location: top
#| echo: true
# Construct the data for the plot 
plot = absent |>  filter(DayType == "NormalDay") |> 
           filter(absent < quantile(absent, 0.99, na.rm = T)) |> 
           mutate(weekday = substr(weekday, 1,2)) |> 
           group_by(ts = weekday) |>  summarise(absent = mean(absent, na.rm = T)) 
        
# Plot the time series
ggplot(plot) + geom_line(aes(x = ts, y = absent, group = 1)) + 
  geom_point(aes(x = ts, y = absent, group = 1), color = "red") +
  theme_economist()  %+replace% 
  theme(legend.title = element_blank(), strip.text = element_text(hjust = 0)) + 
  labs(y = "Mean Absences", x = "") + guides(fill = "none")

```
:::

@fig-SchoolLevelDensity portrays the density function of school absences at the school level. As expected, the distribution of absences resembles a gamma probability density function with most of the density between zero and one-hundred units, following @fig-TimeSeriesAbsences plots the time series of school absences. In it, each bar represents a day between 2006 and 2018. The breaks in the time series refer to the summer and winter breaks. Overall, it is reassuring to see no extreme changes in average school absences across our sample period. Note that extreme jumps in the number of absent students often coincide with weather events. For instance, the significant increase in 2014 refers to the 2014 nor'easter and in 2012 to intense snowfall.

In @fig-MonthlyTS, we portray the average value of school absences across months of the year. The first thing to notice is a significant increase in absences for the month before the summer holidays. Additionally, absences appear to be higher during the winter months of December to February because of weather conditions and seasonal influenza. Regarding variation within weeks (@fig-WeeklyTS). There are higher absences on Fridays and Mondays and lower throughout the rest of the week.

Throughout the study, we aggregate the school-level data into neighborhood averages for three main reasons. First, aggregating data reduces the noise stemming from school-specific miss-recordings and human error; second, it is easier to match socio-demographic data from the American Community Survey; and third, it decreases the computational burden of our empirical strategy.

@tbl-DescAbsentNta contains descriptive statistics on school absences at the neighborhood level. The NTA data contains `r comma(nrow(NtaAbsent))` observations across `r comma(length(unique(NtaAbsent$ntacode)))` neighbourhoods. On average, there are `r comma(mean(NtaAbsent$absent, na.rm = T))` absences per day, equivalent to around `r percent((mean(NtaAbsent$absent, na.rm = T)/mean(NtaAbsent$enrolled, na.rm = T)), accuracy = 0.01)` of enrolled students. The absences have a median of `r comma(median(NtaAbsent$absent, na.rm = T))` and a standard deviation of `r comma(sd(NtaAbsent$absent, na.rm = T))`. Concerning released students, `r comma(mean(NtaAbsent$released, na.rm = T))` (`r percent((mean(NtaAbsent$released, na.rm = T)/mean(NtaAbsent$enrolled, na.rm = T)), accuracy = 0.01)`) students are released from school on an average day.

The next set of figures contains different descriptive statistics of school absences at the neighborhood level. First, @fig-NtaDensity contains the density function of the log of absent daily students per neighborhood. Next, the map in @fig-EnrollmentMap includes the average number of students enrolled per NTA. 
@fig-AbsencesMap refers to the average share of annual absences, i.e., absences/enrollment. Finally, @fig-ReleasedMap presents an analogous map for the share of releases.


```{r}
#| label: tbl-DescAbsentNta
#| tbl-cap: Descriptive Statistics on School Absences at the neighborhood level
#| tbl-cap-location: top
#| echo: true
# Show the data set
tab = left_join(absent |> filter(DayType == "NormalDay"), location) |>  group_by(nta, date) |> 
  summarise_at(vars(enrolled, absent, released), sum, na.rm = T)


sumtable(select(ungroup(tab) ,absent, released, enrolled), 
         digits = 2, fixed.digits = T, 
         summ = c("mean(x)", "median(x)", "sd(x)", "min(x)", 
                  "max(x)", "notNA(x)","countNA(x)"), 
         summ.names = c("Mean", "Median", "SD", "Min", "Max", "N", "NAs"), 
         labels = c("Absent Students", "Released Students", "Enrolled Students"))
```

::: panel-tabset
## Density

```{r}
#| label: fig-NtaDensity
#| fig-cap: Density plot of school absences at the NTA level
#| fig-cap-location: top
#| echo: true
# Construct the data for the plot 
AbsentNta = left_join(absent |>  
                        filter(DayType == "NormalDay") |> 
                        filter(absent < quantile(absent, 0.99, na.rm = T)), location) |>  
  group_by(nta, ntacode,date) |> 
  summarise_at(vars(enrolled, absent, released), sum, na.rm = T) |> 
  filter(absent > 0)

# Plot the time series
ggplot(AbsentNta) + 
  stat_halfeye(aes(x = log(absent)), height = .6,  justification = -.3, .width = 0, 
               point_colour = NA, fill = "#141f52") +
  geom_point(aes(x = log(absent), y = 0), size = 0.2, alpha = .2, 
             position = position_jitter(seed = 1, height = 0.1), color = "red")+ 
   geom_boxplot(aes(x = log(absent)), width = .25, fill = "transparent", outlier.shape = NA) + 
  theme_economist()  %+replace% 
  theme( axis.title.x = element_text(vjust = -2)) +
  labs(y = "", x = "Log of Absent Students") 

```

## School Enrollment

```{r}
#| label: fig-EnrollmentMap
#| fig-cap: School enrollment per NTA
#| fig-cap-location: top
#| echo: true
# Construct the data for the plot 
map = AbsentNta |> group_by(ntacode) |> 
  summarise(`Avg. Enrolled Students` = mean(enrolled, na.rm = T)) %>% 
  left_join(NtaShp, .)

# Plot the map series
tmap_style("classic"); tm_graticules(labels.inside.frame = T, labels.show = F) +
  tm_shape(map) +
  tm_fill(col = "Avg. Enrolled Students", style = "quantile", n = 10,  
          palette = "RdBu", colorNA = "white", textNA = "No Data")  +
  tm_borders(lwd = 0.5) +
  tm_compass(type = "rose", position = c("right", "top"), size = 2) +
  tm_scale_bar(width = 0.2, position = c("right", "bottom"), text.size = 1)
```

## Share of Absences.

```{r}
#| label: fig-AbsencesMap
#| fig-cap: Share of absenteeism per NTA
#| fig-cap-location: top
#| echo: true
# Construct the data for the plot 
map = AbsentNta |> group_by(ntacode) |> 
  summarise(`Share of Absences` = mean(absent, na.rm = T)/mean(enrolled, na.rm = T)) %>% left_join(NtaShp, .) |>  
  mutate(`Share of Absences` = `Share of Absences`*100)

# Plot the map series
tmap_style("classic"); tm_graticules(labels.inside.frame = T, labels.show = F) +
  tm_shape(map) +
  tm_fill(col = "Share of Absences", style = "quantile", n = 10,  
          palette = "RdBu", colorNA = "white", textNA = "No Data")  +
  tm_borders(lwd = 0.5) +
  tm_compass(type = "rose", position = c("right", "top"), size = 2) +
  tm_scale_bar(width = 0.2, position = c("right", "bottom"), text.size = 1)
```

## Share of Released

```{r}
#| label: fig-ReleasedMap
#| fig-cap: Share of releases per NTA
#| fig-cap-location: top
#| echo: true
# Construct the data for the plot 
map = AbsentNta |> group_by(ntacode) |> 
  summarise(`Share of Releases` = mean(released, na.rm = T)/mean(enrolled, na.tm = T)) %>% left_join(NtaShp, .)  |> 
  mutate(`Share of Releases` = `Share of Releases`*100)

# Plot the map series
tmap_style("classic"); tm_graticules(labels.inside.frame = T, labels.show = F) +
  tm_shape(map) +
  tm_fill(col = "Share of Releases", style = "quantile", n = 10,  
          palette = "RdBu", colorNA = "white", textNA = "No Data")  +
  tm_borders(lwd = 0.5) +
  tm_compass(type = "rose", position = c("right", "top"), size = 2) +
  tm_scale_bar(width = 0.2, position = c("right", "bottom"), text.size = 1)
```
:::

### Descriptives on the AQI forecast

#### Load the data on the AQI

```{r}
aqif = read_rds(paste0(file, "02_GenData/02_aqi/AqiForecast.rds"))
aqi = read_rds(paste0(file, "02_GenData/02_aqi/RealAqi.rds"))
```

@tbl-DescAqi contains descriptive statistics on the real and forecasted AQI. The average forecast is slightly smaller (with a minor standard deviation) than the real AQI. The average reported AQI is 54.36, slightly above the EPA threshold between good and moderate air quality. Moreover, the maximum value of the forecasted AQI (151) is also smaller than the maximum of the Real AQI, implying that the difference between both measures could go beyond average values and standard deviations.

```{r}
#| label: tbl-DescAqi
#| tbl-cap: Descriptive Statistics on the air quality index
#| tbl-cap-location: top
#| echo: true
# Construct the data set for the summary table
tab = left_join(filter(aqif, date < "2018-12-31", date > "2008-12-31"), aqi)
# Summary table
sumtable(select(ungroup(tab) ,aqi, RealAqi), 
         digits = 2, fixed.digits = T, 
         summ = c("mean(x)", "median(x)", "sd(x)", "min(x)", 
                  "max(x)", "notNA(x)","countNA(x)"), 
         summ.names = c("Mean", "Median", "SD", "Min", "Max", "N", "NAs"), 
         labels = c("AQI Forecast", "AQI Real"))
```

@fig-AqiForecastTs shows the average daily value of the AQI forecast within our sample period. Although there is no clear evidence of a long term trend in the value of the AQI, seasonality does appear quite relevant for the time series. Summer (and to a lesser degree winter) forecasts of the AQI are consistently higher than for the other seasons. Furthermore, the probability of forecasts higher than 100 units is also higher during the summer. For instance, out of 131 alerts, 105 occurred during the summer, fourteen in the spring, eight in Autumn, and only four throughout the Winter months.



::: panel-tabset
## Time Series

```{r}
#| label: fig-AqiForecastTs
#| fig-cap: Mean daily value of the AQI forecast between 2008 and 2018
#| fig-cap-location: top
#| echo: true
# Construct the data for the plot 
# Create the data for the plot
plot = filter(aqif, date < "2018-12-31") |>  
  mutate(season = hydroTSM::time2season(date, out.fmt = "seasons")) |> 
  mutate(season = str_to_title(season)) 



ggplot(plot) + geom_bar(aes(x = date, y =aqi, fill = season), stat = "identity", alpha = 0.5) +
  geom_hline(aes(yintercept = 100), color = "red") + labs(y = "Air Quality Index (Forecast)", x = "") +
  theme_economist() %+replace% 
  theme(legend.title = element_blank(), axis.title.y = element_text(vjust = 2, angle = 90)) +
  scale_fill_manual(values = c("Spring" = "#F97A1F", "Summer" = "#C91D42", 
                               "Winter" = "#475ED1", "Autumn"  = "#B3B3B3"))
```

## Monthly Var

```{r}
#| label: fig-AqiForecastMonthly
#| fig-cap: Mean monthly value of the AQI forecast
#| fig-cap-location: top
#| echo: true
# Construct the data for the plot 
plot = filter(aqif, date < "2018-12-31") |>  
  mutate(year = year(date), month = month(date, label = T), weekday = weekdays(date, abbreviate = T)) |> 
  group_by(frame = month) %>% summarise(aqi = mean(aqi, na.rm = T))


# Plot the time series 
ggplot(plot) + geom_line(aes(y = aqi, x = frame, group = 1)) + 
  geom_point(aes(y = aqi, x = frame, group = 1), color = "red") + 
  theme_economist()%+replace% 
  theme(legend.title = element_blank(), axis.title.y = element_text(vjust = 2, angle = 90)) + 
  labs(x = "", y = "Average AQI forecast")
```

## Yearly Var

```{r}
#| label: fig-AqiForecastYearly
#| fig-cap: Mean yearly value of the AQI forecast
#| fig-cap-location: top
#| echo: true
# Create the data for the plot
plot = filter(aqif, date < "2018-12-31") |>  
  mutate(year = year(date), month = month(date, label = T), weekday = weekdays(date, abbreviate = T)) |> 
  group_by(frame = year) %>% summarise(aqi = mean(aqi, na.rm = T)) |> mutate(frame = as_factor(frame))

# Plot the time series 
ggplot(plot) + geom_segment(aes(y = aqi, x = frame, xend = frame, yend = 45, group = 1), lwd = 3) + 
  geom_point(aes(y = aqi, x = frame, group = 1), color = "red", size = 4) + 
  theme_economist()%+replace% 
  theme(legend.title = element_blank(), axis.title.y = element_text(vjust = 2, angle = 90)) +
  labs(y = "Avg. Air Quality Index Forecast", x = "")
```

## Weekday var

```{r}
#| label: fig-AqiForecastWeekday
#| fig-cap: Mean weekday value of the AQI forecast
#| fig-cap-location: top
#| echo: true
# Create the data for the plot
plot = filter(aqif, date < "2018-12-31") |>  
  mutate(year = year(date), month = month(date, label = T), weekday = weekdays(date, abbreviate = T)) |> 
  group_by(frame = weekday) %>% summarise(aqi = mean(aqi, na.rm = T)) |> 
  mutate(frame = factor(frame, levels = c("Sun", "Mon", "Tue", "Wed","Thu", "Fri", "Sat")))


# Plot the time series 
ggplot(plot) + geom_line(aes(y = aqi, x = frame, group = 1)) + 
  geom_point(aes(y = aqi, x = frame, group = 1), color = "red") + 
  theme_economist()%+replace% 
  theme(legend.title = element_blank(), axis.title.y = element_text(vjust = 2, angle = 90)) + 
  labs(x = "", y = "Average AQI forecast")
```

## Density distribution

```{r}
#| label: fig-AqiForecastDensity
#| fig-cap: Distribution of the AQI forecast
#| fig-cap-location: top
#| echo: true
# Plot the time series 
ggplot(aqif) +  ggdist::stat_halfeye(aes(x = aqi), height = .6,  
                       justification = -.3,.width = 0, point_colour = NA, fill = "#141f52") +
  geom_point(aes(x = aqi, y = 0), size = 0.2, alpha = .2, position = position_jitter(seed = 1, height = 0.1), color = "red") +
  geom_boxplot(aes(x = aqi), width = .15, fill = "transparent", outlier.shape = NA, color = "black") +
   coord_cartesian(ylim = c(-0.1, 0.8)) + theme_economist() %+replace% 
  theme(legend.title = element_blank(), axis.title.y = element_text(vjust = 2, angle = 90)) + 
  labs(x = "average AQI forecast", y = "")
```
:::

With this in mind, @fig-AqiForecastMonthly contains the average monthly value of the forecasted AQI. As expected, forecast values are significantly higher during the summer months of June to August and the Winter Months of December to January. Higher summer values are in line with higher ozone formation during the hotter months of the year because of the interaction of solar radiations with ozone precursors, while higher winter measures relate to the lower efficiency of internal combustion engines at cold temperatures and the use of fossil fuels for residential heating.

Next, @fig-AqiForecastYearly and @fig-AqiForecastWeekday contain the average yearly and weekday values of the AQI forecast. Even though the AQI value seems higher between 2008 and 2011 and lower after that, it is not straightforward to notice any long-term trend. Regarding weekday variation, there are slightly higher average values at the start of the week (Monday to Wednesday) and lower from Thursday to Sunday.

Finally, @fig-AqiForecastDensity contains the density function of the AQI forecast. The forecasts appear normally distributed between zero and slightly before one hundred units. However, as we approach one hundred units, there is some clear bunching around the alert threshold, suggesting that the model used by the NYSDEC may work slightly differently when the forecast is in the neighborhood of the alert. In the empirical strategy, we exploit this bunching to identify the effects of the alert on school absences.

The following figures compare the forecasted and real AQIs. @fig-AqiDifferencetTs contains the time series of average mean daily differences between the forecasted and real AQIs. There appear to be relevant differences between both time series, with a maximum difference of 56 and a minimum of -92 AQI units. These differences aggregate to an average difference between both variables of -3.9 with a standard deviation of 15.17 units. @fig-AqiDifferenceDensity further includes the density plot of the difference between the real and forecasted AQIs.



::: panel-tabset
## Daily Differences

```{r}
# Create the data for the plot
#| label: fig-AqiDifferencetTs
#| fig-cap: Mean daily difference of the AQI and its forecast between 2008 and 2018
#| fig-cap-location: top
#| echo: true
# Construct the data for the plot 
# Create the data for the plot
plot = filter(aqif, date < "2018-12-31") |>  
  mutate(season = hydroTSM::time2season(date, out.fmt = "seasons")) |> 
  mutate(season = str_to_title(season)) %>% left_join(., aqi) |> 
  mutate(diff = aqi-RealAqi)



ggplot(plot) + geom_bar(aes(x = date, y =diff, fill = season), stat = "identity", alpha = 0.5) +
  labs(y = "Air Quality Index (Forecast)", x = "") +
  theme_economist() %+replace% 
  theme(legend.title = element_blank(), axis.title.y = element_text(vjust = 2, angle = 90)) +
  scale_fill_manual(values = c("Spring" = "#F97A1F", "Summer" = "#C91D42", 
                               "Winter" = "#475ED1", "Autumn"  = "#B3B3B3"))
```

## Density of Daily Diff.

```{r}
#| label: fig-AqiDifferenceDensity
#| fig-cap: Distribution of the AQI forecast
#| fig-cap-location: top
#| echo: true

# Construct the plot-data
plot = filter(aqif, date < "2018-12-31") |>  
  mutate(season = hydroTSM::time2season(date, out.fmt = "seasons")) |> 
  mutate(season = str_to_title(season)) %>% left_join(., aqi) |> 
  mutate(diff = aqi-RealAqi)
# Plot the time series 
ggplot(plot) +  
  stat_halfeye(aes(x = diff), height = .6,justification = -.3,
               .width = 0, point_colour = NA, fill = "#141F52") +
  geom_point(aes(x = diff, y = 0), size = 0.2, alpha = .1, 
             position = position_jitter(seed = 1, height = 0.1), color = "red") +
  geom_boxplot(aes(x = diff), width = .15, fill = "transparent", outlier.shape = NA, color = "black") +
   coord_cartesian(ylim = c(-0.1, 0.8)) + theme_economist() %+replace% 
  theme(legend.title = element_blank(), axis.title.y = element_text(vjust = 2, angle = 90), 
        panel.background = element_rect(fill = "#EFF5F5"), 
        plot.background = element_rect(fill = "#EFF5F5")) + 
  labs(x = "average AQI forecast", y = "")
```

## Monthly Differences

```{r}
#| label: fig-AqiDiffMonthly
#| fig-cap: Mean monthly value of the AQI measure and its forecast
#| fig-cap-location: top
#| echo: true
# Create the data for the plot
plot = filter(aqif, date < "2018-12-31") |>  
  mutate(month = month(date, label = T)) %>% left_join(., aqi) |> 
  group_by(frame = month) %>% 
  summarise(`AQI Forecast` = mean(aqi, na.rm = T), `AQI Measure` = mean(RealAqi, na.rm = T)) %>% 
  gather(., var, value, -frame)


# Plot the time series 
ggplot(plot) + geom_line(aes(y = value, x = frame, group = var, linetype = var)) + 
  geom_point(aes(y = value, x = frame, group = 1, color = var)) + 
  theme_economist()%+replace% 
  theme(legend.title = element_blank(), axis.title.y = element_text(vjust = 2, angle = 90)) + 
  labs(x = "", y = "Average AQI forecast") + scale_color_manual(values = c("#141F52", "#c91d42"))
```

## Yearly Differences

```{r}
#| label: fig-AqiDiffYearly
#| fig-cap: Mean yearly value of the AQI measure and its forecast
#| fig-cap-location: top
#| echo: true
# Create the data for the plot
plot = filter(aqif, date < "2018-12-31") |>  
  mutate(year = year(date)) %>% left_join(., aqi) |> 
  group_by(frame = year) %>% 
  summarise(`AQI Forecast` = mean(aqi, na.rm = T), `AQI Measure` = mean(RealAqi, na.rm = T)) %>% 
  gather(., var, value, -frame)


# Plot the time series 
ggplot(plot) + geom_line(aes(y = value, x = frame, group = var, linetype = var)) + 
  geom_point(aes(y = value, x = frame, group = 1, color = var)) + 
  theme_economist()%+replace% 
  theme(legend.title = element_blank(), axis.title.y = element_text(vjust = 2, angle = 90)) + 
  labs(x = "", y = "Average AQI forecast") + scale_color_manual(values = c("#141F52", "#c91d42"))
```

## Weekday Differences

```{r}
#| label: fig-AqiDiffWeekday
#| fig-cap: Mean weekday value of the AQI measure and its forecast
#| fig-cap-location: top
#| echo: true
# Create the data for the plot
plot = filter(aqif, date < "2018-12-31") |>  
  mutate(weekday = weekdays(date)) %>% left_join(., aqi) |> 
  group_by(frame = weekday) %>% 
  summarise(`AQI Forecast` = mean(aqi, na.rm = T), `AQI Measure` = mean(RealAqi, na.rm = T)) %>% 
  gather(., var, value, -frame)


# Plot the time series 
ggplot(plot) + geom_line(aes(y = value, x = frame, group = var, linetype = var)) + 
  geom_point(aes(y = value, x = frame, group = 1, color = var)) + 
  theme_economist()%+replace% 
  theme(legend.title = element_blank(), axis.title.y = element_text(vjust = 2, angle = 90)) + 
  labs(x = "", y = "Average AQI forecast") + scale_color_manual(values = c("#141F52", "#c91d42"))
```

## Density distributions

```{r}
#| label: fig-AqiDensityRealForecast
#| fig-cap: Density functions of the real and forecasted AQI values
#| fig-cap-location: top
#| echo: true
plot = filter(aqif, date < "2018-12-31") |>  
  mutate(weekday = weekdays(date)) %>% left_join(., aqi) %>% 
  select(date, `AQI Forecast` = aqi, `AQI Measure` = RealAqi) %>%
  gather(., var, value, -date)


# Plot the time series 
ggplot(plot) +  ggdist::stat_halfeye(aes(x = value, fill = var), height = .6,  
                       justification = -.3,.width = 0, point_colour = NA, alpha = 0.5) +
  geom_boxplot(aes(x = value, color = var), width = .25, fill = "transparent", outlier.shape = NA) +
   coord_cartesian(ylim = c(-0.1, 0.8)) + theme_economist() %+replace% 
  theme(legend.title = element_blank(), axis.title.x = element_text(vjust = -2)) + 
  labs(x = "average AQI forecast", y = "") +
  scale_fill_manual(values = c("#141F52", "#c91d42")) +
  scale_color_manual(values = c("#141F52", "#c91d42"))
```
:::

Next, in @fig-AqiDiffMonthly, I portray the average monthly value of the AQI measure and its forecasts. It is interesting to see that the difference between the accurate measure and the forecast of the AQI is lower during the summer months of June to August and higher at the start of the year between January and April. @fig-AqiDiffYearly portrays a similar picture with yearly average differences. Notably, the ability of the NYSDEC to predict the AQI increased between 2008 and 2017. With a mean difference in 2008 of close to four units and in 2018 of less than 0.5. In figure @fig-AqiDiffWeekday, we add differences by day of the week where, although the value of the objective AQI measure is consistently higher than its forecast, we cannot distingish any pattern in the average weekday difference of both time series. Finally, @fig-AqiDensityRealForecast contains the density distributions of the real and forecasted AQIs. Two things stand out. First, the AQI forecast has more density around its median and a smaller tail; second, there is a clear difference in the bunching of the AQI around 100 units.